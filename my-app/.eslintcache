[{"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Projects\\components\\SprintDescrForOneProj.js":"1","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\utils\\axios.js":"2","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Main\\index.js":"3","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Main\\profileComponent.js":"4","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\Styles\\common.js":"5","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\Styles\\typography.js":"6","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Main\\newsCard.js":"7","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Main\\projectsCard.js":"8","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\Styles\\buttons.js":"9","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Main\\mySprint.js":"10","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Projects\\Sprint.js":"11","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\index.js":"12","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\App.js":"13","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\reportWebVitals.js":"14","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\store.js":"15","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Superadmin\\index.js":"16","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Superadmin\\permissions.js":"17","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Superadmin\\newsAdm.js":"18","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\User\\me.js":"19","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\User\\edit.js":"20","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\User\\Employe.js":"21","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Projects\\Project.js":"22","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Projects\\ProjectsEdit.js":"23","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Projects\\OneProjEdit.js":"24","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Projects\\newProject.js":"25","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Projects\\My.js":"26","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\actions\\auth.js":"27","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Auth\\index.js":"28","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Adminka\\Index.js":"29","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Adminka\\dashboard.js":"30","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Adminka\\Ticket.js":"31","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\actions\\user.js":"32","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Projects\\index.js":"33","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\User\\index.js":"34","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\Styles\\layout.js":"35","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Layout\\index.js":"36","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Office\\index.js":"37","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\DataBase\\index.js":"38","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\reducers\\index.js":"39","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\Styles\\tables.js":"40","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\Styles\\project.js":"41","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\actions\\tikets.js":"42","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\actions\\news.js":"43","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\Styles\\Forms.js":"44","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\actions\\projects.js":"45","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Auth\\RegisterCustomer.js":"46","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Auth\\Register.js":"47","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Auth\\Login.js":"48","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\types.js":"49","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Layout\\sidebar.js":"50","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Layout\\header.js":"51","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\reducers\\auth.js":"52","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\reducers\\users.js":"53","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\reducers\\tickets.js":"54","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\reducers\\news.js":"55","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\reducers\\projects.js":"56","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Layout\\MenuProfile.js":"57","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Layout\\Menu.js":"58","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Layout\\menuMobile.js":"59","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Projects\\components\\ProjTeam.js":"60"},{"size":2310,"mtime":1611342375682,"results":"61","hashOfConfig":"62"},{"size":574,"mtime":1610989307525,"results":"63","hashOfConfig":"62"},{"size":2432,"mtime":1611329790652,"results":"64","hashOfConfig":"62"},{"size":1206,"mtime":1611329858370,"results":"65","hashOfConfig":"62"},{"size":975,"mtime":1611321193004,"results":"66","hashOfConfig":"62"},{"size":1052,"mtime":1611342699041,"results":"67","hashOfConfig":"62"},{"size":759,"mtime":1611159629074,"results":"68","hashOfConfig":"62"},{"size":2445,"mtime":1611160330744,"results":"69","hashOfConfig":"62"},{"size":1185,"mtime":1611342375722,"results":"70","hashOfConfig":"62"},{"size":2891,"mtime":1611160326494,"results":"71","hashOfConfig":"62"},{"size":8672,"mtime":1611342375704,"results":"72","hashOfConfig":"62"},{"size":650,"mtime":1608048337028,"results":"73","hashOfConfig":"62"},{"size":4687,"mtime":1611325815015,"results":"74","hashOfConfig":"62"},{"size":375,"mtime":1608036111350,"results":"75","hashOfConfig":"62"},{"size":383,"mtime":1608036111349,"results":"76","hashOfConfig":"62"},{"size":1297,"mtime":1611182936662,"results":"77","hashOfConfig":"62"},{"size":2147,"mtime":1611182981965,"results":"78","hashOfConfig":"62"},{"size":8072,"mtime":1611182962302,"results":"79","hashOfConfig":"62"},{"size":1526,"mtime":1611329014617,"results":"80","hashOfConfig":"62"},{"size":3545,"mtime":1608836107957,"results":"81","hashOfConfig":"62"},{"size":1828,"mtime":1611329581046,"results":"82","hashOfConfig":"62"},{"size":19169,"mtime":1611342513766,"results":"83","hashOfConfig":"62"},{"size":2044,"mtime":1611182895817,"results":"84","hashOfConfig":"62"},{"size":3928,"mtime":1608836107956,"results":"85","hashOfConfig":"62"},{"size":3200,"mtime":1611182854511,"results":"86","hashOfConfig":"62"},{"size":1673,"mtime":1611182829419,"results":"87","hashOfConfig":"62"},{"size":4177,"mtime":1610963820942,"results":"88","hashOfConfig":"62"},{"size":1268,"mtime":1608813445863,"results":"89","hashOfConfig":"62"},{"size":3038,"mtime":1611182742851,"results":"90","hashOfConfig":"62"},{"size":1953,"mtime":1611182697177,"results":"91","hashOfConfig":"62"},{"size":1375,"mtime":1611182757131,"results":"92","hashOfConfig":"62"},{"size":1973,"mtime":1608588160985,"results":"93","hashOfConfig":"62"},{"size":3496,"mtime":1611183031085,"results":"94","hashOfConfig":"62"},{"size":1935,"mtime":1611183014565,"results":"95","hashOfConfig":"62"},{"size":3469,"mtime":1611329945858,"results":"96","hashOfConfig":"62"},{"size":284,"mtime":1611231133242,"results":"97","hashOfConfig":"62"},{"size":121,"mtime":1608036111329,"results":"98","hashOfConfig":"62"},{"size":140,"mtime":1608036111327,"results":"99","hashOfConfig":"62"},{"size":299,"mtime":1608252198301,"results":"100","hashOfConfig":"62"},{"size":712,"mtime":1608830479695,"results":"101","hashOfConfig":"62"},{"size":687,"mtime":1608689385148,"results":"102","hashOfConfig":"62"},{"size":2490,"mtime":1608036111342,"results":"103","hashOfConfig":"62"},{"size":2782,"mtime":1608386626317,"results":"104","hashOfConfig":"62"},{"size":351,"mtime":1608813445859,"results":"105","hashOfConfig":"62"},{"size":8614,"mtime":1611342375684,"results":"106","hashOfConfig":"62"},{"size":159,"mtime":1608036111326,"results":"107","hashOfConfig":"62"},{"size":2221,"mtime":1608813445862,"results":"108","hashOfConfig":"62"},{"size":1588,"mtime":1608836107954,"results":"109","hashOfConfig":"62"},{"size":2053,"mtime":1611342375687,"results":"110","hashOfConfig":"62"},{"size":1722,"mtime":1611231278119,"results":"111","hashOfConfig":"62"},{"size":2081,"mtime":1611322600258,"results":"112","hashOfConfig":"62"},{"size":2174,"mtime":1610963820943,"results":"113","hashOfConfig":"62"},{"size":1196,"mtime":1608659027769,"results":"114","hashOfConfig":"62"},{"size":1189,"mtime":1608036111347,"results":"115","hashOfConfig":"62"},{"size":1465,"mtime":1608342345158,"results":"116","hashOfConfig":"62"},{"size":4717,"mtime":1611342375686,"results":"117","hashOfConfig":"62"},{"size":608,"mtime":1608836107955,"results":"118","hashOfConfig":"62"},{"size":3250,"mtime":1611325939734,"results":"119","hashOfConfig":"62"},{"size":1490,"mtime":1611322650264,"results":"120","hashOfConfig":"62"},{"size":1096,"mtime":1611342375681,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"125"},"1yw5ccx",{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"125"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"125"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"125"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"125"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"125"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"125"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"125"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"125"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"125"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"125"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"125"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"125"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":38,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"125"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"125"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"125"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"125"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"125"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"125"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"125"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"125"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"125"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"125"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"125"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"125"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"125"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"125"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"125"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"125"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"125"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"125"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"125"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"125"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"125"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"125"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"273"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"125"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"125"},"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Projects\\components\\SprintDescrForOneProj.js",["282"],"import { useEffect, useState } from \"react\"\r\nimport { Button } from \"../../../Styles/buttons\"\r\nimport { Card } from \"../../../Styles/common\"\r\nimport './sprintdescr.css'\r\n\r\n\r\nconst SprintDescription = ({sprintname, index, dateOpen,taskcomplite, alltasks, history, params, id}) => {\r\n\tconst [loaded, setLoaded] = useState (0)\r\n\tconst [diff, setDiff] = useState (0)\r\n\tuseEffect (()=> {\r\n\t\t\tlet d1 = new Date ()\r\n\t\t\tlet d2 = new Date (dateOpen.slice(0, 10).replace(/-/g, \"/\"))\r\n\t\t\tconsole.log (d1, d2)\r\n\t\t\tsetTimeout (()=>{\r\n\t\t\t\tsetDiff (Math.abs(d1-d2)/86400000)\r\n\t\t\t\tsetLoaded (true)\r\n\t\t\t},50)\r\n\t\t\r\n\t},[])\r\n\r\n\t\t\r\n\t\t\r\n\r\n\r\n\treturn (\r\n\t<>\r\n\t\t{!loaded?<div>loading...</div>:(<Card>\r\n\t\t\t<div className='sprintdescr__grid__container'>\r\n\t\t\t\t<div>{dateOpen.slice(5,10).replace(/-/g, \".\")}-01.??</div>\r\n\t\t\t\t<div>Спринт №{index}</div>\r\n\t\t\t\t<div>Короткое описание</div>\r\n\t\t\t\t<div>До дедлайна: {diff.toString().slice(0,1)} д.</div>\r\n\t\t\t\t<div>Задачи {taskcomplite}/{alltasks} </div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Button fontSize={'16px'} grey>Добавить в избранное</Button>\r\n\t\t\t\t\t<Button fontSize={'16px'} onClick={() => history.push(`/projects/${params}/${id}`)}>Подробнее</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t</Card>)}\r\n\t\t</>\r\n\t)\r\n}\r\nexport default SprintDescription",["283","284"],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\utils\\axios.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Main\\index.js",["285","286"],"import styles from '../../Styles/modules/main/main.module.css'\r\nimport Profile from './profileComponent'\r\nimport NewsCard from './newsCard'\r\nimport ProjectsCard from './projectsCard'\r\n\r\n\r\n\r\n//профиль пользователя по ID\r\nimport './main.css'\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { allNews } from '../../redux/actions/news';\r\n\r\n// import { allUsers } from \"../../redux/actions/user\";\r\nimport { Container} from '../../Styles/common'\r\nimport { Bold, Thin } from '../../Styles/typography'\r\nimport { useEffect } from 'react'\r\n\r\n///////////////\r\nconst Main = ({history}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const loadedNews = useSelector(state => state.news.loaded)\r\n    const listNews = useSelector(state => state.news.news)\r\n    const loadedUser = useSelector(state => state.auth.loaded)\r\n    const user = useSelector(state => state.auth.user)\r\n\r\nuseEffect(()=>{\r\n    dispatch(allNews())\r\n},[])\r\n\r\n    return (\r\n        <>\r\n        {!loadedUser ? <p> loading..</p> : (\r\n\r\n            <div className={styles.mainContainer}>\r\n\r\n                <Profile className={styles.profile} user={user} history={history} change/>\r\n            \r\n\r\n                <div className={styles.projects}>\r\n                    <Bold color='black' size='36' className={styles.myProj}>Мои проекты</Bold>\r\n\r\n                    {user.projects.map((el,i)=>{\r\n                        \r\n                        return(\r\n                            <ProjectsCard project={el}  sprints={user.sprints} history={history} />\r\n                        )\r\n                    })}\r\n                    \r\n                </div>\r\n\r\n\r\n                <div className={styles.news}>\r\n                    <Thin color='black' size='24'>Новости бюро:</Thin>\r\n\r\n                    {!loadedNews? <p>loading...</p> : \r\n                        \r\n                        listNews.map((el,i)=>{\r\n                            \r\n                                return(\r\n                                i<3 && <NewsCard el={el}/>\r\n                                )\r\n                            })\r\n                    }\r\n                    \r\n                    <Bold color='#3F496C' size='12' className={styles.allNews}>Все новости</Bold>       \r\n                </div>\r\n\r\n\r\n                \r\n                        \r\n            </div>)\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Main","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Main\\profileComponent.js",["287","288"],"import { url } from '../utils/axios';\r\nimport styles from '../../Styles/modules/components/profile.module.css'\r\n\r\nimport { Bold, Light } from '../../Styles/typography'\r\nimport { ButtonText } from '../../Styles/buttons'\r\n\r\nconst ProfileComponent = ({user, history, change}) => {\r\n\r\n    return(\r\n        <div className={styles.profile}>\r\n            <img className={styles.avatar} src={`${url}/${user != null? (user!= undefined? user.avatar:''):''}`}/>\r\n            <Bold size='30' className={styles.name}> {user.name}</Bold>\r\n                {!change? <div className={styles.change}></div> :\r\n                <ButtonText color='#3F496C 80 %;' fontSize='12' className={styles.change} onClick={() => history.replace(`/edit`)}>изменить</ButtonText>\r\n                }  \r\n            <Light color='#4B4B4B' size='16' className={styles.pos}>Должность: {user.position}</Light>\r\n            <Bold size='24' className={styles.contacts}>Контакты:</Bold>\r\n            <Light color='#4B4B4B' size='16' className={styles.mail}>{user.email}</Light>\r\n            <Light color='#4B4B4B' size='16' className={styles.rocket}>rocket</Light>\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileComponent","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\Styles\\common.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\Styles\\typography.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Main\\newsCard.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Main\\projectsCard.js",["289","290","291","292","293","294","295","296"],"import styles from '../../Styles/modules/components/projectsCard.module.css'\r\nimport { Card } from '../../Styles/common'\r\nimport { Button } from '../../Styles/buttons'\r\nimport { Bold,Light,Thin, Regular } from '../../Styles/typography'\r\nimport { useEffect, useState } from 'react'\r\nimport  MySprint from './mySprint'\r\n\r\nconst ProjectsCard = ({project, sprints, history}) => {\r\n    const [filt, setFilt] = useState(null)\r\n    const [daysLeft, setDaysLeft] = useState(null)\r\n\r\nuseEffect(()=>{\r\n    \r\n    if (sprints!=undefined){\r\n\r\n         let filterAll = (item) => {\r\n             return project.sprints.some(el => el==item )\r\n             }\r\n             \r\n         const filtered = sprints!=undefined && sprints.filter(item => filterAll(item._id))   \r\n         setFilt(filtered)\r\n    } \r\n },[sprints])\r\n\r\n useEffect(()=>{\r\n     const now = new Date()\r\n     const finish = new Date(project.dateFinish)\r\n     const left = (finish.getTime() - now.getTime()) / (1000*60*60*24)\r\n     const days = Math.floor(left)\r\n   \r\n    setDaysLeft(days)\r\n },[])\r\n\r\n\r\n    return(\r\n        <Card className={styles.projContainer}>\r\n\r\n                \r\n                    <Bold size='24' className={styles.title} >{project.title}</Bold>\r\n                    <Light size='16' className={styles.description}>{project.about!=null? project.about: 'Короткое описание проекта'}</Light>\r\n                    <Light size='18' className={styles.dates} >{project.dateStart.slice(5,10).split('-').reverse().join('.') +' \\u2014 '+ project.dateFinish.slice(5,10).split('-').reverse().join('.')} </Light>\r\n                    <Light size='18' className={styles.left}>Осталось: {daysLeft} {daysLeft<1?'день': daysLeft<5? 'дня': 'дней'}</Light>\r\n                    <Light size='16' className={styles.filter}>#ЭП</Light>\r\n                    <Button className={styles.button} onClick={() => history.replace(`/projects/${project.crypt}`)}>Подробнее</Button>\r\n                    <div className={styles.sprints}>\r\n\r\n                        {sprints!= undefined && filt !=null && filt.map((item,i)=>{\r\n                            \r\n                            return(\r\n                              <MySprint content={item}/>\r\n                            )\r\n                        })}\r\n                    </div>              \r\n                            \r\n            \r\n        </Card>\r\n    )\r\n}\r\nexport default ProjectsCard\r\n","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\Styles\\buttons.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Main\\mySprint.js",["297","298","299","300"],"import styles from '../../Styles/modules/components/mySprint.module.css'\r\nimport { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { finishTask, } from '../../redux/actions/projects'\r\nimport { Bold, Light } from '../../Styles/typography'\r\n\r\nconst MySprint = ({content}) => {\r\nconst dispatch = useDispatch()\r\nconst user = useSelector(state => state.auth.user)\r\nconst sprint = content\r\nconst [progress, setProgress] = useState(0)\r\nconst [sprintDaysLeft, setSprintDaysLeft] = useState(null)\r\n\r\n\r\nuseEffect(()=>{\r\n\r\n    const done = sprint.tasks.reduce((sum,curr)=>{\r\n    return curr.taskStatus == true ? (sum = sum + 1) : sum = sum\r\n    }, 0)\r\n\r\n    setProgress(done)\r\n    \r\n\r\n    if(sprint.dateClosePlan!=null){\r\n        const now = new Date()\r\n        const finish = new Date(sprint.dateClosePlan)\r\n        const left = (finish.getTime() - now.getTime()) / (1000*60*60*24)\r\n        const days = Math.floor(left)\r\n      \r\n        setSprintDaysLeft(days)\r\n    } else {\r\n        setSprintDaysLeft('?')\r\n    }\r\n\r\n},[sprint])\r\n\r\nconst onCheck = (e,id) => {\r\n\r\n    let taskid = e.target.value;\r\n    dispatch(finishTask({taskid, id}))\r\n\r\n    setProgress(e.target.checked?progress+1:progress-1)\r\n}\r\n\r\n\r\n\r\n    return(\r\n        <div className={styles.sprintContainer}>\r\n\r\n               <Light size='18' className={styles.date}>{sprint.dateOpen.slice(5,10).split('-').reverse().join('.') +' \\u2014 '+ (sprint.dateClosePlan!=null ? sprint.dateClosePlan.slice(5,10).split('-').reverse().join('.') : '')}</Light> \r\n               <Light size='18' className={styles.left}>Осталось: {sprintDaysLeft} {sprintDaysLeft<1?'день': sprintDaysLeft<5? 'дня': 'дней'}</Light>\r\n               <Bold size='20' className={styles.tasks}>Задачи</Bold>\r\n               <Bold size='20' className={styles.progress}>\r\n                    <progress className={styles.progressBar} id=\"file\" value={progress} max={sprint.tasks.length}>  </progress>\r\n                    {' ' + progress + '/' + sprint.tasks.length}\r\n                </Bold>\r\n               <div className={styles.list}>\r\n                            \r\n                   {sprint.tasks.map((el,i)=>{\r\n\r\n                       return(\r\n                            <Light size='16'  className={styles.parag}>\r\n                                <input className={styles.input} style={{pointerEvents: user.permission=='user'?'none':'block'}} type=\"checkbox\" id=\"vehicle1\" name=\"vehicle1\" defaultChecked={el.taskStatus} value={el._id} onChange={(e)=>onCheck(e,sprint._id)}/> \r\n                                {el.taskTitle!=''?el.taskTitle:'Без названия'}\r\n                            </Light>\r\n                       )\r\n                   })\r\n                   }\r\n               </div>\r\n                            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MySprint","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Projects\\Sprint.js",["301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318"],"import { useEffect, useState, useRef} from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { addTasks, finishSprint, finishTask, getSprint, } from \"../../redux/actions/projects\";\r\nimport { addToChosen } from '../../redux/actions/auth'\r\nimport { useForm, FormProvider, useFormContext, useFieldArray, Controller } from \"react-hook-form\";\r\nimport './sprint.css'\r\nimport {Button} from '../../Styles/buttons'\r\nimport { Table, Td, Tr } from \"../../Styles/tables\";\r\nimport { Container, Card, } from \"../../Styles/common\";\r\nimport { H1, H3} from '../../Styles/typography'\r\n\r\nconst Sprint = ({match, history}) => {\r\n  const dispatch = useDispatch();\r\n    let {id} = match.params;\r\n    let back = match.url;\r\n    const sprint = useSelector(state => state.projects.sprint)\r\n    const taskArr = useSelector(state => state.projects.sprint)\r\n    // const project = useSelector(state => state.projects.project)\r\n    const loading = useSelector(state => state.projects.sprintLoad)\r\n    const msg = useSelector(state => state.projects.msg)\r\n    const user = useSelector(state => state.auth.user)\r\n\r\n\r\n    const { register, control, handleSubmit, reset, watch } = useForm({\r\n        defaultValues: {\r\n            tasks: [{ taskTitle: \"задача\", workVolume: \"5\", taskState: false }]\r\n          }\r\n    });\r\n\r\n    const { fields, append, prepend, remove, swap, move, insert } = useFieldArray({\r\n      control, // control props comes from useForm (optional: if you are using FormContext)\r\n      name: \"tasks\", // unique name for your Field Array\r\n    });\r\n    \r\n    \r\n\r\n\r\n\r\n    //submit for new tasks array;\r\n    const onSubmit = (data) =>{\r\n            let tasks = data;\r\n            dispatch(addTasks({tasks, id }))\r\n           \r\n            setTimeout(() => {\r\n              return history.push(`${back.slice(0,14)}`);\r\n          }, 200);\r\n            \r\n\r\n    }\r\n  \r\n    useEffect(() => {\r\n        \r\n            dispatch(getSprint(id))    \r\n           console.log(user)\r\n    }, [])\r\n\r\n\r\n \r\n    const chosenSprint = (e) => {\r\n\r\n      dispatch(addToChosen(id));\r\n\r\n     \r\n  }\r\n   \r\n    const onChange = (e) => {\r\n       \r\n    \r\n        let taskid = e.target.value;\r\n        dispatch(finishTask({taskid, id}))\r\n       \r\n    }\r\n\r\n\r\n   const handleSprint = (e) => {\r\n      \r\n        dispatch(finishSprint(id));\r\n        setTimeout(() => {\r\n          return history.replace(`${back.slice(0,14)}`);\r\n  }, 200);\r\n   }\r\n\r\n\r\n   const handleBack = (e) => {\r\n\r\n    \r\n    // //зачем тут таймаут? \r\n    // setTimeout(() => {\r\n      return history.push(`${back.slice(0,14)}`);\r\n    // }, 200);\r\n    \r\n   }\r\n\r\n    return (\r\n        <div>\r\n           {!loading ? <p> loading...</p> : (\r\n           <div className='sprint__grid'> \r\n          <Card style={{height:'fit-content', paddingBottom:'20px'}} >\r\n            \r\n               \r\n                    \r\n                                  <H1>{sprint.status?'Выполненные задачи:':'Текущие задачи:'}</H1> \r\n\r\n                        {taskArr.tasks.map((task, ind) => {\r\n                            return (\r\n                              \r\n                                <div key={ind} >\r\n                                  \r\n                                    <form >\r\n                                      <div className=\"sprint__tasks\">\r\n                                      \r\n                                          <p className=\"sprint__row\">{ind+1}.  {task.taskTitle!==''?task.taskTitle:'Без названия'}</p>\r\n                                          <label style={{display:`${sprint.status?'none':'block'}`}}></label>\r\n                                          <input style={{display:`${sprint.status?'none':'block'}`}} type=\"checkbox\" id=\"vehicle1\" name=\"vehicle1\" defaultChecked={task.taskStatus} value={task._id} onChange={onChange}/>\r\n\r\n                                       </div>\r\n                                    </form>\r\n                                    \r\n                                </div>\r\n                                 )\r\n                        })}\r\n{/* \r\n                        {sprint.status && <div>\r\n                            <H1>невыполненные задачи</H1>\r\n                            {taskArr.tasks.filter(task => !task.taskStatus).map((task, ind) => {\r\n                            return (\r\n                              \r\n                                <div key={ind} className=\"sprint__tasks\">\r\n                                    <p></p>\r\n                                    <form>\r\n                                        <div>\r\n                                          \r\n                                            <p>{ind+1}.  {task.taskTitle!==0?task.taskTitle:'Без названия'}</p>\r\n                                            <label></label>\r\n                                            <input type=\"checkbox\" id=\"vehicle1\" name=\"vehicle1\" defaultChecked={task.taskStatus} value={task._id} onChange={onChange}/>\r\n\r\n                                        </div>\r\n                                    </form>\r\n                                    \r\n                                </div>\r\n                                 )\r\n                        })}\r\n                          </div>} */}\r\n                        \r\n                   \r\n             \r\n                <Button onClick={()=>handleBack()} style={{marginTop: '20px'}}>Вернуться к проекту</Button>\r\n                <Button onClick={handleSprint} style={{display:`${sprint.status?'block':'none'}`,marginTop: '20px'}}> Восстановить спринт</Button>\r\n            </Card>\r\n\r\n<Card style={{opacity: `${sprint.status?0: 1}`,pointerEvents: `${sprint.status?'none': 'auto'}`,textAlign: 'right', height:'fit-content', paddingBottom:'20px'}}>\r\n\r\n\r\n<H1> Добавить задачи </H1>\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <ul style={{ listStyleType: 'none'}}>\r\n\r\n        {fields.map((item, index) => (\r\n          <li key={item.id} style= {{display:'flex'}}>\r\n            <input\r\n            style={{width:'125px',height: '20px'}}\r\n              name={`tasks[${index}].taskTitle`}\r\n              ref={register()}\r\n              placeholder=\"Название задачи\" // make sure to set up defaultValue\r\n            />\r\n          <input\r\n          type=\"number\"\r\n        \r\n              name={`tasks[${index}].workVolume`}\r\n              ref={register()}\r\n              style={{width:'125px',height: '20px'}}\r\n              placeholder=\"Объем в часах\" \r\n            />\r\n            \r\n            <Button type=\"button\" style={{display: `${fields.length===1?'none':'block'}`, marginTop: '10px', marginBottom: '10px',marginLeft:'auto', marginRight:'0'}} onClick={() => remove(index)}>Удалить</Button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      \r\n      <Button\r\n        type=\"button\"\r\n        onClick={() => append({ firstName: \"appendBill\", lastName: \"appendLuo\" })}\r\n      >\r\n        Добавить\r\n      </Button>\r\n      <Button type=\"submit\">Сохранить</Button>\r\n    </form>\r\n\r\n            <br>\r\n            </br>\r\n            <Button onClick={handleSprint}>Завершить спринт</Button>\r\n            <br></br> <br></br>\r\n            <Button onClick={chosenSprint}>Добавить спринт в избранное</Button>\r\n    </Card>\r\n            </div>\r\n               )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sprint","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\index.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\App.js",["319","320","321","322"],"\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './App.css';\r\nimport Auth from './components/Auth/index'\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  \r\n} from \"react-router-dom\";\r\nimport Layout from './components/Layout';\r\nimport { useEffect, useState } from 'react';\r\nimport { loadUser } from './redux/actions/auth';\r\n\r\n//pages\r\nimport Admin from './components/Adminka/Index';\r\nimport DataBase from './components/DataBase';\r\nimport Projects from './components/Projects';\r\nimport Office from './components/Office';\r\nimport Users from './components/User';\r\nimport Dashboard from './components/Adminka/dashboard';\r\nimport MyProfile from './components/User/me';\r\nimport Employe from './components/User/Employe';\r\nimport Edit from './components/User/edit';\r\nimport Ticket from './components/Adminka/Ticket';\r\nimport ProjectNew from './components/Projects/newProject';\r\nimport Project from './components/Projects/Project';\r\nimport Sprint from './components/Projects/Sprint';\r\nimport ProjectsEdit from './components/Projects/ProjectsEdit';\r\nimport OneProjEdit from './components/Projects/OneProjEdit';\r\nimport Main from './components/Main/index'\r\nimport Permissions from './components/Superadmin/permissions';\r\nimport Superadmin from './components/Superadmin/index.js';\r\nimport { createBrowserHistory } from \"history\";\r\nimport MyProjects from './components/Projects/My';\r\nimport News from './components/Superadmin/newsAdm';\r\nimport { innerBackend, setAuthToken } from './components/utils/axios';\r\nimport { Container } from '../src/Styles/common'\r\n\r\n\r\n\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  const history = createBrowserHistory();\r\n  const [load, setLoad] = useState(false)\r\n  const auth = useSelector(state => state.auth.isAuthenticated)\r\n  const loaded = useSelector(state => state.auth.loaded)\r\n  const [dimensions, setDimensions] = useState({\r\n    height: window.innerHeight,\r\n    width: window.innerWidth,\r\n  })\r\n\r\n  //chek auth token on render\r\n  useEffect(() => {\r\n    setAuthToken(localStorage.token)\r\n\r\n    if(localStorage.token){\r\n      dispatch(loadUser());\r\n\r\n    }\r\n\r\n\r\n  })\r\n\r\n\r\n  useEffect(() => {\r\n    if (loaded) {\r\n      console.log(localStorage.token, 'FOR POSTMAN'); //for postman tests\r\n      // innerBackend(localStorage.token);\r\n      setAuthToken(localStorage.token)\r\n      setTimeout(() => {\r\n        dispatch(loadUser());\r\n      }, 1000);\r\n    }\r\n    // dispatch(loadUser());\r\n   \r\n  }, [loaded])\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n    setDimensions ({width: window.innerWidth, height: window.innerHeight})  \r\n  }\r\n  \r\n    window.addEventListener('resize', handleResize)\r\n  \r\n    return _ => {\r\n      window.removeEventListener('resize', handleResize)\r\n    \r\n  }\r\n  })\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {!auth ? <Auth /> : (\r\n      <Router history={history}> \r\n        \r\n        <Layout dimensions={dimensions}/> \r\n        <Switch>\r\n        <Container dimensions={dimensions}>\r\n          {/* main */}\r\n          <Route exact path=\"/\" component={ Main } />\r\n          \r\n\r\n          \r\n          {/* сисадминошная */}\r\n          <Route exact path=\"/help\" component={ Admin } />\r\n          <Route exact path=\"/tickets\" component={ Dashboard } />\r\n          <Route exact path=\"/tickets/:id\" component={Ticket} />\r\n\r\n\r\n\r\n          <Route exact path=\"/db\" component={ DataBase } />\r\n          <Route exact path=\"/office\" component={ Office } />\r\n          {/* projects */}\r\n          <Route exact path=\"/projects\" component={ Projects } />\r\n          <Route exact path=\"/projects/my\" component={ MyProjects } />\r\n\r\n          <Route exact path=\"/projects/:id\" component={ Project } />\r\n          <Route exact path=\"/projects/:id/:id\" component={ Sprint } />\r\n          <Route exact path=\"/admin/editproj\" component={ ProjectsEdit } />\r\n          <Route exact path=\"/admin/editproj/:id\" component={ OneProjEdit } />\r\n          <Route exact path=\"/new\" component={ ProjectNew } /> \r\n\r\n          {/* users */}\r\n          <Route exact path=\"/users\" component={ Users } /> \r\n          <Route exact path=\"/users/me\" component={ MyProfile } />\r\n          <Route exact path=\"/users/:id\" component={ Employe } />\r\n          <Route exact path=\"/edit\"component={ Edit } />\r\n          {/*adminka */}\r\n          <Route exact path=\"/admin\" component={ Superadmin } /> \r\n          <Route exact path=\"/admin/permissions\" component={ Permissions } />\r\n          <Route exact path=\"/admin/news\" component={ News } />\r\n          \r\n\r\n        </Container>\r\n        </Switch>\r\n     \r\n\r\n\r\n        \r\n        </Router> )\r\n    }\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\reportWebVitals.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\store.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Superadmin\\index.js",["323","324","325","326","327","328","329","330","331","332"],"import { NavLink } from \"react-router-dom\";\r\nimport { useDispatch, useSelector,  } from \"react-redux\"\r\nimport { useEffect, useRef } from \"react\";\r\nimport { permissionReturn, userPermissions } from \"../../redux/actions/user\";\r\nimport  News  from './newsAdm'\r\nimport './superadmin.css'\r\nimport { Container, Card, } from '../../Styles/common';\r\nimport { Button } from '../../Styles/buttons';\r\nimport { StyledLink} from '../../Styles/layout'\r\nimport { H1, H3} from '../../Styles/typography'\r\n\r\n\r\nconst Superadmin = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst user = useSelector(state => state.auth.user)\r\n\tconst admBody = useRef(null)\r\n\r\n\tconst newsScroll = () => {\r\n\t\twindow.scrollTo({\r\n\t\t\ttop: 9000,\r\n\t\t\tbehavior: \"smooth\"\r\n\t\t})\r\n\t}\r\n\r\n\tuseEffect(()=>{\r\n\t\tdispatch (permissionReturn())\r\n\t},[])\r\n    return (\r\n\t\t\r\n        <div> \r\n\t\t\t<Card>\r\n\t\t\t<H1> Админка </H1>\r\n\t\t\r\n\t\t\t<StyledLink to='/admin/permissions'  >Страница доступов</StyledLink>\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t<StyledLink to='/admin/editproj'  >Редактировать проекты</StyledLink>\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t<StyledLink to='/admin/news'  >Редактировать новости</StyledLink>\r\n\t\t\r\n\r\n\t\t\t{/* <News permissions={user.permissions} /> */}\r\n\r\n\t\t</Card>\r\n\r\n\t\t</div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Superadmin","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Superadmin\\permissions.js",["333","334","335","336","337","338"],"\r\n\r\n\r\nimport {  Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\nimport React, { useEffect, useRef } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n// import { allTickets } from \"../../redux/actions/tikets\";\r\n// import { allProjects } from '../../redux/actions/projects';\r\nimport { allUsers, userPermissions } from \"../../redux/actions/user\";\r\n\r\nimport { Table, Td, Tr } from \"../../Styles/tables\";\r\nimport { Status } from \"../../Styles/project\";\r\nimport { Container, Card, } from \"../../Styles/common\";\r\nimport { H1, H3} from '../../Styles/typography'\r\n\r\nconst Permission = ({history}) => {\r\n    const dispatch = useDispatch();\r\n    // const auth = useSelector(state => state.auth.isAuthenticated)\r\n    \r\n       \r\n\tconst loaded = useSelector(state => state.users.loaded)\r\n\tconst team = useSelector(state => state.users.users)\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\t\tdispatch(allUsers())\r\n\t\t// console.log ('team')\r\n\t}, [])\r\n\t\r\n\tconst selected =(e, id)=> {\r\n\t\t\tconsole.log (e.target.value, id)\r\n\t\t\tdispatch(userPermissions(e.target.value, id))\r\n\t}\r\n    return (\r\n\t\t<div>\r\n\t\t\t<Card>\r\n\t\t{!loaded? (<div></div>):\r\n        (<div> \r\n            <H1> Все пользователи</H1>\r\n            \r\n               \r\n                 \r\n                    <Table className=\"table__allproj\" >\r\n  \r\n    <Tr columns='1fr 1fr 1fr' top>\r\n    \t<Td>Пользователь</Td>\r\n      \t<Td>Должность</Td>\r\n      \t<Td>Доступ</Td>\r\n      \r\n    </Tr>\r\n   \r\n       {team.map((team,index) => {\r\n           return(  \r\n\t\t\t\r\n\t\t\t<Tr columns='1fr 1fr 1fr' key={index} >\r\n\t\t\t\t<Td>{team.name}</Td>\r\n\t\t\t\t<Td>{team.position}</Td>\r\n\t\t\t\t<Td> \r\n\t\t\t\t<select  defaultValue={team.permission} style={{width: '100px',marginTop:'10px', overflow:'hidden', outline: 'none', border:'none'}} onChange={(e)=>selected(e, team._id)}>\r\n\t\t\t\t\t<option  value='user'>user</option>\r\n\t\t\t\t\t<option  value='admin'>admin</option>\r\n\t\t\t\t\t<option  value='manager'>manager</option>\r\n\t\t\t\t</select></Td>\r\n\t\t\t</Tr>\r\n    \t )\r\n       }\r\n\t   )\r\n\t   } \r\n     \r\n\r\n</Table>\r\n              \r\n            \r\n\t\t</div>\r\n\t\t)}\r\n\t\t</Card>\r\n\t\t</div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Permission","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Superadmin\\newsAdm.js",["339","340","341","342","343","344","345","346","347"],"\r\nimport {  Redirect } from 'react-router-dom';\r\n\r\n\r\n//профиль пользователя по ID\r\nimport './news.css'\r\nimport { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { allTickets } from \"../../redux/actions/tikets\";\r\nimport { allNews, createNews, deleteNews, updateNews} from '../../redux/actions/news';\r\n// import { allUsers } from \"../../redux/actions/user\";\r\nimport { Container, Card, } from '../../Styles/common';\r\nimport { Button } from '../../Styles/buttons';\r\nimport { H1, H3} from '../../Styles/typography'\r\n\r\n//////////////////////////////////////// ШО ЭТО\r\nimport Me from '../User/me'\r\nimport { url } from '../utils/axios';\r\n///////////////\r\nconst News = ({permissions}) => {\r\n    const dispatch = useDispatch();\r\n    // const auth = useSelector(state => state.auth.isAuthenticated)\r\n    const loaded = useSelector(state => state.news.loaded)\r\n    const listNews = useSelector(state => state.news.news)\r\n    const user = useSelector(state => state.auth.user)\r\n\r\n    const [newsOpen, setOpen] = useState({\r\n        status: false,\r\n        post: '',\r\n    })\r\n    const [deleteConfirm, setConfirm] = useState({\r\n        status: false,\r\n        post:'',\r\n    })\r\n\r\n    const [formData, setFormData ] = useState({\r\n        \r\n        title: '',   //title\r\n        subtitle: '', \r\n        text: '',  \r\n      \r\n      });\r\n  \r\n      const { title, subtitle, text,} = formData;\r\n\r\n\r\n    const onChange = e => {\r\n\r\n            e.preventDefault(); \r\n\r\n            setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    }\r\n//     const Redirect = () => {  \r\n//         return history.push(`/projects`)\r\n// }\r\n    const onSubmit = async e => {\r\n        \r\n            e.preventDefault();\r\n\r\n            dispatch(createNews(formData))\r\n            setTimeout(() => {\r\n                setConfirm({status:false, post:''})\r\n                dispatch(allNews())\r\n            }, 100);  \r\n            setFormData({\r\n                title:'',subtitle:'',text:''\r\n            })\r\n    }\r\n    const onDelete = async (e,id) => {\r\nconsole.log(deleteConfirm)\r\n        e.preventDefault();\r\n        \r\n        setConfirm({status:true,post:id})\r\n       \r\n    }\r\n    const onUpdate = async (e,id) => {\r\n\r\n        e.preventDefault();\r\n        setOpen({status:true, post:id})\r\n       setFormData({\r\n        title: id.title,   \r\n        subtitle: id.subtitle, \r\n        text: id.text,  \r\n       })\r\n    }\r\n    const deleteNewsButton = async e => {\r\n        e.preventDefault();\r\n\r\n        dispatch(deleteNews(deleteConfirm.post._id))\r\n        setTimeout(() => {\r\n            setConfirm({status:false, post:''})\r\n            dispatch(allNews())\r\n        }, 100);\r\n    }\r\n\r\n    \r\n    const updateNewsButton = async e => {\r\n        e.preventDefault();\r\n\r\n        let id = newsOpen.post._id\r\n        let data = formData\r\n        dispatch(updateNews({id, data}))\r\n\r\n\r\n        setTimeout(() => {\r\n            setOpen({status:false, post:''})\r\n            dispatch(allNews())\r\n        }, 100);\r\n    }\r\n  \r\n\r\n\r\nuseEffect(()=>{\r\n dispatch(allNews())\r\n console.log(user,'hiiiiiiiiiiii')\r\n},[])\r\n\r\n    return (\r\n\r\n<div className='news__container'>\r\n\t\t\t\t\r\n\r\n\r\n<Card className='create'>Создать новость\r\n<form className='form news__form' onSubmit={onSubmit}>\r\n           \r\n            <input \r\n                className='news__title'\r\n                type='text'\r\n                placeholder='Заголовок'\r\n                name='title'\r\n                value={title}\r\n                onChange={e => onChange(e)}/>\r\n\r\n   \r\n            <input \r\n                className='news__subtitle'\r\n                type='text'\r\n                placeholder='Подзаголовок'\r\n                name='subtitle'\r\n                value={subtitle}\r\n                onChange={e => onChange(e)}/>\r\n\r\n            <textarea \r\n                className='news__texts'\r\n                \r\n                placeholder='Текст'\r\n                name='text'\r\n                value={text}\r\n                onChange={e => onChange(e)}/>\r\n            \r\n\r\n\r\n\r\n            <button className='news__submit'  type=\"submit\">Создать новость</button>\r\n\r\n            </form>\r\n            </Card>\r\n                \r\n\t\t\t\t{!loaded? <p>loading...</p> : \r\n            \r\n            <Card className='table'>\r\n                <h2>Новости:</h2>\r\n                {listNews.map((el,i)=>{\r\n                    \r\n                    return(\r\n                        <div className='news__tr' >\r\n                            <p className='news__td news__td1'><h4 className='descript'>Title: </h4>{el.title}</p>\r\n                            <p className='news__td news__td2'><h4 className='descript'>Subtitle: </h4>{el.subtitle}</p>\r\n                            <p className='news__td news__td3'><h4 className='descript'>Text: </h4>{el.text}</p>\r\n\r\n                            <button className='table__update' onClick={(e)=>onUpdate(e, el)}>update</button>\r\n                            <button className='table__delete' onClick={(e)=>onDelete(e, el)}>delete</button>\r\n                            \r\n                        </div>\r\n                    )\r\n                })}\r\n            </Card>\r\n            \r\n            }\r\n\r\n\r\n\r\n\r\n\r\n            {!newsOpen.status? <div/>:\r\n            <Card className='update__bg'>\r\n\t\t\t\t<div className='news__update'>\r\n\t\t\t\t\t\tРедактировать новость\r\n                        <form className='form news__form' onSubmit={onUpdate}>\r\n           \r\n                                    <input \r\n                                        className='news__title'\r\n                                        type='text'\r\n                                        placeholder='Заголовок'\r\n                                        name='title'\r\n                                        value={title}\r\n                                        onChange={e => onChange(e)}/>\r\n\r\n                            \r\n                                    <input \r\n                                        className='news__subtitle'\r\n                                        type='text'\r\n                                        placeholder='Подзаголовок'\r\n                                        name='subtitle'\r\n                                        value={subtitle}\r\n                                        onChange={e => onChange(e)}/>\r\n\r\n                                    <textarea \r\n                                        className='news__texts'\r\n                                       \r\n                                        placeholder='Текст'\r\n                                        name='text'\r\n                                        value={text}\r\n                                        onChange={e => onChange(e)}/>\r\n                                    \r\n\r\n\r\n                                <div className='news__submit' >\r\n                                    <button  type=\"submit\" onClick={(e) =>updateNewsButton(e)}>Редактировать новость</button>\r\n                                    <button  type=\"submit\" onClick={()=>{setOpen({status:false, post:''}); setFormData({title:'',subtitle:'',text:''})}}>Отмена</button>\r\n                                </div>\r\n                                    \r\n\r\n                        </form>\r\n                </div>\r\n            </Card>\r\n            }\r\n            {!deleteConfirm.post? <div/>:\r\n            <Card className='delete__bg'>\r\n                <div className='delete__container'>\r\n                    <div onClick={()=>console.log(deleteConfirm)}>Вы уверенны что хотите удалить новость \"{deleteConfirm.post.title}\"</div>\r\n                    <button  type=\"submit\" onClick={(e)=>deleteNewsButton(e)}>Удалить новость</button>\r\n                    <button  type=\"submit\" onClick={()=>setConfirm({status:false, post:''})}>Отмена</button>\r\n                </div>\r\n            </Card>\r\n            }\r\n\t\t\t</div>\r\n\r\n)\r\n}\r\n\r\n\r\n\r\nexport default News","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\User\\me.js",["348","349","350","351","352","353","354","355","356"],"import { useDispatch, useSelector } from \"react-redux\"\r\nimport './user.css'\r\nimport styles from '../../Styles/modules/main/main.module.css'\r\nimport { url } from '../utils/axios';\r\nimport {Button} from '../../Styles/buttons'\r\nimport styled from 'styled-components'\r\nimport { useEffect } from \"react\";\r\nimport {changeLoaded, loadUser} from '../../redux/actions/auth'\r\nimport { Card, SmallContainer, } from \"../../Styles/common\";\r\nimport { Bold } from '../../Styles/typography'\r\n\r\nimport  ProfileComponent  from '../Main/profileComponent'\r\nimport ProjectsCard from '../Main/projectsCard'\r\n\r\n\r\nconst MyProfile = ({match, history}) => {\r\n    let {id} = match.params;\r\n    const dispatch = useDispatch ()\r\n    const loaded = useSelector(state => state.auth.loaded)\r\n    const user = useSelector(state => state.auth.user)\r\n    useEffect (()=> {\r\n        dispatch (loadUser())\r\n    },[])\r\n    return (\r\n        <div className={styles.mainContainer}>\r\n\r\n            <ProfileComponent user={user} history={history}/>\r\n\r\n            <div className={styles.projects}>\r\n                    <Bold color='black' size='36' className={styles.myProj}>Мои проекты</Bold>\r\n\r\n                    {user.projects.map((el,i)=>{\r\n                        \r\n                        return(\r\n                            <ProjectsCard project={el}  sprints={user.sprints} history={history}/>\r\n                        )\r\n                    })}\r\n                    \r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default MyProfile","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\User\\edit.js",["357","358","359"],"import { useEffect, useState } from \"react\"\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {changeData, changeAvatar} from '../../redux/actions/auth'\r\nimport { url } from '../utils/axios';\r\n\r\n\r\n\r\n//styled components\r\nimport {Button} from '../../Styles/buttons'\r\nimport { Card, SmallContainer } from \"../../Styles/common\";\r\nimport { Input, LogForm } from \"../../Styles/Forms\";\r\n\r\nconst Edit = ({match, history}) => {\r\n\t\r\n\tconst loaded = useSelector(state => state.auth.loaded)\r\n    const user = useSelector(state => state.auth.user)\r\n    const dispatch = useDispatch();\r\n    const [formData, setFormData ] = useState({\r\n        \r\n        name: user.name, \r\n        position: user.position,  \r\n        email: user.email, \r\n\r\n      \r\n      });\r\n     const [text, setText] = useState ('') \r\n\r\n      const {name, position, email} = formData;\r\n\r\n      const  [file, setFile] = useState(null) \r\n\r\n\r\n      const handleFile = e => {\r\n        setFile(e.target.files[0])\r\n\t}\r\n\t// useEffect (()=> {\r\n\t// \tif (file !== null) {\r\n\t// \t\tsetTimeout(() => {\r\n\t// \t\tdispatch (changeAvatar(file))\r\n\t// \t}, 200);\r\n\t// \t}\r\n\t\t\r\n\t\t\r\n\t// },[file])\r\n    const onChange = e => {\r\n        e.preventDefault(); \r\n\t\tconsole.log (e.target.value)\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n     }\r\n     \r\n\t const changeMsg = () => {\r\n\r\n\t\t\r\n\t\t// setText ('Данные были изменены')\r\n\t\t// setTimeout(() => {\r\n\t\t// \tsetText ('')\r\n\t\t// }, 4000);\r\n\t }\r\n\t const Redirect = () => {\r\n     \r\n\t\treturn history.replace(`/users/me`)\r\n\t\r\n}\r\n     const onSubmit = e => {\r\n        e.preventDefault();\r\n\t\tconsole.log(formData)\r\n\t\t// dispatch(changeData({formData})) так не обязательно\r\n\t\tdispatch(changeData(formData))\r\n\t\tif (file !== null && file !== undefined) {\r\n\t\t\r\n\t\t\tdispatch (changeAvatar(file))\r\n\t\t\r\n\t}\r\n    setTimeout(() => {\r\n\t\thistory.replace(`/users/me`)\r\n\t}, 200);\r\n           \r\n        }\r\n   \r\n  \r\n    return (\r\n\t\t<SmallContainer>\r\n\t\t\t<Card style={{paddingBottom:'75px'}}>\r\n        {!loaded? <div>loaded...</div> :\r\n\t\t  \r\n\t\t  (  \r\n\t\t\t  <div style={{display:'flex', flexDirection:'column', alignItems:'center'}}>\r\n\t\t  <LogForm  onSubmit={onSubmit}>\r\n\r\n\t\t<p>Сменить имя</p>\r\n\t\t  <Input \r\n\t\t\t  \ttype='text'\r\n\t\t\t \tplaceholder={user.name}\r\n\t\t\t\tname=\"name\"\r\n\t\t\t\tvalue={name}\r\n\t\t\t  \tonChange={e => onChange(e)}\r\n\t\t\t></Input>\r\n\t\t\t<p>Сменить должность</p>\r\n \t\t<Input \r\n\t\t\t  type='text'\r\n\t\t\t  placeholder={user.position}\r\n\t\t\t  name=\"position\"\r\n\t\t\t  value={position}\r\n\t\t\t  onChange={e => onChange(e)}\r\n\t\t\t></Input>\r\n\t\t\t<p>Сменить e-mail</p>\r\n \t\t<Input \r\n\t\t\t  type='text'\r\n\t\t\t  placeholder={user.email}\r\n\t\t\t  value={email}\r\n\t\t\t  name=\"email\"\r\n\t\t\t  onChange={e => onChange(e)}\r\n\t\t\t></Input>\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t<br/>\r\n\t\t\t<br/>\r\n\t\t\t<Button style={{width:'20vw', transform: 'translateY(60px)'}} onClick={changeMsg}  type=\"submit\" value=\"Submit\" >Сохранить</Button>\r\n\t\t\t<Button style={{width:'20vw', transform: 'translateY(80px)'}} onClick={Redirect}  >Ничего не менять</Button>\r\n\t\t  </LogForm>\r\n\t\t  <form style={{marginTop:'-110px'}} >\r\n\t\t\t  <p>Сменить аватар</p>\r\n\t\t\t <Input \r\n                type='file'\r\n                placeholder='загрузите изображение'\r\n\t\t\t\tonChange={handleFile}></Input><br/><br/>\r\n\t\t\t\t</form>\r\n\t\t\t\t<div style={{opacity: `${text !==''?1:0}`, transition:'500ms ease opacity', marginTop: '70px'}}>{text}</div>\r\n\t\t\t\t</div>\r\n             \r\n   )}\r\n\t\t\t</Card>\r\n\t</SmallContainer>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Edit","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\User\\Employe.js",["360","361","362","363","364","365","366","367","368"],"import { useEffect, useState } from \"react\"\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { getUser } from \"../../redux/actions/user\";\r\nimport { url } from '../utils/axios';\r\nimport styles from '../../Styles/modules/main/main.module.css'\r\n\r\nimport { Table, Td, Tr } from \"../../Styles/tables\";\r\nimport { Status } from \"../../Styles/project\";\r\nimport { Container, Card, } from \"../../Styles/common\";\r\nimport { Bold } from '../../Styles/typography'\r\n\r\nimport  ProfileComponent  from '../Main/profileComponent'\r\nimport ProjectsCard from '../Main/projectsCard'\r\n\r\nimport './user.css'\r\n\r\n\r\nconst Employe = ({match, history}) => {\r\n    let {id} = match.params;\r\n    const user = useSelector(state => state.users.user)\r\n    const loaded = useSelector(state => state.users.userLoaded)\r\n    const dispatch = useDispatch();\r\n \r\n    useEffect(()=>{\r\n        \r\n        dispatch(getUser(id))\r\n        console.log(history, 'aaaaaaaaaaaaaaaaaaaaaaaaaa')\r\n    },[])\r\n    \r\n    return (\r\n        <div style={{display: history.location.pathname === '/users/me'? 'none' : 'block'}}>\r\n        {!loaded? (<div>loading...</div>):\r\n          ( \r\n            <div className={styles.mainContainer}>\r\n\r\n            <ProfileComponent user={user} history={history}/>\r\n\r\n            <div className={styles.projects}>\r\n                    <Bold color='black' size='36' className={styles.myProj}>Проекты сотрудника</Bold>\r\n\r\n                    {user.projects.map((el,i)=>{\r\n                        \r\n                        return(\r\n                            <ProjectsCard project={el}  sprints={user.sprints} history={history}/>\r\n                        )\r\n                    })}\r\n                    \r\n            </div>\r\n          </div>\r\n            )\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Employe","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Projects\\Project.js",["369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406"],"import { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./oneproject.css\"\r\n\r\nimport style from '../../Styles/modules/components/Project/oneproj.module.css'\r\nimport { useLocation} from \"react-router\";\r\nimport { addSprint, getProject, allSprints, deleteProject, joinTeam, finishProject} from \"../../redux/actions/projects\";\r\nimport { getTicket } from \"../../redux/actions/tikets\";\r\nimport {Button} from '../../Styles/buttons'\r\nimport {  Redirect } from 'react-router-dom';\r\nimport { Table, Td, Tr } from \"../../Styles/tables\";\r\nimport { Status } from \"../../Styles/project\";\r\nimport { Container, Card,} from \"../../Styles/common\";\r\nimport { Bold, H1, H3, Light} from '../../Styles/typography'\r\nimport SprintDescription from './components/SprintDescrForOneProj'\r\nimport ProjTeam from './components/ProjTeam'\r\n\r\n\r\n\r\n\r\n\r\nconst Project = ({match, history}) => {\r\n    let {id} = match.params;\r\n    const dispatch = useDispatch();\r\n    const loaded = useSelector(state => state.projects.loadProject);\r\n    const sprintsLoad = useSelector(state => state.projects.loadSprints)\r\n    const user = useSelector(state => state.auth.user) \r\n    const sprintLoad = useSelector(state => state.projects.sprint_load)\r\n    const reload = useSelector(state => state.projects.reload)\r\n   \r\n\r\n    const sprint = useSelector(state => state.projects.sprint)\r\n    const users = useSelector(state => state.users.users)\r\n    const project = useSelector(state => state.projects.project)\r\n    const sprints = useSelector(state => state.projects.sprints)\r\n    const descr = useSelector(state => state.projects.sprints.description)\r\n    const [calendLoader, setCalendLoader] = useState (false)\r\n    const [pr, setpr] = useState (false)\r\n    // const project = useSelector(state => state.projects.project.team)\r\n\r\n    \r\n    // эт массивы для календаря\r\n    let months = ['янв','фев',\"март\",\"апр\",\"май\",\"июнь\",\"июль\",\"авг\",\"сен\",\"окт\",\"ноя\",\"дек\"]\r\n    const[conditionalWeeks] =useState([]) \r\n    const[sprintDays] = useState ([])\r\n    const[sprintPaint] = useState ([])\r\n    let count = [1,2,3,4]\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(getProject(id));\r\n\r\n\r\n    }, [])\r\n   \r\n    useEffect(() => {\r\n    \r\n    if (sprintsLoad){\r\n      if(project.crypt!=id) {\r\n        dispatch(getProject(id));\r\n      }\r\n      console.log('stage2')\r\n      let calendCheck = () => new Promise(function(resolve) {\r\n        \r\n        //  Вот это все короче собирает инфу с бекенда, \r\n        // режет в нужный мне формат и пушит в массив\r\n        // с отрисовкой пока беда работает ток на f5\r\n\r\n         resolve(sprints.filter((sprint)=>sprint.dateClosePlan!=null).map ((body, i) => {\r\n          let month = body.dateClosePlan.slice(5,7)\r\n          let day = body.dateClosePlan.slice(8,10)\r\n          let sprintStatusDone = body.tasks.length - body.tasks.filter((task) => !task.taskStatus).length\r\n          let sprintStatusFull = body.tasks.length\r\n          let monthInt = Number(month)\r\n          let dayInt = Number(day)\r\n          sprintDays.push([dayInt,monthInt,sprintStatusDone,sprintStatusFull])  \r\n         }))\r\n         \r\n      \r\n      } )\r\n\r\n      calendCheck().then(() => \r\n      console.log('stage3'),\r\n      setTimeout(()=>{\r\n          setCalendLoader(true)\r\n      },300)\r\n      \r\n      )\r\n\r\n}}, [sprintsLoad])\r\n        \r\n         useEffect (()=>{\r\n         \r\n            if(calendLoader===true){\r\n              console.log('stage4')\r\n              setpr(false)\r\n              let mapheck = new Promise(function(resolve) {\r\n                console.log('stage5')\r\n         // вот это цикл для подсчета нужного количества квадратов в календаре и пуша в каждый\r\n         // инфы о месяцах\r\n                for (let i = 0; i <= 47; i++) {\r\n                  if (project.crypt === id){\r\n                    let yu = project.dateStart.slice(5,7)\r\n                    let index = Number(yu)\r\n                    if ((index+i/4) <13){\r\n                      conditionalWeeks.push([i, Math.trunc((i/4)+index),\r\n                        i%4==1?2:\r\n                        i%4==2?3:\r\n                        i%4==3?4:\r\n                        i%4==4?0:1])\r\n                     \r\n                    }\r\n              // елс иф для адекватной отрисовки первого месяца как стартового для проекта  \r\n                    else if (index+i/4>=13){\r\n                      conditionalWeeks.push([i, Math.trunc((i/4)+index-12),\r\n                        i%4==1?2:\r\n                        i%4==2?3:\r\n                        i%4==3?4:\r\n                        i%4==4?0:1])}}\r\n              }\r\n                resolve()\r\n                \r\n             \r\n             } )\r\n              mapheck.then(\r\n                console.log('stage6'),\r\n                conditionalWeeks.map ((body, i) => {\r\n                  console.log('stage7')\r\n                  setTimeout(()=>{\r\n                    let int = 0\r\n                    //фильтры мапы для показа понедельно квадратиков в нужных местах\r\n                    // инт отвечает за статус/цвет по умолчанию 0=серый\r\n                     sprintDays.filter((sprintday)=>Math.trunc(sprintday[0]/7.75)+1===body[2])\r\n                     .filter((sprintday)=>sprintday[1]===body[1]).filter((sprintday)=>sprintday[2]<sprintday[3]/ 100 * 50)\r\n                     .map (() => {\r\n                       console.log(body)\r\n                       int = 1\r\n                         })\r\n                     sprintDays.filter((sprintday)=>Math.trunc(sprintday[0]/7.75)+1===body[2])\r\n                     .filter((sprintday)=>sprintday[1]===body[1])\r\n                     .filter((sprintday)=>sprintday[2]>=sprintday[3]/ 100 * 50).map (() => { \r\n                         int = 2\r\n                         console.log(body)\r\n                         })\r\n                     sprintDays.filter((sprintday)=>Math.trunc(sprintday[0]/7.75)+1===body[2])\r\n                       .filter((sprintday)=>sprintday[1]===body[1]).filter((sprintday)=>sprintday[2]===sprintday[3])\r\n                       .map (() => {\r\n                         int = 3\r\n                         console.log(body)\r\n                           })\r\n                       setTimeout(()=>{\r\n                         sprintPaint.push ([body[0],body[1],body[2],int])  \r\n                         setTimeout(()=>{\r\n                           console.log('stage8')\r\n                           setpr(true)\r\n                           \r\n                         },300)\r\n                       },500)                                                          \r\n                },300)\r\n                 \r\n                        \r\n                        \r\n                        \r\n               }) \r\n              )\r\n            }\r\n         },[calendLoader])\r\n       \r\n    \r\n \r\n       \r\n\r\n    // useEffect (()=>{\r\n      \r\n    //   if(sprintsLoad) {\r\n    //     console.log ('hi', sprints)\r\n    //     setTimeout (()=> {\r\n    //       sprints.map ((body, index)=> {\r\n    //                  return ( \r\n    //                    setDateStore ({ ...dateStore, [dateStore.month+index]: sprints.dateClosePlan }),\r\n    //                    console.log (dateStore)\r\n    //                  )\r\n                      \r\n    //         })\r\n    //     },4500)\r\n         \r\n    //   }\r\n    // },[sprintsLoad])\r\n    useEffect(() => {\r\n        if(loaded){\r\n            dispatch(allSprints(project.crypt))\r\n        }\r\n        // console.log (project)\r\n        // console.log (conditionalWeeks)\r\n        // console.log (sprint)\r\n    }, [loaded])\r\n    \r\n    useEffect(() => {\r\n      \r\n        if(reload){\r\n            return history.push(`${id}/${sprint.id}`)\r\n        }\r\n    }, [reload])\r\n\r\n     const createSprint = () => {\r\n        \r\n        dispatch(addSprint(project.crypt))\r\n\r\n    }\r\n    const handleEnd = () => {\r\n        \r\n        dispatch(finishProject(id))\r\n        return history.push(`.`)\r\n\r\n    }\r\n    const handleDelete = () => {\r\n        dispatch(deleteProject(id))\r\n        return history.push(`./`)\r\n\r\n    }\r\n    const hadleTeam = () => {\r\n        // console.log (project.team)\r\n        // console.log  (project.msg)\r\n        dispatch(joinTeam(id))\r\n        \r\n    }\r\n   \r\n    return (\r\n      \r\n      <div className={style.grid__container}>\r\n        <div className={style.main}>\r\n\r\n        \r\n        {!loaded ? (\r\n          <p> loading...</p>\r\n        ) : (\r\n          <div >\r\n            { !calendLoader? (\r\n              \r\n              <p> loading...</p>\r\n            ) : (\r\n              <>\r\n           \r\n                  <div className={style.title}>\r\n                    <H1 size='24' >{project.title}</H1>\r\n                    <Bold size='16'>\r\n                      <div className={style.title__small}>\r\n                      \r\n                        <div className={style.title__options} onClick={() => history.replace(`/admin/editproj/${project.crypt}`)}>Настройки</div>\r\n                        <img src='/image 1.png'></img>\r\n                      </div>\r\n                      </Bold>\r\n                  </div>\r\n                  \r\n                  <Light className={style.title__small} size='16'><div className={style.title__deadline}>Дней до дедлайна: ?</div> <div className={style.title__deadline}>Стадия: {project.stage}</div></Light>\r\n                <div>\r\n                  \r\n                  {sprints.length == 0 ? (\r\n                    <p>Спринтов нет</p>\r\n                  ) : (\r\n                   <div className={style.sprintdescr__cont}>\r\n                     {sprints.filter((sprint)=> !sprint.status).map ((sprint, i) => {\r\n                       return (\r\n                         <SprintDescription dateClosePlan={sprint.dateClosePlan} descr={sprint.description} history={history} params={match.params} id={sprint._id} key={i} taskcomplite={sprint.tasks.filter((task) => task.taskStatus).length} \r\n                         alltasks={sprint.tasks.length} index={i+1}sprintname={sprint.name} dateOpen={sprint.dateOpen}></SprintDescription>\r\n                       )\r\n                     })}\r\n                     <button\r\n                     className={style.special__button}\r\n                      onClick={createSprint}\r\n                      style={{\r\n                        fontSize:'20px',\r\n                        fontFamily:'SuisseIntlSemibold',\r\n                      display: `${\r\n                        \r\n                        user.permission === \"user\" || project.status\r\n                          ? \"none\"\r\n                          : \"block\"\r\n                      }`,\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {user.permission === \"user\" ? \"\" : \"Создать спринт\"}\r\n                  </button>\r\n                   </div>\r\n                  )}\r\n                  \r\n                  <br />\r\n                  \r\n                  <br />\r\n                </div>\r\n                <div className={style.border__calend}></div>\r\n                \r\n                {!calendLoader?<div>loading...</div>:(\r\n                  //календарь со спринтами\r\n                  <> \r\n\r\n                  <div className={style.calend} >\r\n                  <div className={style.calend__title}>Статистика проекта</div>\r\n                  <div className={style.weeks}>\r\n                    {count.map ((body, i) => {\r\n                      \r\n                       return <div key={i} className={style.count}>{i+1}</div>\r\n                     })}\r\n                     {!pr?<div>loading..</div>:(<>\r\n                      {sprintPaint.map ((body, i) => {\r\n                       \r\n                       return <div \r\n                           style = {{\r\n                             backgroundColor:`${\r\n                             body[3]===1?'red':body[3]===2?'rgba(0,255,0,0.5)':body[3]===3 ?'green':'gray'\r\n                             }`\r\n                           }}\r\n                           key={i} className={style.one__week}>\r\n                             <div className={style.months}> \r\n                               {body[0]%4===0&&body[1]<=12?months[body[1]-1]: //это отрисовка месяцев\r\n                               body[0]==0?months[1]:\r\n                             ''}</div></div>\r\n                     \r\n                     })}\r\n                     </>)}\r\n                     \r\n                  \r\n                  </div>\r\n                  </div>\r\n                </>)}\r\n                  \r\n                  {/* {sprints.length == 0 ? (\r\n                    <p>Завершенных спринтов нет</p>\r\n                  ) : (\r\n                    <Table>\r\n                      <Tr columns=\"1fr 1fr 1fr 1fr\" top>\r\n                        <Td> Дата </Td>\r\n                        <Td> Название</Td>\r\n                        <Td> Задачи</Td>\r\n                        <Td> Статус</Td>\r\n                      </Tr>\r\n\r\n                      {sprints\r\n                        .filter((sprint) => sprint.status)\r\n                        .map((sprint, i) => {\r\n                          return (\r\n                            <Tr\r\n                              columns=\"1fr 1fr 1fr 1fr\"\r\n                              key={i}\r\n                              title=\"Открыть спринт\"\r\n                              onClick={() =>\r\n                                history.push(`/projects/${id}/${sprint._id}`)\r\n                              }\r\n                            >\r\n                              <Td>\r\n                                {\" \"}\r\n                                {sprint.dateOpen\r\n                                  .slice(0, 16)\r\n                                  .replace(/T/g, \"  \")}\r\n                              </Td>\r\n                              <Td>спринт {i}</Td>\r\n                              <Td>\r\n                                {\" \"}\r\n                                {\r\n                                  sprint.tasks.filter((task) => task.taskStatus)\r\n                                    .length\r\n                                }\r\n                                /{sprint.tasks.length}\r\n                              </Td>\r\n                              <Td>\r\n                                {sprint.tasks.length -\r\n                                  sprint.tasks.filter((task) => task.taskStatus)\r\n                                    .length ===\r\n                                0 ? (\r\n                                  <Status green />\r\n                                ) : (\r\n                                  <Status red />\r\n                                )}\r\n                              </Td>\r\n                            </Tr>\r\n                          );\r\n                        })}\r\n                    </Table>\r\n                  )} */}\r\n            \r\n            <div className={style.border__team}><H1 style={{marginBottom:'10px'}}>Команда</H1></div>\r\n               \r\n                 \r\n\r\n                \r\n            <div className={style.sprintdescr__cont}>\r\n                    {project.team.map((user, i) => {\r\n                      console.log(user)\r\n                      return (\r\n                        <ProjTeam userName={user.name} userAvatar={user.avatar} userPos={user.position}></ProjTeam>\r\n                      );\r\n                    })}\r\n                   \r\n                 \r\n                  <br />\r\n                  {project.team.length == 0 && (\r\n                    <Button\r\n                      onClick={hadleTeam}\r\n                      style={{\r\n                        display: `${project.status ? \"none\" : \"block\"}`,\r\n                      }}\r\n                    >\r\n                      Вступить в команду проекта\r\n                    </Button>\r\n                  )}\r\n                  {project.team.map((empl, ind) => {\r\n                    // console.log(user, \"emp id\");\r\n                    if (empl._id === user.id) {\r\n                      // console.log(ind, \"INDEX USER\");\r\n                      return (\r\n                        <Bold\r\n                          onClick={hadleTeam}\r\n                          style={{\r\n                            fontSize: '16px',\r\n                            left:'auto',\r\n                            right:'60px',\r\n                            color:'black',\r\n                            transform:'translateY(-70px)',\r\n                            position:'absolute',\r\n                            display: `${project.status ? \"none\" : \"block\"}`,\r\n                          }}\r\n                        >\r\n                          Выйти из команды проекта\r\n                        </Bold>\r\n                      );\r\n                    } else if (project.team.length - 1 == ind) {\r\n                      return (\r\n                        <Button\r\n                        \r\n                          fontSize={'20px'}\r\n                          onClick={hadleTeam}\r\n                          style={{\r\n                            backgroundColor:'white',\r\n                            color:'black',\r\n                            display: `${project.status ? \"none\" : \"block\"}`,\r\n                          }}\r\n                        >\r\n                          Вступить в команду проекта\r\n                        </Button>\r\n                      );\r\n                    }\r\n                  })}\r\n              </div>\r\n\r\n                <div style={{marginTop:'30px'}}>\r\n                  <Button\r\n                    onClick={handleEnd}\r\n                    style={{\r\n                      display: `${\r\n                        user.permission === \"user\" ? \"none\" : \"block\"\r\n                      }`,\r\n                      marginBottom: \"30px\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {user.permission === \"user\"\r\n                      ? \"\"\r\n                      : project.status\r\n                      ? \"Восстановить проект\"\r\n                      : \"Завершить проект\"}\r\n                  </Button>\r\n                  <Button\r\n                    onClick={handleDelete}\r\n                    style={{\r\n                      display: `${\r\n                        user.permission === \"user\" ? \"none\" : \"block\"\r\n                      }`,\r\n                      marginBottom: \"30px\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {user.permission === \"user\" ? \"\" : \"Удалить проект\"}\r\n                  </Button>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        )}\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Project","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Projects\\ProjectsEdit.js",["407","408","409"],"import './projects.css'\r\nimport { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nimport { allProjects } from '../../redux/actions/projects';\r\nimport { Table, Tr, Td } from '../../Styles/tables';\r\nimport { Container, Card,  } from '../../Styles/common';\r\nimport { H1, H3} from '../../Styles/typography'\r\n\r\n\r\nconst ProjectsEdit = ({history}) => {\r\n    const dispatch = useDispatch();\r\n    // const auth = useSelector(state => state.auth.isAuthenticated)\r\n    const loaded = useSelector(state => state.projects.loadedAllProj)\r\n    const projects = useSelector(state => state.projects.projects)\r\n\r\n\r\n    useEffect(() => {\r\n        console.log ('hi')\r\n        dispatch(allProjects())\r\n    }, [])\r\n    \r\n    return (\r\n        <div> \r\n            <Card>\r\n            <H1> Все проекты</H1>\r\n            {!loaded ? <p>loading...</p> : (\r\n                <div>\r\n                    <p> количество проектов: {projects.length} </p>\r\n                    <Table>\r\n  \r\n    <Tr columns='1fr 1fr 1fr 1fr 1fr' top>\r\n        \r\n      <Td>Название</Td>\r\n      <Td>Дата начала</Td>\r\n      <Td>Дедлайн</Td>\r\n      <Td>Статус</Td>\r\n      <Td>Спринты</Td>\r\n    </Tr>\r\n \r\n       {projects.map((project,index) => {\r\n           return(  \r\n        <Tr columns='1fr 1fr 1fr 1fr 1fr' key={index} onClick={() => history.replace(`/admin/editproj/${project.crypt}`)} title=\"Открыть проект\">\r\n           \r\n            <Td>{project.title}</Td>\r\n            <Td>{project.dateStart.slice(0, 10)}</Td>\r\n            <Td>{project.dateFinish!==undefined?project.dateFinish.slice(0, 10):'нет'}</Td>\r\n            <Td>{project.status ? <p>Завершен</p>:<p>В работе</p>}</Td>\r\n            <Td>{project.sprints.filter(sprint => sprint.status).length}/{project.sprints.length}</Td>\r\n        </Tr>\r\n        )\r\n       })}\r\n     \r\n \r\n</Table>\r\n                </div>\r\n            )}\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProjectsEdit","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Projects\\OneProjEdit.js",["410","411","412","413"],"import  {useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {  getProject, editProject } from '../../redux/actions/projects';\r\nimport { newTicket } from '../../redux/actions/tikets';\r\nimport './projects.css'\r\nimport { SmallContainer, Card, } from '../../Styles/common';\r\nimport { Button } from '../../Styles/buttons';\r\nimport { H1, H3} from '../../Styles/typography'\r\n\r\nconst ProjectEdit = ({history, match}) => {\r\n\tlet {id} = match.params;\r\n    const dispatch = useDispatch();\r\n\tconst project = useSelector(state => state.projects.project)\r\n\tconst loadProject = useSelector(state => state.projects.loadProject)\r\n    const [formData, setFormData ] = useState({\r\n        \r\n        title: '',   \r\n        dateStart: '', \r\n        city: '',  \r\n        type: '',\r\n        stage: '',\r\n        dateFinish: '',\r\n        customer: '',\r\n\r\n\r\n      \r\n      });\r\n\t  \r\n\t  useEffect(() => {\r\n\t\tdispatch(getProject(id));\r\n        console.log (project)\r\n    }, [])\r\n\tuseEffect(() => {\r\n\t\tif (loadProject ) {\r\n\t\t\tconsole.log (project.customer)\r\n\t\t\tsetFormData ({...formData, title: project.title, \r\n\t\t\t\tdateStart: project.dateStart,\r\n\t\t\t\tcity: project.city,\r\n\t\t\t\ttype: project.type,\r\n\t\t\t\tstage: project.stage,\r\n\t\t\t\tdateFinish: project.dateFinish,\r\n\t\t\t\tcustomer: project.customer\r\n\t\t\t\t})\r\n\t\t}\r\n\t\t\r\n    }, [loadProject])\r\n      const { title, dateStart, dateFinish, city, type, stage, customer} = formData;\r\n\r\n  \r\n    const onChange = e => {\r\n        e.preventDefault(); \r\n\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n     }\r\n     \r\n\r\n     const Redirect = () => {\r\n     \r\n             return history.push(`/admin/editproj`)\r\n         \r\n     }\r\n\r\n     const onSubmit = async e => {\r\n        e.preventDefault();\r\n        dispatch(editProject(formData, id))\r\n        setTimeout(() => Redirect(),100) \r\n        \r\n            // register({ name, email, password});\r\n    \r\n           \r\n        }\r\n\r\n    return (\r\n\t\t<SmallContainer>\r\n            <Card>\r\n\t\t{!loadProject?<div>loading...</div>:(\r\n\t\t\t<div>\r\n            <H1> Тут можно редактировать данные проекта </H1>\r\n            <form className='form' onSubmit={onSubmit}>\r\n            <input \r\n\r\n                type='text'\r\n                placeholder={project.title}\r\n                name='title'\r\n                value={title}\r\n                onChange={e => onChange(e)}/>\r\n\r\n           <input \r\n                type='date'\r\n                placeholder='date'\r\n                name='dateStart'\r\n                value={dateStart}\r\n                onChange={e => onChange(e)}/>\r\n\r\n\r\n            <input \r\n                type='date'\r\n                placeholder='date'\r\n                name='dateFinish'\r\n                value={dateFinish}\r\n                onChange={e => onChange(e)}/>\r\n\r\n            <input \r\n                type='text'\r\n                placeholder='Город'\r\n                name='city'\r\n                value={city}\r\n                onChange={e => onChange(e)}/>\r\n\r\n            <input \r\n                type='text'\r\n                placeholder='Тип проекта'\r\n                name='type'\r\n                value={type}\r\n                onChange={e => onChange(e)}/>\r\n            <input \r\n                type='text'\r\n                placeholder='Фаза'\r\n                name='stage'\r\n                value={stage}\r\n                onChange={e => onChange(e)}/>\r\n            <input \r\n                type='text'\r\n                placeholder='Заказчик'\r\n                name='customer'\r\n                value={customer}\r\n                onChange={e => onChange(e)}/>\r\n\r\n\r\n\r\n\r\n\r\n            <Button  type=\"submit\">Сохранить</Button>\r\n\t\t\t\r\n\t\t\t<Button  onClick={Redirect}>Ничего не менять</Button>\r\n            </form>\r\n\t\t\t\r\n        </div>\r\n\r\n\t\t)}\r\n        </Card>\r\n\t\t</SmallContainer>\r\n    )\r\n}\r\n\r\n\r\nexport default ProjectEdit","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Projects\\newProject.js",["414","415","416","417","418","419"],"import  {useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { newProject } from '../../redux/actions/projects';\r\nimport { newTicket } from '../../redux/actions/tikets';\r\nimport './projects.css'\r\n\r\nimport {Container, Card, Title,} from '../../Styles/common'\r\nimport { Button } from '../../Styles/buttons';\r\nimport { H1, H3} from '../../Styles/typography'\r\n\r\nconst ProjectNew = ({history}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [formData, setFormData ] = useState({\r\n        \r\n        title: '',   \r\n        dateStart: '', \r\n        city: '',  \r\n        type: '',\r\n        stage: '',\r\n        dateFinish: '',\r\n        customer: '',\r\n\r\n\r\n      \r\n      });\r\n   \r\n\r\n\r\n      const { title, dateStart, dateFinish, city, type, stage, customer, area} = formData;\r\n\r\n  \r\n    const onChange = e => {\r\n        e.preventDefault(); \r\n\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n     }\r\n     \r\n\r\n     const Redirect = () => {\r\n     \r\n             return history.push(`/projects`)\r\n         \r\n     }\r\n\r\n     const onSubmit = async e => {\r\n        e.preventDefault();\r\n        dispatch(newProject(formData))\r\n        setTimeout(() => Redirect(),100) \r\n        \r\n            // register({ name, email, password});\r\n    \r\n           \r\n        }\r\n\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <H1>\r\n       \r\n            Тут можно создать новый проект\r\n           \r\n          </H1>\r\n          <form className=\"form\" onSubmit={onSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Название проекта\"\r\n              name=\"title\"\r\n              value={title}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n\r\n            <input\r\n              type=\"date\"\r\n              placeholder=\"date\"\r\n              name=\"dateStart\"\r\n              value={dateStart}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n\r\n            <input\r\n              type=\"date\"\r\n              placeholder=\"date\"\r\n              name=\"dateFinish\"\r\n              value={dateFinish}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Город\"\r\n              name=\"city\"\r\n              value={city}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Тип проекта\"\r\n              name=\"type\"\r\n              value={type}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Фаза\"\r\n              name=\"stage\"\r\n              value={stage}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Заказчик\"\r\n              name=\"customer\"\r\n              value={customer}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n\r\n            <Button type=\"submit\"> Создать новый проект</Button>\r\n          </form>\r\n        </Card>\r\n      </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ProjectNew","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Projects\\My.js",["420","421","422"],"import { useSelector } from \"react-redux\"\r\nimport { Card } from \"../../Styles/common\"\r\nimport { H1, H3} from '../../Styles/typography'\r\nconst { Container, Title,} = require(\"../../Styles/common\")\r\nconst { Table, Tr, Td } = require(\"../../Styles/tables\")\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst MyProjects = ({history}) => {\r\n    const projects = useSelector(state => state.auth.user.projects)\r\n    return (\r\n        <div>\r\n            <Card>\r\n             <H1>Мои проекты</H1>\r\n            {!projects ? <p> проектов нет  </p>: (\r\n\r\n            <Table>\r\n           \r\n                <Tr columns='1fr 1fr 1fr 1fr' top='top'>\r\n                    \r\n                <Td>Название</Td>\r\n                <Td>Дата начала</Td>\r\n                <Td>Дедлайн</Td>\r\n                <Td>Статус</Td>\r\n                </Tr>\r\n          \r\n                {projects.map((project,index) => {\r\n                    return(  \r\n                    <Tr columns='1fr 1fr 1fr 1fr' key={index} onClick={() => history.replace(`/projects/${project.crypt}`)} title=\"Открыть проект\">\r\n                    \r\n                        <Td>{project.title}</Td>\r\n                        <Td>{project.dateStart.slice(0, 10)}</Td>\r\n                        <Td>{project.dateFinish!==undefined?project.dateFinish.slice(0, 10):'нет'}</Td>\r\n                        <Td>{project.status ? <p>Завершен</p>:<p>В работе</p>}</Td>\r\n                    </Tr>\r\n                    )\r\n                })}\r\n                \r\n           \r\n            </Table>\r\n                        )}\r\n            </Card>\r\n        </div> \r\n    )\r\n}\r\n\r\n\r\nexport default MyProjects","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\actions\\auth.js",["423"],"import {REGISTER, AUTH_ERROR, LOGIN, USER_LOADED,CHANGE_AVATAR, CHANGE_USERDATA, CHANGE_LOADED, ADD_SPRINT_TO_CHOSEN, SPRINT_ERROR} from '../types'\r\nimport {innerBackend, instance, setAuthToken} from '../../components/utils/axios'\r\n\r\n\r\n\r\n// LOAD USER \r\nexport const loadUser = () => async dispatch => {\r\n  try {\r\n    \r\n     \r\n     const res = await innerBackend.get(\"/users/me\");\r\n\r\n     console.log(res, \"/response???\");\r\n    \r\n     dispatch({\r\n       type: USER_LOADED,\r\n       payload: res.data,\r\n     });\r\n  } catch (err) {\r\n    console.log(err.response.data, 'ERROR!!!')\r\n  }\r\n   \r\n  };\r\n    \r\n\r\n\r\nexport const login = (formData) => async dispatch  => {\r\n    try {\r\n      console.log(formData, 'data?')\r\n        const res = await instance.post('/auth', formData)\r\n        console.log(res, 'respond')\r\n        dispatch({\r\n            type: LOGIN,\r\n            payload: res.data\r\n        })\r\n                  setAuthToken(res.data.token);\r\n                  setTimeout(() =>loadUser(),200)\r\n                  \r\n\r\n        }\r\n      catch (err) {\r\n        const errors = err.response.data.errors;\r\n        errors.map(error => {\r\n           return dispatch({\r\n            type: AUTH_ERROR,\r\n            payload: error.msg\r\n        })\r\n        })            \r\n      \r\n    }\r\n\r\n}\r\n\r\n\r\nexport const register = ({formData}) => async dispatch  => {\r\n// console.log(formData, 'hey')\r\n  const form = new FormData()\r\n  \r\n      // form.append(\r\n      //     'avatar',\r\n      //     file\r\n      //   )\r\n  \r\n  \r\n\r\n  Object.keys(formData).map(el => {\r\n      form.append(\r\n          `${el}`, formData[el]\r\n      )\r\n  })\r\n\r\n  // console.log(form.get('email '))\r\n    try {\r\n        const res = await instance.post('/users', formData)\r\n        console.log(res.data, \"DATA FROM REGISTRATION\");\r\n        dispatch({\r\n            type: REGISTER,\r\n            payload: res.data\r\n        })\r\n         setAuthToken(localStorage.token);\r\n        \r\n      }\r\n      catch (err) {\r\n        const errors = err.response.data.errors;\r\n        errors.map(error => {\r\n           return dispatch({\r\n            type: AUTH_ERROR,\r\n            payload: error.msg\r\n        })\r\n        })\r\n\r\n        \r\n        \r\n            \r\n      } \r\n\r\n}\r\nexport const changeData = (formData) => async dispatch  => {\r\n  /////////////////////////\r\n  // let body ={\r\n  //   name: formData.name,\r\n  //   email: formData.email,\r\n  //   position: formData.position,\r\n    \r\n  // }\r\n  //////////////////////\r\n  try {\r\n      console.log('hello change', formData)\r\n      const res = await innerBackend.put(`/users/me`, formData)\r\n      dispatch({\r\n          type: CHANGE_USERDATA,\r\n          payload: res.data\r\n      })\r\n  \r\n\r\n    }\r\n    catch (err) {\r\n      const errors = err.response.data.errors;\r\n      errors.map(error => {\r\n         return dispatch({\r\n          type: AUTH_ERROR,\r\n          payload: error.msg\r\n      })\r\n      })\r\n          \r\n    } \r\n\r\n}\r\nexport const changeAvatar = (file) => async dispatch  => {\r\n\r\n\r\n  try {\r\n  \r\n  const form = new FormData()\r\n  if(file){\r\n      form.append(\r\n          'file',\r\n          file\r\n        )\r\n  }\r\n  \r\n\r\n      console.log(form.get('file'), 'file HERE')\r\n   \r\n\r\n\r\n      const res = await innerBackend.put(`/users/me/a`, form)\r\n      dispatch({\r\n          type: CHANGE_AVATAR,\r\n          payload: res.data\r\n      })\r\n  \r\n\r\n    }\r\n    catch (err) {\r\n      const errors = err.response.data.errors;\r\n      errors.map(error => {\r\n         return dispatch({\r\n          type: AUTH_ERROR,\r\n          payload: error.msg\r\n      })\r\n      })\r\n          \r\n    } \r\n\r\n}\r\n\r\n\r\nexport const addToChosen = (id) => async dispatch  => {\r\n  console.log ('hi sprint', id)\r\n  try {\r\n      const res = await innerBackend.put(`projects/favsprint/${id}`)\r\n      dispatch({\r\n          type: ADD_SPRINT_TO_CHOSEN,\r\n          payload: res.data\r\n      })\r\n      }\r\n    catch (err) {\r\n      const errors = err.response.data.errors;\r\n      errors.map(error => {\r\n         return dispatch({\r\n          type: SPRINT_ERROR,\r\n          payload: error.msg\r\n      })\r\n      })            \r\n    \r\n  }\r\n\r\n}\r\n\r\n\r\nexport const changeLoaded = () =>  dispatch => {\r\n  return dispatch({\r\n    type: CHANGE_LOADED,\r\n    \r\n  })\r\n}\r\n","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Auth\\index.js",["424","425","426"],"import { useState } from \"react\"\r\nimport Login from './Login'\r\nimport Register from './Register'\r\nimport RegisterCustomer from './RegisterCustomer'\r\nimport {SmallContainer, Card} from '../../Styles/common'\r\nimport {LoginButton} from '../../Styles/buttons'\r\n\r\n\r\n\r\nconst Auth = () => {\r\n    const [page, setPage] = useState(0)\r\n    return (\r\n        <SmallContainer >\r\n            <Card>\r\n                <div style={{width:'100%', borderBottom:'2px solid black', display:'flex', justifyContent:'space-between'}}>\r\n                    <LoginButton style={{fontWeight:`${page===0?'bold':'normal'}`}} onClick={(() => setPage(0))}>Логин</LoginButton>\r\n                    <LoginButton style={{fontWeight:`${page===1?'bold':'normal'}`}} onClick={(() => setPage(1))}>Регистрация </LoginButton>\r\n                    <LoginButton style={{fontWeight:`${page===2?'bold':'normal'}`}} onClick={(() => setPage(2))}>Регистрация (клиент)</LoginButton>\r\n                </div>\r\n\r\n                <div>\r\n                {page ==0 && <Login/>}\r\n                {page ==1 && <Register />}\r\n                {page ==2 && <RegisterCustomer />}\r\n\r\n                </div>\r\n            </Card>\r\n        </SmallContainer>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Auth\r\n","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Adminka\\Index.js",["427","428","429","430","431","432"],"import  {useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { newTicket } from '../../redux/actions/tikets';\r\nimport './tickets.css'\r\n\r\nimport {Table, Tr, Td} from '../../Styles/tables'\r\nimport {Container, Card, Title,} from '../../Styles/common'\r\nimport { Button } from '../../Styles/buttons';\r\nimport { H1, H3} from '../../Styles/typography'\r\n\r\nconst Admin = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [formData, setFormData ] = useState({\r\n        \r\n        problemname: '',   //title\r\n        text: '',     //about problem\r\n        emergency: '', \r\n        pcpass: '', // password,\r\n\r\n      \r\n      });\r\n      \r\n\r\n      const { problemname, text, emergency, pcpass} = formData;\r\n\r\n      const  [file, setFile] = useState(null) \r\n\r\n\r\n      const handleFile = e => {\r\n        setFile(e.target.files[0])\r\n    }\r\n    const onChange = e => {\r\n        e.preventDefault(); \r\n\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n     }\r\n     \r\n\r\n\r\n     const onSubmit = async e => {\r\n        e.preventDefault();\r\n\r\n        dispatch(newTicket({formData, file}))\r\n    \r\n            // register({ name, email, password});\r\n    \r\n           \r\n        }\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n            <H1> Если у вас есть проблема с компом - вы можете создать заявку тут //wip</H1>\r\n            <br/>\r\n            <form className='form__alltick' onSubmit={onSubmit}>\r\n            <input className='alltik__1'\r\n                type='text'\r\n                placeholder='Проблема'\r\n                name='problemname'\r\n                value={problemname}\r\n                onChange={e => onChange(e)}/>\r\n\r\n         \r\n\r\n            <input className='alltik__2'\r\n                type='text'\r\n                placeholder='срочность'\r\n                name='emergency'\r\n                value={emergency}\r\n                onChange={e => onChange(e)}/>\r\n\r\n            <input className='alltik__3'\r\n                type='text'\r\n                placeholder='пароль от компа (опционально)'\r\n                name='pcpass'\r\n                value={pcpass}\r\n                onChange={e => onChange(e)}/>\r\n\r\n            <span className='altik__span'>{'Скриншот проблемы (опционально):'}</span>\r\n            <input className='alltik__4'\r\n                type='file'\r\n                \r\n                placeholder='скриншот проблемы (опционально)'\r\n                onChange={handleFile}/>\r\n\r\n\r\n\r\n\r\n            <Button className='alltik__6' type=\"submit\" value=\"Submit\"> Отправить проблему</Button>\r\n\r\n            <textarea className='alltik__5'\r\n                // type='text'\r\n                placeholder='Описание'\r\n                name='text'\r\n                value={text}\r\n                onChange={e => onChange(e)}/>\r\n\r\n\r\n            </form>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Admin","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Adminka\\dashboard.js",["433","434","435","436"],"\r\n\r\n\r\n\r\nimport { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { allTickets } from \"../../redux/actions/tikets\";\r\n\r\n//styled components\r\nimport {Table, Tr, Td} from '../../Styles/tables'\r\nimport {Container, Card, Title,} from '../../Styles/common'\r\nimport { H1, H3} from '../../Styles/typography'\r\n\r\n\r\nconst Dashboard = ({history}) => {\r\n    const dispatch = useDispatch();\r\n    const loaded = useSelector(state => state.tickets.loaded)\r\n    const tickets = useSelector(state => state.tickets.tickets)\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(allTickets())\r\n    }, [])\r\n\r\n    \r\n    return (\r\n        <div> \r\n            <Card>\r\n            <H1> Входящие тикеты</H1>\r\n                <p> количество проблем: {tickets.length} </p>\r\n\r\n            {!loaded ? <p>loading...</p> : (\r\n            \r\n                    <Table main>\r\n                      \r\n                            <Tr columns='1fr 5fr 1fr' top='top'>\r\n                                <Td>Номер</Td>\r\n                                <Td>Проблема</Td>\r\n                                <Td>Статус</Td>\r\n                            </Tr>\r\n                    \r\n                            {tickets.map((ticket,index) => \r\n                                \r\n                                <Tr columns='1fr 5fr 1fr' onClick={() => history.push(`/tickets/${ticket._id}`)}>\r\n                                    <Td>{index+1}</Td>\r\n                                    <Td>{ticket.problemname}</Td>\r\n                                    <Td>{ticket.status ? <p>ongoing</p>:<p>complete</p>}</Td>\r\n                                    \r\n                                </Tr>\r\n                                \r\n                            )}\r\n                     \r\n                    </Table>\r\n                \r\n            )}\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Dashboard","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Adminka\\Ticket.js",["437","438","439","440","441","442","443"],"import { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n\r\n\r\nimport { useLocation} from \"react-router\";\r\nimport { getTicket } from \"../../redux/actions/tikets\";\r\nimport { url } from \"../utils/axios\";\r\n\r\n\r\nimport { Container, Card, } from '../../Styles/common';\r\nimport { Button } from '../../Styles/buttons';\r\nimport { H1, H3} from '../../Styles/typography'\r\n\r\n\r\nconst Ticket = ({match}) => {\r\n    let {id} = match.params;\r\n    const dispatch = useDispatch();\r\n    const loaded = useSelector(state => state.tickets.ticketLoad)\r\n    const ticket = useSelector(state => state.tickets.ticket)\r\n\r\n    useEffect(() => {\r\n        dispatch(getTicket(id));\r\n    }, [])\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <Card>\r\n            {!loaded ? <p> loading...</p>: (\r\n                <div>\r\n                    <h1>{ticket.problemname}</h1>\r\n                    <p>Описание проблемы: {ticket.text} </p>\r\n                    <p>Дата {ticket.date}</p>\r\n                    <p>Насоклько срочно: {ticket.emergency}</p>\r\n\r\n                    <p>Пароль от компа {ticket.pcpass}</p>\r\n                    <img width=\"100%\"src={`${url}/${ticket.screenshot}`} />\r\n\r\n                    \r\n                </div>\r\n            )}\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Ticket","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\actions\\user.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Projects\\index.js",["444","445","446","447","448","449"],"\r\n\r\n\r\nimport {  Redirect } from 'react-router-dom';\r\n\r\n\r\n//профиль пользователя по ID\r\nimport './projects.css'\r\nimport { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { allTickets } from \"../../redux/actions/tikets\";\r\nimport { allProjects } from '../../redux/actions/projects';\r\n\r\n\r\nimport { loadUser } from '../../redux/actions/auth';\r\n// import { allUsers } from \"../../redux/actions/user\";\r\nimport { Table, Tr, Td } from '../../Styles/tables';\r\nimport { Container, Card, } from '../../Styles/common'\r\nimport { H1, H3} from '../../Styles/typography'\r\n\r\n\r\n\r\n\r\n\r\nconst Projects = ({history}) => {\r\n    const dispatch = useDispatch();\r\n    // const auth = useSelector(state => state.auth.isAuthenticated)\r\n    const loaded = useSelector(state => state.projects.loadedAllProj)\r\n    const projects = useSelector(state => state.projects.projects)\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        \r\n    }, [])\r\n    useEffect (()=>{\r\n        if (!loaded){\r\n           dispatch(allProjects()) \r\n        }\r\n        \r\n    },[loaded])\r\n    return (\r\n    <div>\r\n\r\n       \r\n            {!loaded ? <p>loading...</p> : (\r\n                <div className='projects__grid'>\r\n<Card>\r\n            <H1> Проекты в работе</H1>\r\n                    <p> количество проектов: {projects.length} </p>\r\n                    <Table>\r\n  \r\n    <Tr columns='1fr 1fr 1fr 1fr 1fr' top='top'>\r\n \r\n      <Td>Название</Td>\r\n      <Td>Дата начала</Td>\r\n      <Td>Дедлайн</Td>\r\n      <Td>Статус</Td>\r\n      <Td>Спринты</Td>\r\n\r\n    </Tr>\r\n   \r\n   \r\n       {projects.filter(project => !project.status).map((project,index) => {\r\n           return(  \r\n        <Tr columns='1fr 1fr 1fr 1fr 1fr' key={index} onClick={() => history.replace(`/projects/${project.crypt}`)} title=\"Открыть проект\">\r\n           \r\n            <Td>{project.title}</Td>\r\n            <Td>{project.dateStart.slice(0, 10)}</Td>\r\n            <Td>{project.dateFinish!==undefined?project.dateFinish.slice(0, 10):'нет'}</Td>\r\n            <Td>{project.status ? <p>Завершен</p>:<p>В работе</p>}</Td>\r\n            <Td>{project.sprints.filter(sprint => sprint.status).length}/{project.sprints.length}</Td>\r\n        </Tr>\r\n        )\r\n       })}\r\n     \r\n  \r\n</Table>\r\n</Card>\r\n\r\n\r\n<Card>\r\n           \r\n\r\n<H1 > Завершенные проекты</H1>\r\n\r\n\r\n<Table>\r\n  \r\n    <Tr columns='1fr 1fr 1fr 1fr 1fr' top='top'>\r\n        \r\n      <Td>Название</Td>\r\n      <Td>Дата начала</Td>\r\n      <Td>Дедлайн</Td>\r\n      <Td>Статус</Td>\r\n      <Td>Спринты</Td>\r\n    </Tr>\r\n \r\n       {projects.filter(project => project.status).map((project,index) => {\r\n           return(  \r\n        <Tr columns='1fr 1fr 1fr 1fr 1fr' key={index} onClick={() => history.replace(`/projects/${project.crypt}`)} title=\"Открыть проект\">\r\n         \r\n            <Td>{project.title}</Td>\r\n            <Td>{project.dateStart.slice(0, 10)}</Td>\r\n            <Td>{project.dateFinish!==undefined?project.dateFinish.slice(0, 10):'нет'}</Td>\r\n            <Td>{project.status ? <p>Завершен</p>:<p>В работе</p>}</Td>\r\n            <Td>{project.sprints.filter(sprint => sprint.status).length}/{project.sprints.length}</Td>\r\n        </Tr>\r\n        )\r\n       })}\r\n     \r\n \r\n    </Table>\r\n</Card>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Projects","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\User\\index.js",["450","451","452"],"\r\n//@ALL USERS PAGE\r\n\r\nimport { useEffect } from \"react\"\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { allUsers } from \"../../redux/actions/user\";\r\n\r\n//styled components\r\nimport { Container, Card } from \"../../Styles/common\";\r\nimport { Table, Tr, Td } from \"../../Styles/tables\";\r\nimport { H1, H3} from '../../Styles/typography'\r\n\r\n\r\n\r\nconst Users = ({history}) => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const users = useSelector(state => state.users.users)\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(allUsers())\r\n    }, [])\r\n    return (\r\n        <div> \r\n            <Card>\r\n                <H1 > Все сотрудники</H1>\r\n                    {!users ? <p>loading...</p> : (\r\n                        <Table>\r\n                            \r\n                                <Tr columns='1fr 1fr 1fr 1fr' top='top'>\r\n                                    <Td>Имя</Td>\r\n                                    <Td>email</Td>\r\n                                    <Td>Должность</Td>\r\n                                    <Td>Активные проекты</Td>\r\n                                </Tr>\r\n                        \r\n                                {users.map(user => {\r\n                                    return(  \r\n                                    <Tr columns='1fr 1fr 1fr 1fr' onClick={() => history.replace(`/users/${user._id}`)}>\r\n                                        <Td>{user.name}</Td>\r\n                                        <Td>{user.email}</Td>\r\n                                        <Td>{user.position}</Td>\r\n                                        <Td>{user.projects.length}</Td>\r\n                                    </Tr>\r\n                                    )\r\n                                })}\r\n                            \r\n                        </Table>\r\n                    )}\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Users","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\Styles\\layout.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Layout\\index.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Office\\index.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\DataBase\\index.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\reducers\\index.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\Styles\\tables.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\Styles\\project.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\actions\\tikets.js",["453"],"import Axios from \"axios\";\r\nimport { innerBackend } from \"../../components/utils/axios\";\r\nimport { ALL_TICKETS, NEW_ERROR, NEW_TICKET, GET_TICKET } from \"../types\";\r\nimport {url} from '../../components/utils/axios'\r\n\r\n\r\nexport const newTicket = ({formData, file}) => async dispatch  => {\r\n\r\n     \r\n    // formData.append('userName', 'Fred');\r\n\r\n\r\n    try {\r\n        // console.log(formData, 'data')\r\n    const form = new FormData()\r\n    if(file){\r\n        form.append(\r\n            'file',\r\n            file\r\n          )\r\n    }\r\n    \r\n\r\n    Object.keys(formData).map((el, index) => {\r\n        form.append(\r\n            `${el}`, formData[el]\r\n        )\r\n    })\r\n\r\n        console.log(form.get('file'), 'file HERE')\r\n        console.log(form.get('text'), 'text HERE')\r\n\r\n\r\n        const res = await Axios.post('/tickets', form, {\r\n            baseURL: url,\r\n            headers: {\r\n                'content-type': 'multipart/form-data', // do not forget this \r\n                'auth-token': localStorage.token\r\n               }})\r\n\r\n        dispatch({\r\n            type: NEW_TICKET,\r\n            payload: res.data\r\n        })\r\n            // dispatch(loadUser())\r\n\r\n        }\r\n      catch (err) {\r\n        const errors = err.response.data.errors;\r\n        errors.map(error => {\r\n           return dispatch({\r\n            type: NEW_ERROR,\r\n            payload: error.msg\r\n        })\r\n        })            \r\n      \r\n    }\r\n\r\n}\r\n\r\n\r\nexport const allTickets = () => async dispatch  => {\r\n    try {\r\n\r\n        const res = await innerBackend.get('/tickets/all')\r\n        dispatch({\r\n            type: ALL_TICKETS,\r\n            payload: res.data\r\n        })\r\n        console.log(res.data, 'respond')\r\n\r\n        }\r\n      catch (err) {\r\n        const errors = err.response.data.errors;\r\n        errors.map(error => {\r\n           return dispatch({\r\n            type: NEW_ERROR,\r\n            payload: error.msg\r\n        })\r\n        })            \r\n      \r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const getTicket = (id) => async dispatch  => {\r\n    try {\r\n        console.log(id, 'my id ticket')\r\n        const res = await innerBackend.get(`/tickets/${id}`)\r\n        dispatch({\r\n            type: GET_TICKET,\r\n            payload: res.data\r\n        })\r\n\r\n        }\r\n      catch (err) {\r\n        const errors = err.response.data.errors;\r\n        errors.map(error => {\r\n           return dispatch({\r\n            type: NEW_ERROR,\r\n            payload: error.msg\r\n        })\r\n        })            \r\n      \r\n    }\r\n\r\n}","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\actions\\news.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\Styles\\Forms.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\actions\\projects.js",["454","455"],"import { innerBackend } from \"../../components/utils/axios\";\r\nimport { ADD_SPRINT, ADD_TASKS, ALL_PROJECTS, ALL_SPRINT,ADD_SPRINT_TO_CHOSEN, CREATE_FAIL, DELETE_PROJECT,EDIT_PROJECT, FINISH_SPRINT, FINISH_TASK, GET_PROJECT, GET_SPRINT, JOIN_TEAM, PROJECT_ID, SPRINT_ERROR, FINISH_PROJECT } from \"../types\";\r\n\r\n\r\n\r\n\r\n\r\nexport const newProject = (formData) => async dispatch  => {\r\n    try {\r\n\r\n        const res = await innerBackend.post('/projects/add', formData)\r\n        dispatch({\r\n            type: GET_PROJECT,\r\n            payload: res.data\r\n        })\r\n\r\n        }\r\n      catch (err) {\r\n        const errors = err.response.data.errors;\r\n        errors.map(error => {\r\n           return dispatch({\r\n            type: CREATE_FAIL,\r\n            payload: error.msg\r\n        })\r\n        })            \r\n      \r\n    }\r\n\r\n}\r\n\r\n\r\nexport const allProjects = () => async dispatch  => {\r\n    \r\n    try {\r\n\r\n        const res = await innerBackend.get('/projects')\r\n        dispatch({\r\n            type: ALL_PROJECTS,\r\n            payload: res.data\r\n        })\r\n\r\n        }\r\n      catch (err) {\r\n        const errors = err.response.data.errors;\r\n        errors.map(error => {\r\n           return dispatch({\r\n            type: CREATE_FAIL,\r\n            payload: error.msg\r\n        })\r\n        })            \r\n      \r\n    }\r\n\r\n}\r\n\r\n\r\nexport const getProject = (id) => async dispatch  => {\r\n    \r\n    try {\r\n\r\n        const res = await innerBackend.get(`/projects/${id}`)\r\n        dispatch({\r\n            type: GET_PROJECT,\r\n            payload: res.data\r\n        })\r\n\r\n        }\r\n      catch (err) {\r\n        const errors = err.response.data.errors;\r\n        errors.map(error => {\r\n           return dispatch({\r\n            type: CREATE_FAIL,\r\n            payload: error.msg\r\n        })\r\n        })            \r\n      \r\n    }\r\n\r\n}\r\n\r\n\r\nexport const addSprint = (id) => async dispatch  => {\r\n    try {\r\n        console.log(id, 'id');\r\n\r\n        const res = await innerBackend.post(`/projects/sprints/new/${id}`)\r\n        dispatch({\r\n            type: ADD_SPRINT,\r\n            payload: res.data\r\n        })\r\n\r\n        }\r\n      catch (err) {\r\n        const errors = err.response.data.errors;\r\n        errors.map(error => {\r\n           return dispatch({\r\n            type: SPRINT_ERROR,\r\n            payload: error.msg\r\n        })\r\n        })            \r\n      \r\n    }\r\n\r\n}\r\nexport const editProject = (formData, id) => async dispatch  => {\r\n    try {\r\n        console.log('hello edit', formData)\r\n        const res = await innerBackend.put(`/projects/${id}`, formData)\r\n        dispatch({\r\n            type: EDIT_PROJECT,\r\n            payload: res.data\r\n        })\r\n    \r\n  \r\n      }\r\n      catch (err) {\r\n        const errors = err.response.data.errors;\r\n        errors.map(error => {\r\n           return dispatch({\r\n            type: CREATE_FAIL,\r\n            payload: error.msg\r\n        })\r\n        })\r\n            \r\n      } \r\n  \r\n  }\r\n\r\nexport const allSprints = (id) => async dispatch  => {\r\n    try {\r\n\r\n        const res = await innerBackend.get(`/projects/sprints/${id}`)\r\n        dispatch({\r\n            type: ALL_SPRINT,\r\n            payload: res.data.sprints\r\n        })\r\n        console.log(res.data, 'my data')\r\n\r\n        }\r\n      catch (err) {\r\n        const errors = err.response.data.errors;\r\n        errors.map(error => {\r\n           return dispatch({\r\n            type: SPRINT_ERROR,\r\n            payload: error.msg\r\n        })\r\n        })            \r\n      \r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const getSprint = (id) => async dispatch  => {\r\n    console.log(id, 'айдишека')\r\n    try {\r\n        const res = await innerBackend.get(`/projects/getsprint/${id}`)\r\n        dispatch({\r\n            type: GET_SPRINT,\r\n            payload: res.data\r\n        })\r\n\r\n        }\r\n      catch (err) {\r\n        const errors = err.response.data.errors;\r\n        errors.map(error => {\r\n           return dispatch({\r\n            type: SPRINT_ERROR,\r\n            payload: error.msg\r\n        })\r\n        })            \r\n      \r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const addTasks = ({tasks, id}) => async dispatch  => {\r\n    console.log(tasks, 'id')\r\n\r\n    try {\r\n        // console.log(tasks, 'tasks', id, 'id')\r\n        const res = await innerBackend.post(`/projects/sprints/addtask/${id}`, tasks)\r\n        dispatch({\r\n            type: ADD_TASKS,\r\n            payload: res.data\r\n        })\r\n\r\n        }\r\n      catch (err) {\r\n        const errors = err.response.data.errors;\r\n        errors.map(error => {\r\n           return dispatch({\r\n            type: SPRINT_ERROR,\r\n            payload: error.msg\r\n        })\r\n        })            \r\n      \r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const finishTask = ({taskid, id}) => async dispatch  => {\r\n    let body = {\r\n        taskid: taskid \r\n    }\r\n    try {\r\n        // console.log(tasks, 'tasks', id, 'id')\r\n        const res = await innerBackend.put(`projects/sprints/DAtask/${id}`, body)\r\n        dispatch({\r\n            type: FINISH_TASK,\r\n            payload: res.data\r\n        })\r\n\r\n        }\r\n      catch (err) {\r\n        const errors = err.response.data.errors;\r\n        errors.map(error => {\r\n           return dispatch({\r\n            type: SPRINT_ERROR,\r\n            payload: error.msg\r\n        })\r\n        })            \r\n      \r\n    }\r\n\r\n}\r\n\r\n\r\nexport const finishSprint = (id) => async dispatch  => {\r\n    try {\r\n        const res = await innerBackend.put(`projects/sprints/${id}`)\r\n        dispatch({\r\n            type: FINISH_SPRINT,\r\n            payload: res.data\r\n        })\r\n        }\r\n      catch (err) {\r\n        const errors = err.response.data.errors;\r\n        errors.map(error => {\r\n           return dispatch({\r\n            type: SPRINT_ERROR,\r\n            payload: error.msg\r\n        })\r\n        })            \r\n      \r\n    }\r\n\r\n}\r\n\r\n// export const addToChosen = (id) => async dispatch  => {\r\n//     console.log ('hi sprint', id)\r\n//     try {\r\n//         const res = await innerBackend.put(`projects/favsprint/${id}`)\r\n//         dispatch({\r\n//             type: ADD_SPRINT_TO_CHOSEN,\r\n//             payload: res.data\r\n//         })\r\n//         }\r\n//       catch (err) {\r\n//         const errors = err.response.data.errors;\r\n//         errors.map(error => {\r\n//            return dispatch({\r\n//             type: SPRINT_ERROR,\r\n//             payload: error.msg\r\n//         })\r\n//         })            \r\n      \r\n//     }\r\n\r\n// }\r\n\r\nexport const finishProject = (id) => async dispatch  => {\r\n   \r\n    try {\r\n        const res = await innerBackend.put(`projects/finish/${id}`)\r\n        dispatch({\r\n            type: FINISH_PROJECT,\r\n            payload: res.data\r\n        })\r\n        }\r\n      catch (err) {\r\n        const errors = err.response.data.errors;\r\n        errors.map(error => {\r\n           return dispatch({\r\n            type: CREATE_FAIL,\r\n            payload: error.msg\r\n        })\r\n        })            \r\n      \r\n    }\r\n\r\n}\r\n\r\nexport const deleteProject = (crypt) => async dispatch  => {\r\n\r\n    try {\r\n        // console.log(tasks, 'tasks', id, 'id')\r\n        const res = await innerBackend.delete(`projects/${crypt}`)\r\n        dispatch({\r\n            type: DELETE_PROJECT,\r\n            payload: res.data\r\n        })\r\n\r\n        }\r\n      catch (err) {\r\n        const errors = err.response.data.errors;\r\n        errors.map(error => {\r\n           return dispatch({\r\n            type: SPRINT_ERROR,\r\n            payload: error.msg\r\n        })\r\n        })            \r\n      \r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const joinTeam = (id) => async dispatch  => {\r\n\r\n    try {\r\n\r\n        const res = await innerBackend.put(`/projects/jointeam/${id}`)\r\n        dispatch({\r\n            type: JOIN_TEAM,\r\n            payload: res.data\r\n        })\r\n\r\n        }\r\n      catch (err) {\r\n        const errors = err.response.data.errors;\r\n        errors.map(error => {\r\n           return dispatch({\r\n            type: SPRINT_ERROR,\r\n            payload: error.msg\r\n        })\r\n        })            \r\n      \r\n    }\r\n\r\n}","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Auth\\RegisterCustomer.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Auth\\Register.js",["456"],"import  {useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { register } from '../../redux/actions/auth';\r\nimport {Input, LogForm} from '../../Styles/Forms'\r\nimport {Button} from '../../Styles/buttons'\r\n\r\nconst Auth = () => {\r\nconst dispatch = useDispatch();\r\n\r\n    const [formData, setFormData ] = useState({\r\n        \r\n        email: '',\r\n        password: '',\r\n        name: '',\r\n        position: '',\r\n        permCode: ''\r\n      \r\n      });\r\n      \r\n\r\n      const { name, email, password, position, permCode } = formData;\r\n\r\n  \r\n    const onChange = e => {\r\n        e.preventDefault(); \r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n     }\r\n     \r\n\r\n     const onSubmit = async e => {\r\n        e.preventDefault();\r\n        let file = null;\r\n        dispatch(register({formData}))\r\n           \r\n        }\r\n\r\n    return (\r\n        <div style={{display: 'flex', justifyContent:'center'}}>\r\n            <LogForm onSubmit={onSubmit}>\r\n            <Input \r\n                type='email'\r\n                placeholder='email'\r\n                name='email'\r\n                value={email}\r\n                onChange={e => onChange(e)}/>\r\n\r\n           <Input \r\n                type='password'\r\n                placeholder='password'\r\n                name='password'\r\n                value={password}\r\n                onChange={e => onChange(e)}/>\r\n\r\n\r\n            <Input \r\n                type='name'\r\n                placeholder='Имя'\r\n                name='name'\r\n                value={name}\r\n                onChange={e => onChange(e)}/>\r\n\r\n\r\n\r\n            <Input \r\n                type='position'\r\n                placeholder='Должность'\r\n                name='position'\r\n                value={position}\r\n                onChange={e => onChange(e)}/>\r\n            <Input \r\n                type='text'\r\n                placeholder='Код организации'\r\n                name='permCode'\r\n                value={permCode}\r\n                onChange={e => onChange(e)}/>\r\n\r\n            <Button style={{width:'20vw'}} type=\"submit\"> Зарегистрироваться</Button>\r\n\r\n            </LogForm>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Auth","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Auth\\Login.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\types.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Layout\\sidebar.js",["457","458","459","460","461"],"import { useSelector } from 'react-redux'\r\nimport './sidebar.css'\r\nimport { useRef } from \"react\";\r\nimport {SidebarContainer, SidebarLink} from '../../Styles/layout'\r\n\r\n\r\nconst Sidebar = ({dimensions}) => {\r\n\r\nconst user = useSelector(state => state.auth.user)\r\nconst adminka = useRef(null)\r\n\r\n\r\n\r\n    return (\r\n         <SidebarContainer style={{display: dimensions.width<600? 'none' : 'block'}}>\r\n\r\n            <SidebarLink to='/' className=\"nav-link\" >\r\n                    <img className='sidebar__logo' src='sidebarIcon.png' title=\"Главная\" />\r\n                    <p></p>\r\n            </SidebarLink>\r\n\r\n\r\n            <SidebarLink to='/' className=\"nav-link\" >\r\n                    <img src='sidebarIcon.png' title=\"Главная\" />\r\n                    <p>Главная</p>\r\n            </SidebarLink>\r\n        \r\n\r\n            \r\n        \r\n            <SidebarLink to='/projects' className=\"nav-link\" >\r\n                    <img src='/sidebarIcon.png' title=\"Все проекты\" />\r\n                    <p>Проекты</p>\r\n            </SidebarLink>\r\n       \r\n\r\n            <SidebarLink to='/users' className=\"nav-link\" > \r\n                    <img src='/sidebarIcon.png' title=\"Команда\"/>\r\n                    <p>Команда</p>\r\n            </SidebarLink>\r\n         \r\n\r\n\r\n            {user.permission==='admin'?\r\n            <SidebarLink ref={adminka}  to='/admin' className=\"nav-link\">\r\n                    <img src='/sidebarIcon.png' title=\"Админка\"></img>  \r\n                    {user.permission==='admin'?<p>Админка</p>:''}\r\n            </SidebarLink>: ''}\r\n                                    \r\n\r\n         </SidebarContainer>\r\n         )\r\n}\r\n\r\n\r\n\r\nexport default Sidebar","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Layout\\header.js",["462","463","464","465","466","467"],"\r\n\r\nimport { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport {Header, ItemHead} from '../../Styles/layout'\r\nimport {Bold} from '../../Styles/typography'\r\nimport { url } from '../utils/axios'\r\nimport Menu from './Menu'\r\nimport MenuMobile from './menuMobile'\r\n\r\n\r\nconst HeaderL = ({dimensions}) => {\r\n    const loaded = useSelector(state => state.auth.loaded)\r\n    const user = useSelector(state => state.auth.user)\r\n    const [open, setOpen] = useState({\r\n        menu: false,\r\n        menuProfile: false,\r\n        mobile: false\r\n    })\r\n    const mobile = dimensions.width<600? true : false\r\n\r\n    const mobClick = () => { \r\n        setOpen({...open, mobile: !open.mobile})\r\n        console.log(open)\r\n    }\r\n\r\n\r\n    const allFalse= () => {\r\n        setOpen({...open, mobile: false, menu:false, menuProfile: false})\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {!loaded? <div>loading...</div> :(\r\n        <Header mobile={mobile}>\r\n\r\n            <ItemHead className='mobile__menu' mobile={mobile} onClick={() => mobClick()}>\r\n                <Bold size='14' color='white'>меню</Bold>\r\n                <img className='arrow' src='/headerArrow.png'/>\r\n            </ItemHead>\r\n\r\n            <ItemHead mobile={mobile} onClick={() => setOpen({...open, menuProfile:false , menu: !open.menu})}>\r\n                <img className='invert' src='/headerPlus.png'/>\r\n                <img className='arrow' src='/headerArrow.png'/>\r\n            </ItemHead>\r\n            \r\n            <ItemHead mobile={mobile} onClick={() => setOpen({...open, menu:false, menuProfile: !open.menuProfile})}>\r\n                <img  width=\"40px\" style={{borderRadius:'50px'}} src={`${url}/${user != null? (user!= undefined? user.avatar:''):''}`}/>\r\n                <img className='arrow' src='/headerArrow.png'/>\r\n            </ItemHead>\r\n            \r\n           \r\n\r\n        </Header>\r\n)}\r\n        <Menu closeAll={()=>allFalse()} mobile={mobile} state={open}/>\r\n        <MenuMobile open={open.mobile} closeAll={()=>allFalse()} />\r\n\r\n          </>\r\n    )\r\n}\r\n\r\n\r\nexport default HeaderL","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\reducers\\auth.js",["468"],"\r\nimport {REGISTER, AUTH_ERROR, LOGIN, USER_LOADED, CHANGE_USERDATA, CHANGE_AVATAR, CHANGE_LOADED, ADD_SPRINT_TO_CHOSEN} from '../types'\r\n\r\n\r\n\r\nconst initialState = {\r\n    user: null,\r\n    isAuthenticated: false,\r\n    token: false,\r\n    msg:'',\r\n    error: '',\r\n    loaded: false\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    const {\r\n        type, payload\r\n    } = action;\r\n\r\n    switch(type){\r\n        case REGISTER:\r\n        case LOGIN:\r\n             localStorage.setItem('token', payload.token);\r\n             console.log(localStorage.token, 'NEW TOKEN ')\r\n            return {\r\n                ...state,\r\n                loaded: true,\r\n                token: true,\r\n                error: ''\r\n                \r\n            }\r\n            case USER_LOADED:\r\n                return {\r\n                    ...state,\r\n                    loaded: true,\r\n                    isAuthenticated: true,\r\n                    user: payload\r\n                }\r\n                case CHANGE_LOADED:\r\n                    return {\r\n                        ...state,\r\n                        loaded: true\r\n                    }\r\n            \r\n                case CHANGE_USERDATA:\r\n                    return {\r\n                        ...state,\r\n                      \r\n                        loaded: false,\r\n                        msg: payload\r\n                    }\r\n                    case CHANGE_AVATAR:\r\n                        return {\r\n                            ...state,\r\n                        \r\n                            loaded: false,\r\n                            msg: payload\r\n                        }\r\n                case ADD_SPRINT_TO_CHOSEN:\r\n                    console.log('here is payload',payload)    \r\n                \r\n                return {\r\n                        ...state,\r\n                        \r\n                        msg: payload\r\n                    }\r\n            case AUTH_ERROR:\r\n                return {\r\n                    ...state,\r\n                    isAuthenticated: false,\r\n                    error: payload\r\n                }\r\n            \r\n            default: \r\n                return state;\r\n    }\r\n\r\n} \r\n","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\reducers\\users.js",["469","470","471","472","473","474","475"],"\r\nimport {REGISTER, AUTH_ERROR, LOGIN, USER_LOADED, ALL_USERS, CHANGE_PERMISSION,PERM_RETURN,ONE_USER, CHANGE_USERDATA, CHANGE_AVATAR} from '../types'\r\n\r\n\r\n\r\nconst initialState = {\r\n    user: null,\r\n    users: [],\r\n    loaded: false,\r\n    msg: '',\r\n    userLoaded: false\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    const {\r\n        type, payload\r\n    } = action;\r\n\r\n    switch(type){\r\n        case ONE_USER:\r\n            return {\r\n                ...state,\r\n                user: payload,\r\n                userLoaded: true\r\n            }\r\n        case PERM_RETURN:\r\n            return {\r\n                ...state,\r\n                loaded: false,\r\n                \r\n            }\r\n            case ALL_USERS:\r\n                return {\r\n                    ...state,\r\n                    loaded: true,\r\n                    users: payload\r\n                }\r\n                case CHANGE_PERMISSION:\r\n                    return {\r\n                        ...state,\r\n                        loaded: true,\r\n                        msg: payload\r\n                    }\r\n                    \r\n                    \r\n            default: \r\n                return state;\r\n    }\r\n\r\n} \r\n","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\reducers\\tickets.js",["476"],"import { ALL_TICKETS, GET_TICKET, NEW_ERROR, NEW_TICKET } from \"../types\";\r\n\r\n\r\n\r\n\r\nconst initialState = {\r\n    tickets: [],\r\n    ticket: null,\r\n    ticketLoad: false,\r\n    error: '',\r\n    loaded: false\r\n    \r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    const {\r\n        type, payload\r\n    } = action;\r\n\r\n    switch(type){\r\n        case NEW_TICKET:\r\n            return {\r\n                ...state,\r\n                error: ''\r\n                \r\n                \r\n            }\r\n        case ALL_TICKETS:\r\n            return {\r\n                ...state,\r\n                loaded: true,\r\n                error: '',\r\n                tickets: payload\r\n                \r\n                \r\n            }\r\n\r\n        case GET_TICKET:\r\n            return {\r\n                ...state,\r\n                ticketLoad: true,\r\n                error: '',\r\n                ticket: payload\r\n                \r\n                \r\n            }\r\n        case NEW_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                \r\n                \r\n                \r\n            }\r\n            default: \r\n                return state;\r\n        }\r\n    }","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\reducers\\news.js",["477"],"import { ALL_NEWS, GET_NEWS, DELETE_NEWS, UPDATE_NEWS, NEWS_FAIL, } from \"../types\";\r\n\r\n\r\n\r\nconst initialState = {\r\n    news: null,\r\n    getNews: null,\r\n    error: '',\r\n   \r\n    loaded: false,\r\n    \r\n}\r\n\r\n\r\n\r\nexport default function(state = initialState, action) {\r\n    const {\r\n        type, payload\r\n    } = action;\r\n\r\n    switch(type){\r\n       \r\n\r\n            case ALL_NEWS:\r\n                return {\r\n                    ...state,\r\n                    loaded: true,\r\n                    news: payload,\r\n                    // loadNews: true,\r\n                    error: ''\r\n                }\r\n\r\n            case GET_NEWS:\r\n                return {\r\n                    ...state,\r\n                    getNews: payload,\r\n                    // loadNews: true,\r\n\r\n                    error: ''\r\n                }\r\n          \r\n            \r\n            case UPDATE_NEWS:\r\n                return {\r\n                    ...state,\r\n                    loaded: true,\r\n                    getNews: payload,\r\n                    error: ''\r\n                }\r\n\r\n            case DELETE_NEWS: \r\n                return {\r\n                    ...state,\r\n                    msg: payload\r\n                }\r\n\r\n                case NEWS_FAIL:\r\n                    return {\r\n                        ...state,\r\n                        error: payload,\r\n                       \r\n                    }\r\n            \r\n            default: \r\n                return state;\r\n    }\r\n\r\n} ","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\reducers\\projects.js",["478","479"],"\r\nimport { ADD_SPRINT, ALL_PROJECTS,EDIT_PROJECT, CREATE_FAIL, GET_PROJECT, SPRINT_ERROR, ALL_SPRINT, UPDATE_PROJECT, GET_SPRINT, ADD_TASKS, FINISH_TASK, DELETE_PROJECT, FINISH_SPRINT, JOIN_TEAM,ADD_SPRINT_TO_CHOSEN,FINISH_PROJECT } from '../types'\r\n\r\n\r\n\r\nconst initialState = {\r\n    projects: null,\r\n    project: null,\r\n    loadProject: false,\r\n    loadedAllProj: false,\r\n    sprints: [],\r\n    loadSprints: false,\r\n    sprint: [],\r\n    tasks: [],\r\n    tasksLoad: false,\r\n    error: '',\r\n    reload: false,\r\n    sprintLoad: false\r\n    \r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    const {\r\n        type, payload\r\n    } = action;\r\n\r\n    switch(type){\r\n       \r\n\r\n            case ALL_PROJECTS:\r\n                return {\r\n                    ...state,\r\n                    loadedAllProj: true,\r\n                    projects: payload,\r\n                    loadProject: false,\r\n                    sprint_load: false,\r\n                    sprintLoad: false,\r\n\r\n                    error: ''\r\n                }\r\n                case EDIT_PROJECT:\r\n                    return {\r\n                        ...state,\r\n                        loadProject: false,\r\n                     \r\n                    }\r\n            case GET_PROJECT:\r\n                return {\r\n                    ...state,\r\n                    project: payload,\r\n                    loadedAllProj: false,\r\n                    loadProject: true,\r\n                    sprint_load: false,\r\n                    sprintLoad: false,\r\n\r\n                    error: ''\r\n                }\r\n            case ADD_SPRINT:\r\n                return {\r\n                    ...state,\r\n                    sprint: payload,\r\n                    sprint_load: true,\r\n\r\n                    reload: true,\r\n                    error: ''\r\n                }\r\n\r\n                case ADD_TASKS:\r\n                return {\r\n                    ...state,\r\n                    tasks: payload,\r\n                    error: ''\r\n                }\r\n                case JOIN_TEAM:\r\n                    return {\r\n                        ...state,\r\n                        project: payload,\r\n                        msg: payload.msg,\r\n                        error: ''\r\n                    }\r\n            case ALL_SPRINT:\r\n                return {\r\n                    ...state,\r\n                    sprints: payload,\r\n                    loadSprints: true,\r\n                    sprintLoad: false,\r\n                    sprint: null,\r\n                    error: ''\r\n                }\r\n            case GET_SPRINT:\r\n                return {\r\n                    ...state,\r\n                    sprint: payload,\r\n                    reload: false,\r\n                    loadProject: false,\r\n                    sprintLoad: true,\r\n                    loadSprints: true,\r\n                    error: ''\r\n                }\r\n            case UPDATE_PROJECT:\r\n                return {\r\n                    ...state,\r\n                    loadedAllProj: true,\r\n                    project: payload,\r\n                    error: ''\r\n                }\r\n                case FINISH_PROJECT:\r\n                    return {\r\n                        ...state,\r\n                        msg: payload,\r\n                        loadedAllProj: false,\r\n                    }\r\n            case FINISH_SPRINT:\r\n                return {\r\n                    ...state,\r\n                    msg: payload,\r\n                    error: ''\r\n                }\r\n                // case ADD_SPRINT_TO_CHOSEN:\r\n                //     return {\r\n                //         ...state,\r\n                    \r\n                //         msg: payload\r\n                //     }\r\n            case CREATE_FAIL:\r\n                return {\r\n                    ...state,\r\n                    error: payload,\r\n                    loadProject: false,\r\n                    loadedAllProj: false\r\n                }\r\n                case FINISH_TASK:\r\n                    return {\r\n                    ...state,\r\n                    hey: payload\r\n                }   \r\n            case SPRINT_ERROR:\r\n                return {\r\n                    ...state,\r\n                    error: payload,\r\n                    loadProject: false,\r\n                    loadedAllProj: false\r\n                }\r\n            case DELETE_PROJECT: \r\n                return {\r\n                    ...state,\r\n                    msg: payload\r\n                }\r\n\r\n\r\n            \r\n            default: \r\n                return state;\r\n    }\r\n\r\n} \r\n","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Layout\\MenuProfile.js",["480","481"],"import { NavLink } from \"react-router-dom\"\r\nimport {useSelector} from 'react-redux'\r\nimport {MenuHead, StyledLink} from '../../Styles/layout'\r\n\r\n\r\n\r\n\r\nconst MenuProfile = () => {\r\n  const user = useSelector(state => state.auth.user)\r\n \r\n    return (\r\n        <MenuHead >\r\n            <StyledLink\r\n              to='/users/me'\r\n              >Мой профиль</StyledLink>\r\n\r\n\r\n            <StyledLink\r\n              to='/projects/my'\r\n               >Мои проекты</StyledLink>\r\n            \r\n\r\n              \r\n               \r\n\r\n\r\n        </MenuHead>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default MenuProfile",["482","483"],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Layout\\Menu.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Layout\\menuMobile.js",["484","485"],"import { useEffect } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport styles from '../../Styles/modules/components/mobileMenu.module.css'\r\nimport {Light, Bold} from '../../Styles/typography'\r\nimport { MobMenuLink } from '../../Styles/layout'\r\n\r\nconst MenuMobile = ({open, closeAll}) => {\r\n\r\n\r\n    return(\r\n        <CSSTransition\r\n        in={open}\r\n        timeout={300}\r\n        classNames={{\r\n            enter:   styles.transitionsEnter,\r\n            enterActive:   styles.transitionsEnterActive,\r\n            exit:  styles.transitionsExit,\r\n            exitActive:   styles.transitionsExitActive,\r\n        }}\r\n        unmountOnExit\r\n        >\r\n            <div className={styles.mobMenu}>\r\n                <div className={styles.mobGrid}>\r\n                    <Light className={styles.title} color='white' size='16'>Главное</Light>\r\n                        <MobMenuLink to='/' className={styles.menuButton} onClick={closeAll}> Главная</MobMenuLink>\r\n                        <MobMenuLink to='/projects' className={styles.menuButton} onClick={closeAll}>Проекты</MobMenuLink>\r\n                        <MobMenuLink to='/users' className={styles.menuButton} onClick={closeAll}>Сотрудники</MobMenuLink>\r\n                    <Light className={styles.title} color='white' size='16'>тут что-то будет</Light>\r\n                </div>    \r\n            </div> \r\n        </CSSTransition>\r\n\r\n    )\r\n}\r\nexport default MenuMobile","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Projects\\components\\ProjTeam.js",["486","487","488","489","490"],"import { useEffect, useState } from \"react\"\r\nimport { Button } from \"../../../Styles/buttons\"\r\nimport { Card } from \"../../../Styles/common\"\r\n\r\n\r\nimport style from '../../../Styles/modules/components/Project/projteam.module.css'\r\nimport { Thin, Bold, Light,Regular } from \"../../../Styles/typography\"\r\nexport const url = process.env.REACT_APP_IP;\r\n\r\n\r\nconst ProjTeam = ({userName,userPos,userAvatar}) => {\r\n\t\r\n\treturn (\r\n\t<>\r\n\t\t{/* {!loaded?<div>loading...</div>:( */}\r\n\t\t\t<div>\r\n\t\t\r\n\t\t\t\t<Card  className={style.card}>\r\n\t\t\t\t\t<div className={style.image_info}>\r\n\t\t\t\t\t\t<img  className={style.image} src={url+'/'+userAvatar}></img>\r\n\t\t\t\t\t\t<div className={style.info}>\r\n\t\t\t\t\t\t\t<div className={style.name}><Bold size={24}>{userName}</Bold></div>\r\n\t\t\t\t\t\t\t<div className={style.position}><Light size={20}>{userPos}</Light></div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={style.button_cont}>\r\n\t\t\t\t\t\t<Button className={style.button} fontSize={'16px'} padd={'60px'}>Профиль</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t{/* )} */}\r\n\t\t</>\r\n\t)\r\n}\r\nexport default ProjTeam",{"ruleId":"491","severity":1,"message":"492","line":19,"column":4,"nodeType":"493","endLine":19,"endColumn":6,"suggestions":"494"},{"ruleId":"495","replacedBy":"496"},{"ruleId":"497","replacedBy":"498"},{"ruleId":"499","severity":1,"message":"500","line":14,"column":10,"nodeType":"501","messageId":"502","endLine":14,"endColumn":19},{"ruleId":"491","severity":1,"message":"503","line":29,"column":3,"nodeType":"493","endLine":29,"endColumn":5,"suggestions":"504"},{"ruleId":"505","severity":1,"message":"506","line":11,"column":13,"nodeType":"507","endLine":11,"endColumn":115},{"ruleId":"508","severity":1,"message":"509","line":11,"column":78,"nodeType":"510","messageId":"511","endLine":11,"endColumn":80},{"ruleId":"499","severity":1,"message":"512","line":4,"column":21,"nodeType":"501","messageId":"502","endLine":4,"endColumn":25},{"ruleId":"499","severity":1,"message":"513","line":4,"column":27,"nodeType":"501","messageId":"502","endLine":4,"endColumn":34},{"ruleId":"508","severity":1,"message":"509","line":14,"column":16,"nodeType":"510","messageId":"511","endLine":14,"endColumn":18},{"ruleId":"508","severity":1,"message":"514","line":17,"column":50,"nodeType":"510","messageId":"511","endLine":17,"endColumn":52},{"ruleId":"508","severity":1,"message":"509","line":20,"column":34,"nodeType":"510","messageId":"511","endLine":20,"endColumn":36},{"ruleId":"491","severity":1,"message":"515","line":23,"column":4,"nodeType":"493","endLine":23,"endColumn":13,"suggestions":"516"},{"ruleId":"491","severity":1,"message":"517","line":32,"column":4,"nodeType":"493","endLine":32,"endColumn":6,"suggestions":"518"},{"ruleId":"508","severity":1,"message":"509","line":47,"column":33,"nodeType":"510","messageId":"511","endLine":47,"endColumn":35},{"ruleId":"508","severity":1,"message":"514","line":18,"column":28,"nodeType":"510","messageId":"511","endLine":18,"endColumn":30},{"ruleId":"519","severity":1,"message":"520","line":18,"column":62,"nodeType":"501","messageId":"521","endLine":18,"endColumn":65},{"ruleId":"508","severity":1,"message":"514","line":63,"column":103,"nodeType":"510","messageId":"511","endLine":63,"endColumn":105},{"ruleId":"508","severity":1,"message":"509","line":64,"column":46,"nodeType":"510","messageId":"511","endLine":64,"endColumn":48},{"ruleId":"499","severity":1,"message":"522","line":1,"column":21,"nodeType":"501","messageId":"502","endLine":1,"endColumn":29},{"ruleId":"499","severity":1,"message":"523","line":1,"column":31,"nodeType":"501","messageId":"502","endLine":1,"endColumn":37},{"ruleId":"499","severity":1,"message":"524","line":5,"column":19,"nodeType":"501","messageId":"502","endLine":5,"endColumn":31},{"ruleId":"499","severity":1,"message":"525","line":5,"column":33,"nodeType":"501","messageId":"502","endLine":5,"endColumn":47},{"ruleId":"499","severity":1,"message":"526","line":5,"column":64,"nodeType":"501","messageId":"502","endLine":5,"endColumn":74},{"ruleId":"499","severity":1,"message":"527","line":8,"column":10,"nodeType":"501","messageId":"502","endLine":8,"endColumn":15},{"ruleId":"499","severity":1,"message":"528","line":8,"column":17,"nodeType":"501","messageId":"502","endLine":8,"endColumn":19},{"ruleId":"499","severity":1,"message":"529","line":8,"column":21,"nodeType":"501","messageId":"502","endLine":8,"endColumn":23},{"ruleId":"499","severity":1,"message":"500","line":9,"column":10,"nodeType":"501","messageId":"502","endLine":9,"endColumn":19},{"ruleId":"499","severity":1,"message":"530","line":10,"column":14,"nodeType":"501","messageId":"502","endLine":10,"endColumn":16},{"ruleId":"499","severity":1,"message":"531","line":20,"column":11,"nodeType":"501","messageId":"502","endLine":20,"endColumn":14},{"ruleId":"499","severity":1,"message":"532","line":24,"column":46,"nodeType":"501","messageId":"502","endLine":24,"endColumn":51},{"ruleId":"499","severity":1,"message":"533","line":24,"column":53,"nodeType":"501","messageId":"502","endLine":24,"endColumn":58},{"ruleId":"499","severity":1,"message":"534","line":30,"column":29,"nodeType":"501","messageId":"502","endLine":30,"endColumn":36},{"ruleId":"499","severity":1,"message":"535","line":30,"column":46,"nodeType":"501","messageId":"502","endLine":30,"endColumn":50},{"ruleId":"499","severity":1,"message":"536","line":30,"column":52,"nodeType":"501","messageId":"502","endLine":30,"endColumn":56},{"ruleId":"499","severity":1,"message":"537","line":30,"column":58,"nodeType":"501","messageId":"502","endLine":30,"endColumn":64},{"ruleId":"491","severity":1,"message":"538","line":55,"column":8,"nodeType":"493","endLine":55,"endColumn":10,"suggestions":"539"},{"ruleId":"499","severity":1,"message":"540","line":38,"column":10,"nodeType":"501","messageId":"502","endLine":38,"endColumn":22},{"ruleId":"499","severity":1,"message":"541","line":47,"column":10,"nodeType":"501","messageId":"502","endLine":47,"endColumn":14},{"ruleId":"499","severity":1,"message":"542","line":47,"column":16,"nodeType":"501","messageId":"502","endLine":47,"endColumn":23},{"ruleId":"491","severity":1,"message":"503","line":79,"column":6,"nodeType":"493","endLine":79,"endColumn":14,"suggestions":"543"},{"ruleId":"499","severity":1,"message":"544","line":1,"column":10,"nodeType":"501","messageId":"502","endLine":1,"endColumn":17},{"ruleId":"499","severity":1,"message":"545","line":4,"column":28,"nodeType":"501","messageId":"502","endLine":4,"endColumn":43},{"ruleId":"499","severity":1,"message":"546","line":5,"column":9,"nodeType":"501","messageId":"502","endLine":5,"endColumn":13},{"ruleId":"499","severity":1,"message":"500","line":7,"column":10,"nodeType":"501","messageId":"502","endLine":7,"endColumn":19},{"ruleId":"499","severity":1,"message":"547","line":8,"column":10,"nodeType":"501","messageId":"502","endLine":8,"endColumn":16},{"ruleId":"499","severity":1,"message":"530","line":10,"column":14,"nodeType":"501","messageId":"502","endLine":10,"endColumn":16},{"ruleId":"499","severity":1,"message":"548","line":15,"column":8,"nodeType":"501","messageId":"502","endLine":15,"endColumn":12},{"ruleId":"499","severity":1,"message":"549","line":16,"column":8,"nodeType":"501","messageId":"502","endLine":16,"endColumn":15},{"ruleId":"499","severity":1,"message":"550","line":18,"column":8,"nodeType":"501","messageId":"502","endLine":18,"endColumn":18},{"ruleId":"491","severity":1,"message":"503","line":27,"column":4,"nodeType":"493","endLine":27,"endColumn":6,"suggestions":"551"},{"ruleId":"499","severity":1,"message":"552","line":4,"column":11,"nodeType":"501","messageId":"502","endLine":4,"endColumn":19},{"ruleId":"499","severity":1,"message":"523","line":8,"column":28,"nodeType":"501","messageId":"502","endLine":8,"endColumn":34},{"ruleId":"499","severity":1,"message":"553","line":15,"column":10,"nodeType":"501","messageId":"502","endLine":15,"endColumn":16},{"ruleId":"499","severity":1,"message":"500","line":16,"column":10,"nodeType":"501","messageId":"502","endLine":16,"endColumn":19},{"ruleId":"499","severity":1,"message":"530","line":17,"column":14,"nodeType":"501","messageId":"502","endLine":17,"endColumn":16},{"ruleId":"491","severity":1,"message":"503","line":33,"column":5,"nodeType":"493","endLine":33,"endColumn":7,"suggestions":"554"},{"ruleId":"499","severity":1,"message":"552","line":2,"column":11,"nodeType":"501","messageId":"502","endLine":2,"endColumn":19},{"ruleId":"499","severity":1,"message":"555","line":9,"column":10,"nodeType":"501","messageId":"502","endLine":9,"endColumn":20},{"ruleId":"499","severity":1,"message":"500","line":12,"column":10,"nodeType":"501","messageId":"502","endLine":12,"endColumn":19},{"ruleId":"499","severity":1,"message":"547","line":13,"column":10,"nodeType":"501","messageId":"502","endLine":13,"endColumn":16},{"ruleId":"499","severity":1,"message":"556","line":14,"column":10,"nodeType":"501","messageId":"502","endLine":14,"endColumn":12},{"ruleId":"499","severity":1,"message":"530","line":14,"column":14,"nodeType":"501","messageId":"502","endLine":14,"endColumn":16},{"ruleId":"499","severity":1,"message":"557","line":17,"column":8,"nodeType":"501","messageId":"502","endLine":17,"endColumn":10},{"ruleId":"499","severity":1,"message":"558","line":18,"column":10,"nodeType":"501","messageId":"502","endLine":18,"endColumn":13},{"ruleId":"491","severity":1,"message":"559","line":116,"column":3,"nodeType":"493","endLine":116,"endColumn":5,"suggestions":"560"},{"ruleId":"499","severity":1,"message":"558","line":4,"column":10,"nodeType":"501","messageId":"502","endLine":4,"endColumn":13},{"ruleId":"499","severity":1,"message":"547","line":5,"column":9,"nodeType":"501","messageId":"502","endLine":5,"endColumn":15},{"ruleId":"499","severity":1,"message":"561","line":6,"column":8,"nodeType":"501","messageId":"502","endLine":6,"endColumn":14},{"ruleId":"499","severity":1,"message":"562","line":8,"column":9,"nodeType":"501","messageId":"502","endLine":8,"endColumn":21},{"ruleId":"499","severity":1,"message":"563","line":9,"column":10,"nodeType":"501","messageId":"502","endLine":9,"endColumn":14},{"ruleId":"499","severity":1,"message":"564","line":9,"column":16,"nodeType":"501","messageId":"502","endLine":9,"endColumn":30},{"ruleId":"499","severity":1,"message":"565","line":17,"column":10,"nodeType":"501","messageId":"502","endLine":17,"endColumn":12},{"ruleId":"499","severity":1,"message":"566","line":19,"column":11,"nodeType":"501","messageId":"502","endLine":19,"endColumn":17},{"ruleId":"491","severity":1,"message":"503","line":23,"column":7,"nodeType":"493","endLine":23,"endColumn":9,"suggestions":"567"},{"ruleId":"499","severity":1,"message":"568","line":1,"column":10,"nodeType":"501","messageId":"502","endLine":1,"endColumn":19},{"ruleId":"499","severity":1,"message":"558","line":4,"column":10,"nodeType":"501","messageId":"502","endLine":4,"endColumn":13},{"ruleId":"499","severity":1,"message":"569","line":26,"column":19,"nodeType":"501","messageId":"502","endLine":26,"endColumn":26},{"ruleId":"499","severity":1,"message":"522","line":1,"column":21,"nodeType":"501","messageId":"502","endLine":1,"endColumn":29},{"ruleId":"499","severity":1,"message":"558","line":4,"column":10,"nodeType":"501","messageId":"502","endLine":4,"endColumn":13},{"ruleId":"499","severity":1,"message":"527","line":7,"column":10,"nodeType":"501","messageId":"502","endLine":7,"endColumn":15},{"ruleId":"499","severity":1,"message":"528","line":7,"column":17,"nodeType":"501","messageId":"502","endLine":7,"endColumn":19},{"ruleId":"499","severity":1,"message":"529","line":7,"column":21,"nodeType":"501","messageId":"502","endLine":7,"endColumn":23},{"ruleId":"499","severity":1,"message":"553","line":8,"column":10,"nodeType":"501","messageId":"502","endLine":8,"endColumn":16},{"ruleId":"499","severity":1,"message":"500","line":9,"column":10,"nodeType":"501","messageId":"502","endLine":9,"endColumn":19},{"ruleId":"499","severity":1,"message":"563","line":9,"column":21,"nodeType":"501","messageId":"502","endLine":9,"endColumn":25},{"ruleId":"491","severity":1,"message":"570","line":28,"column":7,"nodeType":"493","endLine":28,"endColumn":9,"suggestions":"571"},{"ruleId":"499","severity":1,"message":"572","line":6,"column":10,"nodeType":"501","messageId":"502","endLine":6,"endColumn":21},{"ruleId":"499","severity":1,"message":"573","line":8,"column":10,"nodeType":"501","messageId":"502","endLine":8,"endColumn":19},{"ruleId":"499","severity":1,"message":"552","line":10,"column":11,"nodeType":"501","messageId":"502","endLine":10,"endColumn":19},{"ruleId":"499","severity":1,"message":"527","line":11,"column":10,"nodeType":"501","messageId":"502","endLine":11,"endColumn":15},{"ruleId":"499","severity":1,"message":"528","line":11,"column":17,"nodeType":"501","messageId":"502","endLine":11,"endColumn":19},{"ruleId":"499","severity":1,"message":"529","line":11,"column":21,"nodeType":"501","messageId":"502","endLine":11,"endColumn":23},{"ruleId":"499","severity":1,"message":"553","line":12,"column":10,"nodeType":"501","messageId":"502","endLine":12,"endColumn":16},{"ruleId":"499","severity":1,"message":"500","line":13,"column":10,"nodeType":"501","messageId":"502","endLine":13,"endColumn":19},{"ruleId":"499","severity":1,"message":"563","line":13,"column":21,"nodeType":"501","messageId":"502","endLine":13,"endColumn":25},{"ruleId":"499","severity":1,"message":"530","line":14,"column":20,"nodeType":"501","messageId":"502","endLine":14,"endColumn":22},{"ruleId":"499","severity":1,"message":"574","line":28,"column":11,"nodeType":"501","messageId":"502","endLine":28,"endColumn":21},{"ruleId":"499","severity":1,"message":"575","line":33,"column":11,"nodeType":"501","messageId":"502","endLine":33,"endColumn":16},{"ruleId":"499","severity":1,"message":"576","line":36,"column":11,"nodeType":"501","messageId":"502","endLine":36,"endColumn":16},{"ruleId":"491","severity":1,"message":"577","line":55,"column":8,"nodeType":"493","endLine":55,"endColumn":10,"suggestions":"578"},{"ruleId":"508","severity":1,"message":"509","line":60,"column":23,"nodeType":"510","messageId":"511","endLine":60,"endColumn":25},{"ruleId":"579","severity":1,"message":"580","line":70,"column":86,"nodeType":"581","messageId":"582","endLine":70,"endColumn":88},{"ruleId":"491","severity":1,"message":"583","line":91,"column":5,"nodeType":"493","endLine":91,"endColumn":18,"suggestions":"584"},{"ruleId":"508","severity":1,"message":"514","line":108,"column":28,"nodeType":"510","messageId":"511","endLine":108,"endColumn":30},{"ruleId":"508","severity":1,"message":"514","line":109,"column":28,"nodeType":"510","messageId":"511","endLine":109,"endColumn":30},{"ruleId":"508","severity":1,"message":"514","line":110,"column":28,"nodeType":"510","messageId":"511","endLine":110,"endColumn":30},{"ruleId":"508","severity":1,"message":"514","line":111,"column":28,"nodeType":"510","messageId":"511","endLine":111,"endColumn":30},{"ruleId":"508","severity":1,"message":"514","line":117,"column":28,"nodeType":"510","messageId":"511","endLine":117,"endColumn":30},{"ruleId":"508","severity":1,"message":"514","line":118,"column":28,"nodeType":"510","messageId":"511","endLine":118,"endColumn":30},{"ruleId":"508","severity":1,"message":"514","line":119,"column":28,"nodeType":"510","messageId":"511","endLine":119,"endColumn":30},{"ruleId":"508","severity":1,"message":"514","line":120,"column":28,"nodeType":"510","messageId":"511","endLine":120,"endColumn":30},{"ruleId":"579","severity":1,"message":"580","line":128,"column":49,"nodeType":"581","messageId":"582","endLine":128,"endColumn":51},{"ruleId":"579","severity":1,"message":"580","line":136,"column":31,"nodeType":"581","messageId":"582","endLine":136,"endColumn":33},{"ruleId":"579","severity":1,"message":"580","line":142,"column":89,"nodeType":"581","messageId":"582","endLine":142,"endColumn":91},{"ruleId":"579","severity":1,"message":"580","line":148,"column":33,"nodeType":"581","messageId":"582","endLine":148,"endColumn":35},{"ruleId":"491","severity":1,"message":"585","line":168,"column":12,"nodeType":"493","endLine":168,"endColumn":26,"suggestions":"586"},{"ruleId":"491","severity":1,"message":"587","line":197,"column":8,"nodeType":"493","endLine":197,"endColumn":16,"suggestions":"588"},{"ruleId":"491","severity":1,"message":"589","line":204,"column":8,"nodeType":"493","endLine":204,"endColumn":16,"suggestions":"590"},{"ruleId":"505","severity":1,"message":"506","line":251,"column":25,"nodeType":"507","endLine":251,"endColumn":49},{"ruleId":"508","severity":1,"message":"514","line":259,"column":35,"nodeType":"510","messageId":"511","endLine":259,"endColumn":37},{"ruleId":"508","severity":1,"message":"514","line":318,"column":39,"nodeType":"510","messageId":"511","endLine":318,"endColumn":41},{"ruleId":"508","severity":1,"message":"514","line":398,"column":40,"nodeType":"510","messageId":"511","endLine":398,"endColumn":42},{"ruleId":"579","severity":1,"message":"591","line":408,"column":49,"nodeType":"581","messageId":"592","endLine":408,"endColumn":51},{"ruleId":"508","severity":1,"message":"514","line":428,"column":56,"nodeType":"510","messageId":"511","endLine":428,"endColumn":58},{"ruleId":"499","severity":1,"message":"500","line":7,"column":10,"nodeType":"501","messageId":"502","endLine":7,"endColumn":19},{"ruleId":"499","severity":1,"message":"530","line":8,"column":14,"nodeType":"501","messageId":"502","endLine":8,"endColumn":16},{"ruleId":"491","severity":1,"message":"503","line":21,"column":8,"nodeType":"493","endLine":21,"endColumn":10,"suggestions":"593"},{"ruleId":"499","severity":1,"message":"594","line":4,"column":10,"nodeType":"501","messageId":"502","endLine":4,"endColumn":19},{"ruleId":"499","severity":1,"message":"530","line":8,"column":14,"nodeType":"501","messageId":"502","endLine":8,"endColumn":16},{"ruleId":"491","severity":1,"message":"595","line":32,"column":8,"nodeType":"493","endLine":32,"endColumn":10,"suggestions":"596"},{"ruleId":"491","severity":1,"message":"597","line":46,"column":8,"nodeType":"493","endLine":46,"endColumn":21,"suggestions":"598"},{"ruleId":"499","severity":1,"message":"599","line":2,"column":23,"nodeType":"501","messageId":"502","endLine":2,"endColumn":34},{"ruleId":"499","severity":1,"message":"594","line":4,"column":10,"nodeType":"501","messageId":"502","endLine":4,"endColumn":19},{"ruleId":"499","severity":1,"message":"500","line":7,"column":9,"nodeType":"501","messageId":"502","endLine":7,"endColumn":18},{"ruleId":"499","severity":1,"message":"600","line":7,"column":26,"nodeType":"501","messageId":"502","endLine":7,"endColumn":31},{"ruleId":"499","severity":1,"message":"530","line":9,"column":14,"nodeType":"501","messageId":"502","endLine":9,"endColumn":16},{"ruleId":"499","severity":1,"message":"601","line":30,"column":74,"nodeType":"501","messageId":"502","endLine":30,"endColumn":78},{"ruleId":"499","severity":1,"message":"530","line":3,"column":14,"nodeType":"501","messageId":"502","endLine":3,"endColumn":16},{"ruleId":"499","severity":1,"message":"602","line":4,"column":9,"nodeType":"501","messageId":"502","endLine":4,"endColumn":18},{"ruleId":"499","severity":1,"message":"603","line":4,"column":20,"nodeType":"501","messageId":"502","endLine":4,"endColumn":25},{"ruleId":"579","severity":1,"message":"580","line":66,"column":32,"nodeType":"581","messageId":"582","endLine":66,"endColumn":34},{"ruleId":"508","severity":1,"message":"514","line":22,"column":23,"nodeType":"510","messageId":"511","endLine":22,"endColumn":25},{"ruleId":"508","severity":1,"message":"514","line":23,"column":23,"nodeType":"510","messageId":"511","endLine":23,"endColumn":25},{"ruleId":"508","severity":1,"message":"514","line":24,"column":23,"nodeType":"510","messageId":"511","endLine":24,"endColumn":25},{"ruleId":"499","severity":1,"message":"527","line":6,"column":9,"nodeType":"501","messageId":"502","endLine":6,"endColumn":14},{"ruleId":"499","severity":1,"message":"529","line":6,"column":16,"nodeType":"501","messageId":"502","endLine":6,"endColumn":18},{"ruleId":"499","severity":1,"message":"528","line":6,"column":20,"nodeType":"501","messageId":"502","endLine":6,"endColumn":22},{"ruleId":"499","severity":1,"message":"500","line":7,"column":9,"nodeType":"501","messageId":"502","endLine":7,"endColumn":18},{"ruleId":"499","severity":1,"message":"600","line":7,"column":26,"nodeType":"501","messageId":"502","endLine":7,"endColumn":31},{"ruleId":"499","severity":1,"message":"530","line":9,"column":14,"nodeType":"501","messageId":"502","endLine":9,"endColumn":16},{"ruleId":"499","severity":1,"message":"500","line":11,"column":9,"nodeType":"501","messageId":"502","endLine":11,"endColumn":18},{"ruleId":"499","severity":1,"message":"600","line":11,"column":26,"nodeType":"501","messageId":"502","endLine":11,"endColumn":31},{"ruleId":"499","severity":1,"message":"530","line":12,"column":14,"nodeType":"501","messageId":"502","endLine":12,"endColumn":16},{"ruleId":"491","severity":1,"message":"503","line":23,"column":8,"nodeType":"493","endLine":23,"endColumn":10,"suggestions":"604"},{"ruleId":"499","severity":1,"message":"572","line":6,"column":10,"nodeType":"501","messageId":"502","endLine":6,"endColumn":21},{"ruleId":"499","severity":1,"message":"500","line":11,"column":10,"nodeType":"501","messageId":"502","endLine":11,"endColumn":19},{"ruleId":"499","severity":1,"message":"547","line":12,"column":10,"nodeType":"501","messageId":"502","endLine":12,"endColumn":16},{"ruleId":"499","severity":1,"message":"556","line":13,"column":10,"nodeType":"501","messageId":"502","endLine":13,"endColumn":12},{"ruleId":"499","severity":1,"message":"530","line":13,"column":14,"nodeType":"501","messageId":"502","endLine":13,"endColumn":16},{"ruleId":"491","severity":1,"message":"577","line":24,"column":8,"nodeType":"493","endLine":24,"endColumn":10,"suggestions":"605"},{"ruleId":"505","severity":1,"message":"506","line":38,"column":21,"nodeType":"507","endLine":38,"endColumn":76},{"ruleId":"499","severity":1,"message":"552","line":4,"column":11,"nodeType":"501","messageId":"502","endLine":4,"endColumn":19},{"ruleId":"499","severity":1,"message":"555","line":11,"column":10,"nodeType":"501","messageId":"502","endLine":11,"endColumn":20},{"ruleId":"499","severity":1,"message":"606","line":15,"column":10,"nodeType":"501","messageId":"502","endLine":15,"endColumn":18},{"ruleId":"499","severity":1,"message":"500","line":18,"column":10,"nodeType":"501","messageId":"502","endLine":18,"endColumn":19},{"ruleId":"499","severity":1,"message":"530","line":19,"column":14,"nodeType":"501","messageId":"502","endLine":19,"endColumn":16},{"ruleId":"491","severity":1,"message":"503","line":41,"column":7,"nodeType":"493","endLine":41,"endColumn":15,"suggestions":"607"},{"ruleId":"499","severity":1,"message":"500","line":10,"column":10,"nodeType":"501","messageId":"502","endLine":10,"endColumn":19},{"ruleId":"499","severity":1,"message":"530","line":12,"column":14,"nodeType":"501","messageId":"502","endLine":12,"endColumn":16},{"ruleId":"491","severity":1,"message":"503","line":25,"column":8,"nodeType":"493","endLine":25,"endColumn":10,"suggestions":"608"},{"ruleId":"579","severity":1,"message":"580","line":24,"column":43,"nodeType":"581","messageId":"582","endLine":24,"endColumn":45},{"ruleId":"499","severity":1,"message":"609","line":2,"column":58,"nodeType":"501","messageId":"502","endLine":2,"endColumn":78},{"ruleId":"499","severity":1,"message":"610","line":2,"column":186,"nodeType":"501","messageId":"502","endLine":2,"endColumn":196},{"ruleId":"499","severity":1,"message":"611","line":32,"column":13,"nodeType":"501","messageId":"502","endLine":32,"endColumn":17},{"ruleId":"505","severity":1,"message":"506","line":18,"column":21,"nodeType":"507","endLine":18,"endColumn":92},{"ruleId":"505","severity":1,"message":"506","line":24,"column":21,"nodeType":"507","endLine":24,"endColumn":66},{"ruleId":"505","severity":1,"message":"506","line":32,"column":21,"nodeType":"507","endLine":32,"endColumn":71},{"ruleId":"505","severity":1,"message":"506","line":38,"column":21,"nodeType":"507","endLine":38,"endColumn":66},{"ruleId":"505","severity":1,"message":"506","line":46,"column":21,"nodeType":"507","endLine":46,"endColumn":65},{"ruleId":"505","severity":1,"message":"506","line":39,"column":17,"nodeType":"507","endLine":39,"endColumn":64},{"ruleId":"505","severity":1,"message":"506","line":43,"column":17,"nodeType":"507","endLine":43,"endColumn":64},{"ruleId":"505","severity":1,"message":"506","line":44,"column":17,"nodeType":"507","endLine":44,"endColumn":64},{"ruleId":"505","severity":1,"message":"506","line":48,"column":17,"nodeType":"507","endLine":48,"endColumn":137},{"ruleId":"508","severity":1,"message":"509","line":48,"column":100,"nodeType":"510","messageId":"511","endLine":48,"endColumn":102},{"ruleId":"505","severity":1,"message":"506","line":49,"column":17,"nodeType":"507","endLine":49,"endColumn":64},{"ruleId":"612","severity":1,"message":"613","line":15,"column":1,"nodeType":"614","endLine":78,"endColumn":2},{"ruleId":"499","severity":1,"message":"615","line":2,"column":9,"nodeType":"501","messageId":"502","endLine":2,"endColumn":17},{"ruleId":"499","severity":1,"message":"616","line":2,"column":19,"nodeType":"501","messageId":"502","endLine":2,"endColumn":29},{"ruleId":"499","severity":1,"message":"617","line":2,"column":31,"nodeType":"501","messageId":"502","endLine":2,"endColumn":36},{"ruleId":"499","severity":1,"message":"618","line":2,"column":38,"nodeType":"501","messageId":"502","endLine":2,"endColumn":49},{"ruleId":"499","severity":1,"message":"619","line":2,"column":102,"nodeType":"501","messageId":"502","endLine":2,"endColumn":117},{"ruleId":"499","severity":1,"message":"620","line":2,"column":119,"nodeType":"501","messageId":"502","endLine":2,"endColumn":132},{"ruleId":"612","severity":1,"message":"613","line":14,"column":1,"nodeType":"614","endLine":50,"endColumn":2},{"ruleId":"612","severity":1,"message":"613","line":15,"column":1,"nodeType":"614","endLine":58,"endColumn":6},{"ruleId":"612","severity":1,"message":"613","line":16,"column":1,"nodeType":"614","endLine":68,"endColumn":2},{"ruleId":"499","severity":1,"message":"609","line":2,"column":194,"nodeType":"501","messageId":"502","endLine":2,"endColumn":214},{"ruleId":"612","severity":1,"message":"613","line":22,"column":1,"nodeType":"614","endLine":156,"endColumn":2},{"ruleId":"499","severity":1,"message":"544","line":1,"column":10,"nodeType":"501","messageId":"502","endLine":1,"endColumn":17},{"ruleId":"499","severity":1,"message":"548","line":9,"column":9,"nodeType":"501","messageId":"502","endLine":9,"endColumn":13},{"ruleId":"495","replacedBy":"621"},{"ruleId":"497","replacedBy":"622"},{"ruleId":"499","severity":1,"message":"568","line":1,"column":10,"nodeType":"501","messageId":"502","endLine":1,"endColumn":19},{"ruleId":"499","severity":1,"message":"623","line":4,"column":16,"nodeType":"501","messageId":"502","endLine":4,"endColumn":20},{"ruleId":"499","severity":1,"message":"568","line":1,"column":10,"nodeType":"501","messageId":"502","endLine":1,"endColumn":19},{"ruleId":"499","severity":1,"message":"522","line":1,"column":21,"nodeType":"501","messageId":"502","endLine":1,"endColumn":29},{"ruleId":"499","severity":1,"message":"512","line":7,"column":10,"nodeType":"501","messageId":"502","endLine":7,"endColumn":14},{"ruleId":"499","severity":1,"message":"513","line":7,"column":28,"nodeType":"501","messageId":"502","endLine":7,"endColumn":35},{"ruleId":"505","severity":1,"message":"506","line":20,"column":7,"nodeType":"507","endLine":20,"endColumn":62},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dateOpen'. Either include it or remove the dependency array.","ArrayExpression",["624"],"no-native-reassign",["625"],"no-negated-in-lhs",["626"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["627"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Thin' is defined but never used.","'Regular' is defined but never used.","Expected '===' and instead saw '=='.","React Hook useEffect has a missing dependency: 'project.sprints'. Either include it or remove the dependency array.",["628"],"React Hook useEffect has a missing dependency: 'project.dateFinish'. Either include it or remove the dependency array.",["629"],"no-self-assign","'sum' is assigned to itself.","selfAssignment","'useState' is defined but never used.","'useRef' is defined but never used.","'FormProvider' is defined but never used.","'useFormContext' is defined but never used.","'Controller' is defined but never used.","'Table' is defined but never used.","'Td' is defined but never used.","'Tr' is defined but never used.","'H3' is defined but never used.","'msg' is assigned a value but never used.","'reset' is assigned a value but never used.","'watch' is assigned a value but never used.","'prepend' is assigned a value but never used.","'swap' is assigned a value but never used.","'move' is assigned a value but never used.","'insert' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'id', and 'user'. Either include them or remove the dependency array.",["630"],"'innerBackend' is defined but never used.","'load' is assigned a value but never used.","'setLoad' is assigned a value but never used.",["631"],"'NavLink' is defined but never used.","'userPermissions' is defined but never used.","'News' is defined but never used.","'Button' is defined but never used.","'user' is assigned a value but never used.","'admBody' is assigned a value but never used.","'newsScroll' is assigned a value but never used.",["632"],"'Redirect' is defined but never used.","'Status' is defined but never used.",["633"],"'allTickets' is defined but never used.","'H1' is defined but never used.","'Me' is defined but never used.","'url' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'user'. Either include them or remove the dependency array.",["634"],"'styled' is defined but never used.","'changeLoaded' is defined but never used.","'Card' is defined but never used.","'SmallContainer' is defined but never used.","'id' is assigned a value but never used.","'loaded' is assigned a value but never used.",["635"],"'useEffect' is defined but never used.","'setText' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'history', and 'id'. Either include them or remove the dependency array.",["636"],"'useLocation' is defined but never used.","'getTicket' is defined but never used.","'sprintLoad' is assigned a value but never used.","'users' is assigned a value but never used.","'descr' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["637"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'dispatch', 'id', 'project.crypt', 'sprintDays', and 'sprints'. Either include them or remove the dependency array.",["638"],"React Hook useEffect has missing dependencies: 'conditionalWeeks', 'id', 'project.crypt', 'project.dateStart', 'sprintDays', and 'sprintPaint'. Either include them or remove the dependency array.",["639"],"React Hook useEffect has missing dependencies: 'dispatch' and 'project.crypt'. Either include them or remove the dependency array.",["640"],"React Hook useEffect has missing dependencies: 'history', 'id', and 'sprint.id'. Either include them or remove the dependency array.",["641"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd",["642"],"'newTicket' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'id', and 'project'. Either include them or remove the dependency array.",["643"],"React Hook useEffect has missing dependencies: 'formData', 'project.city', 'project.customer', 'project.dateFinish', 'project.dateStart', 'project.stage', 'project.title', and 'project.type'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["644"],"'useSelector' is defined but never used.","'Title' is defined but never used.","'area' is assigned a value but never used.","'Container' is assigned a value but never used.","'Title' is assigned a value but never used.",["645"],["646"],"'loadUser' is defined but never used.",["647"],["648"],"'ADD_SPRINT_TO_CHOSEN' is defined but never used.","'PROJECT_ID' is defined but never used.","'file' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'REGISTER' is defined but never used.","'AUTH_ERROR' is defined but never used.","'LOGIN' is defined but never used.","'USER_LOADED' is defined but never used.","'CHANGE_USERDATA' is defined but never used.","'CHANGE_AVATAR' is defined but never used.",["625"],["626"],"'Bold' is defined but never used.",{"desc":"649","fix":"650"},"no-global-assign","no-unsafe-negation",{"desc":"651","fix":"652"},{"desc":"653","fix":"654"},{"desc":"655","fix":"656"},{"desc":"657","fix":"658"},{"desc":"659","fix":"660"},{"desc":"651","fix":"661"},{"desc":"651","fix":"662"},{"desc":"663","fix":"664"},{"desc":"651","fix":"665"},{"desc":"666","fix":"667"},{"desc":"668","fix":"669"},{"desc":"670","fix":"671"},{"desc":"672","fix":"673"},{"desc":"674","fix":"675"},{"desc":"676","fix":"677"},{"desc":"651","fix":"678"},{"desc":"679","fix":"680"},{"desc":"681","fix":"682"},{"desc":"651","fix":"683"},{"desc":"668","fix":"684"},{"desc":"659","fix":"685"},{"desc":"651","fix":"686"},"Update the dependencies array to be: [dateOpen]",{"range":"687","text":"688"},"Update the dependencies array to be: [dispatch]",{"range":"689","text":"690"},"Update the dependencies array to be: [project.sprints, sprints]",{"range":"691","text":"692"},"Update the dependencies array to be: [project.dateFinish]",{"range":"693","text":"694"},"Update the dependencies array to be: [dispatch, id, user]",{"range":"695","text":"696"},"Update the dependencies array to be: [dispatch, loaded]",{"range":"697","text":"698"},{"range":"699","text":"690"},{"range":"700","text":"690"},"Update the dependencies array to be: [dispatch, user]",{"range":"701","text":"702"},{"range":"703","text":"690"},"Update the dependencies array to be: [dispatch, history, id]",{"range":"704","text":"705"},"Update the dependencies array to be: [dispatch, id]",{"range":"706","text":"707"},"Update the dependencies array to be: [dispatch, id, project.crypt, sprintDays, sprints, sprintsLoad]",{"range":"708","text":"709"},"Update the dependencies array to be: [calendLoader, conditionalWeeks, id, project.crypt, project.dateStart, sprintDays, sprintPaint]",{"range":"710","text":"711"},"Update the dependencies array to be: [dispatch, loaded, project.crypt]",{"range":"712","text":"713"},"Update the dependencies array to be: [history, id, reload, sprint.id]",{"range":"714","text":"715"},{"range":"716","text":"690"},"Update the dependencies array to be: [dispatch, id, project]",{"range":"717","text":"718"},"Update the dependencies array to be: [formData, loadProject, project.city, project.customer, project.dateFinish, project.dateStart, project.stage, project.title, project.type]",{"range":"719","text":"720"},{"range":"721","text":"690"},{"range":"722","text":"707"},{"range":"723","text":"698"},{"range":"724","text":"690"},[600,602],"[dateOpen]",[924,926],"[dispatch]",[793,802],"[project.sprints, sprints]",[1043,1045],"[project.dateFinish]",[1982,1984],"[dispatch, id, user]",[2466,2474],"[dispatch, loaded]",[794,796],[931,933],[3110,3112],"[dispatch, user]",[876,878],[962,964],"[dispatch, history, id]",[2193,2195],"[dispatch, id]",[3317,3330],"[dispatch, id, project.crypt, sprintDays, sprints, sprintsLoad]",[6732,6746],"[calendLoader, conditionalWeeks, id, project.crypt, project.dateStart, sprintDays, sprintPaint]",[7508,7516],"[dispatch, loaded, project.crypt]",[7650,7658],"[history, id, reload, sprint.id]",[724,726],[994,996],"[dispatch, id, project]",[1336,1349],"[formData, loadProject, project.city, project.customer, project.dateFinish, project.dateStart, project.stage, project.title, project.type]",[612,614],[694,696],[1055,1063],[554,556]]