[{"D:\\rabota\\projects\\buro-front\\my-app\\src\\components\\Projects\\newProject.js":"1","D:\\rabota\\projects\\buro-front\\my-app\\src\\Styles\\buttons.js":"2","D:\\rabota\\projects\\buro-front\\my-app\\src\\components\\Projects\\Project.js":"3","D:\\rabota\\projects\\buro-front\\my-app\\src\\components\\Projects\\components\\SprintDescrForOneProj.js":"4"},{"size":3212,"mtime":1610963881463,"results":"5","hashOfConfig":"6"},{"size":534,"mtime":1610966894374,"results":"7","hashOfConfig":"6"},{"size":11926,"mtime":1610968141522,"results":"8","hashOfConfig":"6"},{"size":102,"mtime":1610968288877,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1shspey",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\rabota\\projects\\buro-front\\my-app\\src\\components\\Projects\\newProject.js",["19","20","21","22","23"],"D:\\rabota\\projects\\buro-front\\my-app\\src\\Styles\\buttons.js",[],"D:\\rabota\\projects\\buro-front\\my-app\\src\\components\\Projects\\Project.js",["24","25","26","27","28","29","30","31","32","33","34","35","36","37","38"],"import { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./oneproject.css\"\r\n\r\n\r\nimport { useLocation} from \"react-router\";\r\nimport { addSprint, getProject, allSprints, deleteProject, joinTeam, finishProject} from \"../../redux/actions/projects\";\r\nimport { getTicket } from \"../../redux/actions/tikets\";\r\nimport {Button} from '../../Styles/buttons'\r\nimport {  Redirect } from 'react-router-dom';\r\nimport { Table, Td, Tr } from \"../../Styles/tables\";\r\nimport { Status } from \"../../Styles/project\";\r\nimport { Container, Card,} from \"../../Styles/common\";\r\nimport { H1, H3} from '../../Styles/typography'\r\nimport SprintDescription from './components/SprintDescrForOneProj'\r\n\r\nconst Project = ({match, history}) => {\r\n    let {id} = match.params;\r\n    const dispatch = useDispatch();\r\n    const loaded = useSelector(state => state.projects.loadProject);\r\n    const sprintsLoad = useSelector(state => state.projects.loadSprints)\r\n    const user = useSelector(state => state.auth.user) \r\n    const sprintLoad = useSelector(state => state.projects.sprint_load)\r\n    const reload = useSelector(state => state.projects.reload)\r\n   \r\n\r\n    const sprint = useSelector(state => state.projects.sprint)\r\n    const users = useSelector(state => state.users.users)\r\n    const project = useSelector(state => state.projects.project)\r\n    const sprints = useSelector(state => state.projects.sprints)\r\n    // const project = useSelector(state => state.projects.project.team)\r\n\r\n    useEffect(() => {\r\n        dispatch(getProject(id));\r\n       \r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if(loaded){\r\n            dispatch(allSprints(project.crypt))\r\n        }\r\n    }, [loaded])\r\n\r\n    useEffect(() => {\r\n        if(reload){\r\n            return history.push(`${id}/${sprint.id}`)\r\n        }\r\n    }, [reload])\r\n\r\n    const createSprint = () => {\r\n        \r\n        dispatch(addSprint(project.crypt))\r\n\r\n    }\r\n    const handleEnd = () => {\r\n        \r\n        dispatch(finishProject(id))\r\n        return history.push(`.`)\r\n\r\n    }\r\n    const handleDelete = () => {\r\n        dispatch(deleteProject(id))\r\n        return history.push(`./`)\r\n\r\n    }\r\n    const hadleTeam = () => {\r\n        console.log (project.team)\r\n        console.log  (project.msg)\r\n        dispatch(joinTeam(id))\r\n\r\n    }\r\n\r\n    return (\r\n      <Container>\r\n        {!loaded ? (\r\n          <p> loading...</p>\r\n        ) : (\r\n          <div className=\"project__grid\">\r\n            {!sprintsLoad ? (\r\n              <p> loading...</p>\r\n            ) : (\r\n              <>\r\n                <Card>\r\n                  \r\n                  <H1>{project.title}</H1>\r\n                </Card>\r\n                <Card>\r\n                  <H1>Текущий спринт</H1>\r\n                  {sprints.length == 0 ? (\r\n                    <p>Спринтов нет</p>\r\n                  ) : (\r\n                   <div>\r\n                     {sprints.filter((sprint)=> !sprint.status)\r\n                     .map ((sprint, i) => {\r\n                       return (\r\n                         <SprintDescription ></SprintDescription>\r\n                       )\r\n                     })}\r\n                   </div>\r\n                  )}\r\n                  {sprints.length == 0 ? (\r\n                    <p>Спринтов нет</p>\r\n                  ) : (\r\n                    <Table>\r\n                      <Tr columns=\"1fr 1fr 1fr\" top>\r\n                        <Td> Дата </Td>\r\n                        <Td> Название</Td>\r\n                        <Td> Задачи</Td>\r\n                      </Tr>\r\n\r\n                      {sprints\r\n                        .filter((sprint) => !sprint.status)\r\n                        .map((sprint, i) => {\r\n                          return (\r\n                            <Tr\r\n                              columns=\"1fr 1fr 1fr\"\r\n                              key={i}\r\n                              style={{ cursor: \"pointer\" }}\r\n                              title=\"Открыть спринт\"\r\n                              onClick={() =>\r\n                                history.push(`/projects/${id}/${sprint._id}`)\r\n                              }\r\n                            >\r\n                              <Td>\r\n                                {\" \"}\r\n                                {sprint.dateOpen\r\n                                  .slice(0, 16)\r\n                                  .replace(/T/g, \"  \")}\r\n                              </Td>\r\n                              <Td>спринт {i}</Td>\r\n                              <Td>\r\n                                {\" \"}\r\n                                {\r\n                                  sprint.tasks.filter((task) => task.taskStatus)\r\n                                    .length\r\n                                }\r\n                                /{sprint.tasks.length}\r\n                              </Td>{\" \"}\r\n                                \r\n                            </Tr>\r\n                          );\r\n                        })}\r\n                    </Table>\r\n                  )}\r\n                  <br />\r\n                  <Button\r\n                    onClick={createSprint}\r\n                    style={{\r\n                      display: `${\r\n                        user.permission === \"user\" || project.status\r\n                          ? \"none\"\r\n                          : \"block\"\r\n                      }`,\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {user.permission === \"user\" ? \"\" : \"Создать спринт\"}\r\n                  </Button>\r\n                  <br />\r\n                </Card>\r\n\r\n                <Card>\r\n                  <H1>Завершенные спринты</H1>\r\n\r\n                  {sprints.length == 0 ? (\r\n                    <p>Завершенных спринтов нет</p>\r\n                  ) : (\r\n                    <Table>\r\n                      <Tr columns=\"1fr 1fr 1fr 1fr\" top>\r\n                        <Td> Дата </Td>\r\n                        <Td> Название</Td>\r\n                        <Td> Задачи</Td>\r\n                        <Td> Статус</Td>\r\n                      </Tr>\r\n\r\n                      {sprints\r\n                        .filter((sprint) => sprint.status)\r\n                        .map((sprint, i) => {\r\n                          return (\r\n                            <Tr\r\n                              columns=\"1fr 1fr 1fr 1fr\"\r\n                              key={i}\r\n                              title=\"Открыть спринт\"\r\n                              onClick={() =>\r\n                                history.push(`/projects/${id}/${sprint._id}`)\r\n                              }\r\n                            >\r\n                              <Td>\r\n                                {\" \"}\r\n                                {sprint.dateOpen\r\n                                  .slice(0, 16)\r\n                                  .replace(/T/g, \"  \")}\r\n                              </Td>\r\n                              <Td>спринт {i}</Td>\r\n                              <Td>\r\n                                {\" \"}\r\n                                {\r\n                                  sprint.tasks.filter((task) => task.taskStatus)\r\n                                    .length\r\n                                }\r\n                                /{sprint.tasks.length}\r\n                              </Td>\r\n                              <Td>\r\n                                {sprint.tasks.length -\r\n                                  sprint.tasks.filter((task) => task.taskStatus)\r\n                                    .length ===\r\n                                0 ? (\r\n                                  <Status green />\r\n                                ) : (\r\n                                  <Status red />\r\n                                )}\r\n                              </Td>\r\n                            </Tr>\r\n                          );\r\n                        })}\r\n                    </Table>\r\n                  )}\r\n                </Card>\r\n\r\n                <Card>\r\n                  <H1> Команда</H1>\r\n\r\n                  <Table>\r\n                    <Tr columns=\"1fr 1fr 1fr\" top>\r\n                      <Td>Имя</Td>\r\n                      <Td>email</Td>\r\n                      <Td>Дожность</Td>\r\n                    </Tr>\r\n\r\n                    {project.team.map((user, i) => {\r\n                      return (\r\n                        <Tr\r\n                          columns=\"1fr 1fr 1fr\"\r\n                          key={i}\r\n                          title=\"Профиль сотрудника\"\r\n                          onClick={() => history.push(`/users/${user._id}`)}\r\n                        >\r\n                          <Td> {user.name}</Td>\r\n                          <Td>{user.email}</Td>\r\n                          <Td>{user.position}</Td>\r\n                        </Tr>\r\n                      );\r\n                    })}\r\n                  </Table>\r\n                  <br />\r\n                  {project.team.length == 0 && (\r\n                    <Button\r\n                      onClick={hadleTeam}\r\n                      style={{\r\n                        display: `${project.status ? \"none\" : \"block\"}`,\r\n                      }}\r\n                    >\r\n                      Вступить в команду проекта\r\n                    </Button>\r\n                  )}\r\n                  {project.team.map((empl, ind) => {\r\n                    console.log(user, \"emp id\");\r\n                    if (empl._id === user.id) {\r\n                      console.log(ind, \"INDEX USER\");\r\n                      return (\r\n                        <Button\r\n                          onClick={hadleTeam}\r\n                          style={{\r\n                            display: `${project.status ? \"none\" : \"block\"}`,\r\n                          }}\r\n                        >\r\n                          Выйти из команды проекта\r\n                        </Button>\r\n                      );\r\n                    } else if (project.team.length - 1 == ind) {\r\n                      return (\r\n                        <Button\r\n                          onClick={hadleTeam}\r\n                          style={{\r\n                            display: `${project.status ? \"none\" : \"block\"}`,\r\n                          }}\r\n                        >\r\n                          Вступить в команду проекта\r\n                        </Button>\r\n                      );\r\n                    }\r\n                  })}\r\n                </Card>\r\n\r\n                <Card>\r\n                  <Button\r\n                    onClick={handleEnd}\r\n                    style={{\r\n                      display: `${\r\n                        user.permission === \"user\" ? \"none\" : \"block\"\r\n                      }`,\r\n                      marginBottom: \"30px\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {user.permission === \"user\"\r\n                      ? \"\"\r\n                      : project.status\r\n                      ? \"Восстановить проект\"\r\n                      : \"Завершить проект\"}\r\n                  </Button>\r\n                  <Button\r\n                    onClick={handleDelete}\r\n                    style={{\r\n                      display: `${\r\n                        user.permission === \"user\" ? \"none\" : \"block\"\r\n                      }`,\r\n                      marginBottom: \"30px\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {user.permission === \"user\" ? \"\" : \"Удалить проект\"}\r\n                  </Button>\r\n                </Card>\r\n              </>\r\n            )}\r\n          </div>\r\n        )}\r\n      </Container>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Project","D:\\rabota\\projects\\buro-front\\my-app\\src\\components\\Projects\\components\\SprintDescrForOneProj.js",[],{"ruleId":"39","severity":1,"message":"40","line":2,"column":23,"nodeType":"41","messageId":"42","endLine":2,"endColumn":34},{"ruleId":"39","severity":1,"message":"43","line":4,"column":10,"nodeType":"41","messageId":"42","endLine":4,"endColumn":19},{"ruleId":"39","severity":1,"message":"44","line":7,"column":26,"nodeType":"41","messageId":"42","endLine":7,"endColumn":31},{"ruleId":"39","severity":1,"message":"45","line":9,"column":14,"nodeType":"41","messageId":"42","endLine":9,"endColumn":16},{"ruleId":"39","severity":1,"message":"46","line":30,"column":74,"nodeType":"41","messageId":"42","endLine":30,"endColumn":78},{"ruleId":"39","severity":1,"message":"47","line":6,"column":10,"nodeType":"41","messageId":"42","endLine":6,"endColumn":21},{"ruleId":"39","severity":1,"message":"48","line":8,"column":10,"nodeType":"41","messageId":"42","endLine":8,"endColumn":19},{"ruleId":"39","severity":1,"message":"49","line":10,"column":11,"nodeType":"41","messageId":"42","endLine":10,"endColumn":19},{"ruleId":"39","severity":1,"message":"45","line":14,"column":14,"nodeType":"41","messageId":"42","endLine":14,"endColumn":16},{"ruleId":"39","severity":1,"message":"50","line":23,"column":11,"nodeType":"41","messageId":"42","endLine":23,"endColumn":21},{"ruleId":"39","severity":1,"message":"51","line":28,"column":11,"nodeType":"41","messageId":"42","endLine":28,"endColumn":16},{"ruleId":"52","severity":1,"message":"53","line":36,"column":8,"nodeType":"54","endLine":36,"endColumn":10,"suggestions":"55"},{"ruleId":"52","severity":1,"message":"56","line":43,"column":8,"nodeType":"54","endLine":43,"endColumn":16,"suggestions":"57"},{"ruleId":"52","severity":1,"message":"58","line":49,"column":8,"nodeType":"54","endLine":49,"endColumn":16,"suggestions":"59"},{"ruleId":"60","severity":1,"message":"61","line":90,"column":35,"nodeType":"62","messageId":"63","endLine":90,"endColumn":37},{"ruleId":"60","severity":1,"message":"61","line":102,"column":35,"nodeType":"62","messageId":"63","endLine":102,"endColumn":37},{"ruleId":"60","severity":1,"message":"61","line":166,"column":35,"nodeType":"62","messageId":"63","endLine":166,"endColumn":37},{"ruleId":"60","severity":1,"message":"61","line":247,"column":40,"nodeType":"62","messageId":"63","endLine":247,"endColumn":42},{"ruleId":"64","severity":1,"message":"65","line":257,"column":49,"nodeType":"66","messageId":"67","endLine":257,"endColumn":51},{"ruleId":"60","severity":1,"message":"61","line":271,"column":56,"nodeType":"62","messageId":"63","endLine":271,"endColumn":58},"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","'newTicket' is defined but never used.","'Title' is defined but never used.","'H3' is defined but never used.","'area' is assigned a value but never used.","'useLocation' is defined but never used.","'getTicket' is defined but never used.","'Redirect' is defined but never used.","'sprintLoad' is assigned a value but never used.","'users' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.","ArrayExpression",["68"],"React Hook useEffect has missing dependencies: 'dispatch' and 'project.crypt'. Either include them or remove the dependency array.",["69"],"React Hook useEffect has missing dependencies: 'history', 'id', and 'sprint.id'. Either include them or remove the dependency array.",["70"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",{"desc":"71","fix":"72"},{"desc":"73","fix":"74"},{"desc":"75","fix":"76"},"Update the dependencies array to be: [dispatch, id]",{"range":"77","text":"78"},"Update the dependencies array to be: [dispatch, loaded, project.crypt]",{"range":"79","text":"80"},"Update the dependencies array to be: [history, id, reload, sprint.id]",{"range":"81","text":"82"},[1573,1575],"[dispatch, id]",[1693,1701],"[dispatch, loaded, project.crypt]",[1823,1831],"[history, id, reload, sprint.id]"]