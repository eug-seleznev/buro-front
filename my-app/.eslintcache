[{"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Projects\\components\\SprintDescrForOneProj.js":"1","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\utils\\axios.js":"2","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Main\\index.js":"3","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Main\\profileComponent.js":"4","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\Styles\\common.js":"5","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\Styles\\typography.js":"6","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Main\\newsCard.js":"7","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Main\\projectsCard.js":"8","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\Styles\\buttons.js":"9","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Main\\mySprint.js":"10","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Projects\\Sprint.js":"11","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\index.js":"12","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\App.js":"13","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\reportWebVitals.js":"14","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\store.js":"15","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Superadmin\\index.js":"16","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Superadmin\\permissions.js":"17","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Superadmin\\newsAdm.js":"18","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\User\\me.js":"19","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\User\\edit.js":"20","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\User\\Employe.js":"21","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Projects\\Project.js":"22","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Projects\\ProjectsEdit.js":"23","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Projects\\OneProjEdit.js":"24","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Projects\\newProject.js":"25","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Projects\\My.js":"26","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\actions\\auth.js":"27","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Auth\\index.js":"28","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Adminka\\Index.js":"29","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Adminka\\dashboard.js":"30","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Adminka\\Ticket.js":"31","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\actions\\user.js":"32","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Projects\\index.js":"33","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\User\\index.js":"34","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\Styles\\layout.js":"35","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Layout\\index.js":"36","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Office\\index.js":"37","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\DataBase\\index.js":"38","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\reducers\\index.js":"39","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\Styles\\tables.js":"40","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\Styles\\project.js":"41","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\actions\\tikets.js":"42","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\actions\\news.js":"43","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\Styles\\Forms.js":"44","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\actions\\projects.js":"45","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Auth\\RegisterCustomer.js":"46","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Auth\\Register.js":"47","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Auth\\Login.js":"48","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\types.js":"49","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Layout\\sidebar.js":"50","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Layout\\header.js":"51","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\reducers\\auth.js":"52","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\reducers\\users.js":"53","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\reducers\\tickets.js":"54","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\reducers\\news.js":"55","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\reducers\\projects.js":"56","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Layout\\MenuProfile.js":"57","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Layout\\Menu.js":"58","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Layout\\menuMobile.js":"59"},{"size":1669,"mtime":1611057141444,"results":"60","hashOfConfig":"61"},{"size":574,"mtime":1610989307525,"results":"62","hashOfConfig":"61"},{"size":2432,"mtime":1611329790652,"results":"63","hashOfConfig":"61"},{"size":1206,"mtime":1611329858370,"results":"64","hashOfConfig":"61"},{"size":975,"mtime":1611321193004,"results":"65","hashOfConfig":"61"},{"size":1033,"mtime":1611071776098,"results":"66","hashOfConfig":"61"},{"size":759,"mtime":1611159629074,"results":"67","hashOfConfig":"61"},{"size":2445,"mtime":1611160330744,"results":"68","hashOfConfig":"61"},{"size":1148,"mtime":1611321352296,"results":"69","hashOfConfig":"61"},{"size":2891,"mtime":1611160326494,"results":"70","hashOfConfig":"61"},{"size":7468,"mtime":1611182918854,"results":"71","hashOfConfig":"61"},{"size":650,"mtime":1608048337028,"results":"72","hashOfConfig":"61"},{"size":4687,"mtime":1611325815015,"results":"73","hashOfConfig":"61"},{"size":375,"mtime":1608036111350,"results":"74","hashOfConfig":"61"},{"size":383,"mtime":1608036111349,"results":"75","hashOfConfig":"61"},{"size":1297,"mtime":1611182936662,"results":"76","hashOfConfig":"61"},{"size":2147,"mtime":1611182981965,"results":"77","hashOfConfig":"61"},{"size":8072,"mtime":1611182962302,"results":"78","hashOfConfig":"61"},{"size":1526,"mtime":1611329014617,"results":"79","hashOfConfig":"61"},{"size":3545,"mtime":1608836107957,"results":"80","hashOfConfig":"61"},{"size":1828,"mtime":1611329581046,"results":"81","hashOfConfig":"61"},{"size":10548,"mtime":1611183035552,"results":"82","hashOfConfig":"61"},{"size":2044,"mtime":1611182895817,"results":"83","hashOfConfig":"61"},{"size":3928,"mtime":1608836107956,"results":"84","hashOfConfig":"61"},{"size":3200,"mtime":1611182854511,"results":"85","hashOfConfig":"61"},{"size":1673,"mtime":1611182829419,"results":"86","hashOfConfig":"61"},{"size":4177,"mtime":1610963820942,"results":"87","hashOfConfig":"61"},{"size":1268,"mtime":1608813445863,"results":"88","hashOfConfig":"61"},{"size":3038,"mtime":1611182742851,"results":"89","hashOfConfig":"61"},{"size":1953,"mtime":1611182697177,"results":"90","hashOfConfig":"61"},{"size":1375,"mtime":1611182757131,"results":"91","hashOfConfig":"61"},{"size":1973,"mtime":1608588160985,"results":"92","hashOfConfig":"61"},{"size":3496,"mtime":1611183031085,"results":"93","hashOfConfig":"61"},{"size":1935,"mtime":1611183014565,"results":"94","hashOfConfig":"61"},{"size":3469,"mtime":1611329945858,"results":"95","hashOfConfig":"61"},{"size":284,"mtime":1611231133242,"results":"96","hashOfConfig":"61"},{"size":121,"mtime":1608036111329,"results":"97","hashOfConfig":"61"},{"size":140,"mtime":1608036111327,"results":"98","hashOfConfig":"61"},{"size":299,"mtime":1608252198301,"results":"99","hashOfConfig":"61"},{"size":712,"mtime":1608830479695,"results":"100","hashOfConfig":"61"},{"size":687,"mtime":1608689385148,"results":"101","hashOfConfig":"61"},{"size":2490,"mtime":1608036111342,"results":"102","hashOfConfig":"61"},{"size":2782,"mtime":1608386626317,"results":"103","hashOfConfig":"61"},{"size":351,"mtime":1608813445859,"results":"104","hashOfConfig":"61"},{"size":7938,"mtime":1608666219553,"results":"105","hashOfConfig":"61"},{"size":159,"mtime":1608036111326,"results":"106","hashOfConfig":"61"},{"size":2221,"mtime":1608813445862,"results":"107","hashOfConfig":"61"},{"size":1588,"mtime":1608836107954,"results":"108","hashOfConfig":"61"},{"size":2003,"mtime":1608659027770,"results":"109","hashOfConfig":"61"},{"size":1722,"mtime":1611231278119,"results":"110","hashOfConfig":"61"},{"size":2081,"mtime":1611322600258,"results":"111","hashOfConfig":"61"},{"size":2174,"mtime":1610963820943,"results":"112","hashOfConfig":"61"},{"size":1196,"mtime":1608659027769,"results":"113","hashOfConfig":"61"},{"size":1189,"mtime":1608036111347,"results":"114","hashOfConfig":"61"},{"size":1465,"mtime":1608342345158,"results":"115","hashOfConfig":"61"},{"size":4512,"mtime":1608813445870,"results":"116","hashOfConfig":"61"},{"size":608,"mtime":1608836107955,"results":"117","hashOfConfig":"61"},{"size":3250,"mtime":1611325939734,"results":"118","hashOfConfig":"61"},{"size":1490,"mtime":1611322650264,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"123"},"1yw5ccx",{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"123"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"123"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"123"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"123"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"123"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"123"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"123"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"123"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"123"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"123"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"123"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"123"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"123"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"123"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"123"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"123"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"123"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"123"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"123"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"123"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"123"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"123"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"123"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"123"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"123"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"123"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"123"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"123"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"123"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"266"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"123"},"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Projects\\components\\SprintDescrForOneProj.js",["272"],"import { useEffect, useState } from \"react\"\r\nimport { Button } from \"../../../Styles/buttons\"\r\nimport { Card } from \"../../../Styles/common\"\r\nimport './sprintdescr.css'\r\n\r\n\r\nconst SprintDescription = ({sprintname, index, dateOpen,taskcomplite, alltasks, history, params, id}) => {\r\n\tconst [loaded, setLoaded] = useState (0)\r\n\tconst [diff, setDiff] = useState (0)\r\n\tuseEffect (()=> {\r\n\t\t\tlet d1 = new Date ()\r\n\t\t\tlet d2 = new Date (dateOpen.slice(0, 10).replace(/-/g, \"/\"))\r\n\t\t\tconsole.log (d1, d2)\r\n\t\t\tsetTimeout (()=>{\r\n\t\t\t\tsetDiff (Math.abs(d1-d2)/86400000)\r\n\t\t\t\tsetLoaded (true)\r\n\t\t\t},50)\r\n\t\t\r\n\t},[])\r\n\r\n\t\t\r\n\t\t\r\n\r\n\r\n\treturn (\r\n\t<>\r\n\t\t{!loaded?<div>loading...</div>:(<Card>\r\n\t\t\t<div className='sprintdescr__grid__container'>\r\n\t\t\t\t<div>{dateOpen.slice(5,10).replace(/-/g, \".\")}-01.??</div>\r\n\t\t\t\t<div>Спринт №{index}</div>\r\n\t\t\t\t<div>Короткое описание</div>\r\n\t\t\t\t<div>До дедлайна: {diff.toString().slice(0,1)} д.</div>\r\n\t\t\t\t<div>Задачи {taskcomplite}/{alltasks} </div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Button fontSize={'16px'} grey>Добавить в избранное</Button>\r\n\t\t\t\t\t<Button fontSize={'16px'} onClick={() => history.push(`/projects/${params}/${id}`)}>Подробнее</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t</Card>)}\r\n\t\t</>\r\n\t)\r\n}\r\nexport default SprintDescription",["273","274"],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\utils\\axios.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Main\\index.js",["275","276"],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Main\\profileComponent.js",["277","278"],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\Styles\\common.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\Styles\\typography.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Main\\newsCard.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Main\\projectsCard.js",["279","280","281","282","283","284","285","286"],"import styles from '../../Styles/modules/components/projectsCard.module.css'\r\nimport { Card } from '../../Styles/common'\r\nimport { Button } from '../../Styles/buttons'\r\nimport { Bold,Light,Thin, Regular } from '../../Styles/typography'\r\nimport { useEffect, useState } from 'react'\r\nimport  MySprint from './mySprint'\r\n\r\nconst ProjectsCard = ({project, sprints, history}) => {\r\n    const [filt, setFilt] = useState(null)\r\n    const [daysLeft, setDaysLeft] = useState(null)\r\n\r\nuseEffect(()=>{\r\n    \r\n    if (sprints!=undefined){\r\n\r\n         let filterAll = (item) => {\r\n             return project.sprints.some(el => el==item )\r\n             }\r\n             \r\n         const filtered = sprints!=undefined && sprints.filter(item => filterAll(item._id))   \r\n         setFilt(filtered)\r\n    } \r\n },[sprints])\r\n\r\n useEffect(()=>{\r\n     const now = new Date()\r\n     const finish = new Date(project.dateFinish)\r\n     const left = (finish.getTime() - now.getTime()) / (1000*60*60*24)\r\n     const days = Math.floor(left)\r\n   \r\n    setDaysLeft(days)\r\n },[])\r\n\r\n\r\n    return(\r\n        <Card className={styles.projContainer}>\r\n\r\n                \r\n                    <Bold size='24' className={styles.title} >{project.title}</Bold>\r\n                    <Light size='16' className={styles.description}>{project.about!=null? project.about: 'Короткое описание проекта'}</Light>\r\n                    <Light size='18' className={styles.dates} >{project.dateStart.slice(5,10).split('-').reverse().join('.') +' \\u2014 '+ project.dateFinish.slice(5,10).split('-').reverse().join('.')} </Light>\r\n                    <Light size='18' className={styles.left}>Осталось: {daysLeft} {daysLeft<1?'день': daysLeft<5? 'дня': 'дней'}</Light>\r\n                    <Light size='16' className={styles.filter}>#ЭП</Light>\r\n                    <Button className={styles.button} onClick={() => history.replace(`/projects/${project.crypt}`)}>Подробнее</Button>\r\n                    <div className={styles.sprints}>\r\n\r\n                        {sprints!= undefined && filt !=null && filt.map((item,i)=>{\r\n                            \r\n                            return(\r\n                              <MySprint content={item}/>\r\n                            )\r\n                        })}\r\n                    </div>              \r\n                            \r\n            \r\n        </Card>\r\n    )\r\n}\r\nexport default ProjectsCard\r\n","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\Styles\\buttons.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Main\\mySprint.js",["287","288","289","290"],"import styles from '../../Styles/modules/components/mySprint.module.css'\r\nimport { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { finishTask, } from '../../redux/actions/projects'\r\nimport { Bold, Light } from '../../Styles/typography'\r\n\r\nconst MySprint = ({content}) => {\r\nconst dispatch = useDispatch()\r\nconst user = useSelector(state => state.auth.user)\r\nconst sprint = content\r\nconst [progress, setProgress] = useState(0)\r\nconst [sprintDaysLeft, setSprintDaysLeft] = useState(null)\r\n\r\n\r\nuseEffect(()=>{\r\n\r\n    const done = sprint.tasks.reduce((sum,curr)=>{\r\n    return curr.taskStatus == true ? (sum = sum + 1) : sum = sum\r\n    }, 0)\r\n\r\n    setProgress(done)\r\n    \r\n\r\n    if(sprint.dateClosePlan!=null){\r\n        const now = new Date()\r\n        const finish = new Date(sprint.dateClosePlan)\r\n        const left = (finish.getTime() - now.getTime()) / (1000*60*60*24)\r\n        const days = Math.floor(left)\r\n      \r\n        setSprintDaysLeft(days)\r\n    } else {\r\n        setSprintDaysLeft('?')\r\n    }\r\n\r\n},[sprint])\r\n\r\nconst onCheck = (e,id) => {\r\n\r\n    let taskid = e.target.value;\r\n    dispatch(finishTask({taskid, id}))\r\n\r\n    setProgress(e.target.checked?progress+1:progress-1)\r\n}\r\n\r\n\r\n\r\n    return(\r\n        <div className={styles.sprintContainer}>\r\n\r\n               <Light size='18' className={styles.date}>{sprint.dateOpen.slice(5,10).split('-').reverse().join('.') +' \\u2014 '+ (sprint.dateClosePlan!=null ? sprint.dateClosePlan.slice(5,10).split('-').reverse().join('.') : '')}</Light> \r\n               <Light size='18' className={styles.left}>Осталось: {sprintDaysLeft} {sprintDaysLeft<1?'день': sprintDaysLeft<5? 'дня': 'дней'}</Light>\r\n               <Bold size='20' className={styles.tasks}>Задачи</Bold>\r\n               <Bold size='20' className={styles.progress}>\r\n                    <progress className={styles.progressBar} id=\"file\" value={progress} max={sprint.tasks.length}>  </progress>\r\n                    {' ' + progress + '/' + sprint.tasks.length}\r\n                </Bold>\r\n               <div className={styles.list}>\r\n                            \r\n                   {sprint.tasks.map((el,i)=>{\r\n\r\n                       return(\r\n                            <Light size='16'  className={styles.parag}>\r\n                                <input className={styles.input} style={{pointerEvents: user.permission=='user'?'none':'block'}} type=\"checkbox\" id=\"vehicle1\" name=\"vehicle1\" defaultChecked={el.taskStatus} value={el._id} onChange={(e)=>onCheck(e,sprint._id)}/> \r\n                                {el.taskTitle!=''?el.taskTitle:'Без названия'}\r\n                            </Light>\r\n                       )\r\n                   })\r\n                   }\r\n               </div>\r\n                            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MySprint","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Projects\\Sprint.js",["291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308"],"import { useEffect, useState, useRef} from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { addTasks, finishSprint, finishTask, getSprint, } from \"../../redux/actions/projects\";\r\nimport { addToChosen } from '../../redux/actions/auth'\r\nimport { useForm, FormProvider, useFormContext, useFieldArray, Controller } from \"react-hook-form\";\r\nimport './sprint.css'\r\nimport {Button} from '../../Styles/buttons'\r\nimport { Table, Td, Tr } from \"../../Styles/tables\";\r\nimport { Container, Card, } from \"../../Styles/common\";\r\nimport { H1, H3} from '../../Styles/typography'\r\n\r\nconst Sprint = ({match, history}) => {\r\n  const dispatch = useDispatch();\r\n    let {id} = match.params;\r\n    let back = match.url;\r\n    const sprint = useSelector(state => state.projects.sprint)\r\n    const taskArr = useSelector(state => state.projects.sprint)\r\n    // const project = useSelector(state => state.projects.project)\r\n    const loading = useSelector(state => state.projects.sprintLoad)\r\n    const msg = useSelector(state => state.projects.msg)\r\n    const user = useSelector(state => state.auth.user)\r\n\r\n\r\n    const { register, control, handleSubmit, reset, watch } = useForm({\r\n        defaultValues: {\r\n            tasks: [{ taskTitle: \"задача\", workVolume: \"5\", taskState: false }]\r\n          }\r\n    });\r\n\r\n    const { fields, append, prepend, remove, swap, move, insert } = useFieldArray({\r\n      control, // control props comes from useForm (optional: if you are using FormContext)\r\n      name: \"tasks\", // unique name for your Field Array\r\n    });\r\n    \r\n    \r\n\r\n\r\n\r\n    //submit for new tasks array;\r\n    const onSubmit = (data) =>{\r\n            let tasks = data;\r\n            dispatch(addTasks({tasks, id }))\r\n           \r\n            setTimeout(() => {\r\n              return history.push(`${back.slice(0,14)}`);\r\n          }, 200);\r\n            \r\n\r\n    }\r\n  \r\n    useEffect(() => {\r\n        \r\n            dispatch(getSprint(id))    \r\n           console.log(user)\r\n    }, [])\r\n\r\n\r\n \r\n    const chosenSprint = (e) => {\r\n\r\n      dispatch(addToChosen(id));\r\n\r\n     \r\n  }\r\n   \r\n    const onChange = (e) => {\r\n       \r\n    \r\n        let taskid = e.target.value;\r\n        dispatch(finishTask({taskid, id}))\r\n       \r\n    }\r\n\r\n\r\n   const handleSprint = (e) => {\r\n      \r\n        dispatch(finishSprint(id));\r\n        setTimeout(() => {\r\n          return history.replace(`${back.slice(0,14)}`);\r\n  }, 200);\r\n   }\r\n\r\n\r\n   const handleBack = (e) => {\r\n\r\n    \r\n    // //зачем тут таймаут? \r\n    // setTimeout(() => {\r\n      return history.push(`${back.slice(0,14)}`);\r\n    // }, 200);\r\n    \r\n   }\r\n\r\n    return (\r\n        <div>\r\n           {!loading ? <p> loading...</p> : (\r\n           <div className='sprint__grid'> \r\n          <Card style={{height:'fit-content', paddingBottom:'20px'}} >\r\n            \r\n               \r\n                    \r\n                                  <H1>{sprint.status?'Выполненные задачи:':'Текущие задачи:'}</H1> \r\n\r\n                        {taskArr.tasks.map((task, ind) => {\r\n                            return (\r\n                              \r\n                                <div key={ind} >\r\n                                  \r\n                                    <form >\r\n                                      <div className=\"sprint__tasks\">\r\n                                      \r\n                                          <p className=\"sprint__row\">{ind+1}.  {task.taskTitle!==''?task.taskTitle:'Без названия'}</p>\r\n                                          <label style={{display:`${sprint.status?'none':'block'}`}}></label>\r\n                                          <input style={{display:`${sprint.status?'none':'block'}`}} type=\"checkbox\" id=\"vehicle1\" name=\"vehicle1\" defaultChecked={task.taskStatus} value={task._id} onChange={onChange}/>\r\n\r\n                                       </div>\r\n                                    </form>\r\n                                    \r\n                                </div>\r\n                                 )\r\n                        })}\r\n{/* \r\n                        {sprint.status && <div>\r\n                            <H1>невыполненные задачи</H1>\r\n                            {taskArr.tasks.filter(task => !task.taskStatus).map((task, ind) => {\r\n                            return (\r\n                              \r\n                                <div key={ind} className=\"sprint__tasks\">\r\n                                    <p></p>\r\n                                    <form>\r\n                                        <div>\r\n                                          \r\n                                            <p>{ind+1}.  {task.taskTitle!==0?task.taskTitle:'Без названия'}</p>\r\n                                            <label></label>\r\n                                            <input type=\"checkbox\" id=\"vehicle1\" name=\"vehicle1\" defaultChecked={task.taskStatus} value={task._id} onChange={onChange}/>\r\n\r\n                                        </div>\r\n                                    </form>\r\n                                    \r\n                                </div>\r\n                                 )\r\n                        })}\r\n                          </div>} */}\r\n                        \r\n                   \r\n             \r\n                <Button onClick={()=>handleBack()} style={{marginTop: '20px'}}>Вернуться к проекту</Button>\r\n                <Button onClick={handleSprint} style={{display:`${sprint.status?'block':'none'}`,marginTop: '20px'}}> Восстановить спринт</Button>\r\n            </Card>\r\n\r\n<Card style={{opacity: `${sprint.status?0: 1}`,pointerEvents: `${sprint.status?'none': 'auto'}`,textAlign: 'right', height:'fit-content', paddingBottom:'20px'}}>\r\n\r\n\r\n<H1> Добавить задачи </H1>\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <ul style={{ listStyleType: 'none'}}>\r\n\r\n        {fields.map((item, index) => (\r\n          <li key={item.id} style= {{display:'flex'}}>\r\n            <input\r\n            style={{width:'125px',height: '20px'}}\r\n              name={`tasks[${index}].taskTitle`}\r\n              ref={register()}\r\n              placeholder=\"Название задачи\" // make sure to set up defaultValue\r\n            />\r\n          <input\r\n          type=\"number\"\r\n        \r\n              name={`tasks[${index}].workVolume`}\r\n              ref={register()}\r\n              style={{width:'125px',height: '20px'}}\r\n              placeholder=\"Объем в часах\" \r\n            />\r\n            \r\n            <Button type=\"button\" style={{display: `${fields.length===1?'none':'block'}`, marginTop: '10px', marginBottom: '10px',marginLeft:'auto', marginRight:'0'}} onClick={() => remove(index)}>Удалить</Button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      \r\n      <Button\r\n        type=\"button\"\r\n        onClick={() => append({ firstName: \"appendBill\", lastName: \"appendLuo\" })}\r\n      >\r\n        Добавить\r\n      </Button>\r\n      <Button type=\"submit\">Сохранить</Button>\r\n    </form>\r\n\r\n            <br>\r\n            </br>\r\n            <Button onClick={handleSprint}>Завершить спринт</Button>\r\n            <br></br> <br></br>\r\n            <Button onClick={chosenSprint}>Добавить спринт в избранное</Button>\r\n    </Card>\r\n            </div>\r\n               )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sprint","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\index.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\App.js",["309","310","311","312"],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\reportWebVitals.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\store.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Superadmin\\index.js",["313","314","315","316","317","318","319","320","321","322"],"import { NavLink } from \"react-router-dom\";\r\nimport { useDispatch, useSelector,  } from \"react-redux\"\r\nimport { useEffect, useRef } from \"react\";\r\nimport { permissionReturn, userPermissions } from \"../../redux/actions/user\";\r\nimport  News  from './newsAdm'\r\nimport './superadmin.css'\r\nimport { Container, Card, } from '../../Styles/common';\r\nimport { Button } from '../../Styles/buttons';\r\nimport { StyledLink} from '../../Styles/layout'\r\nimport { H1, H3} from '../../Styles/typography'\r\n\r\n\r\nconst Superadmin = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst user = useSelector(state => state.auth.user)\r\n\tconst admBody = useRef(null)\r\n\r\n\tconst newsScroll = () => {\r\n\t\twindow.scrollTo({\r\n\t\t\ttop: 9000,\r\n\t\t\tbehavior: \"smooth\"\r\n\t\t})\r\n\t}\r\n\r\n\tuseEffect(()=>{\r\n\t\tdispatch (permissionReturn())\r\n\t},[])\r\n    return (\r\n\t\t\r\n        <div> \r\n\t\t\t<Card>\r\n\t\t\t<H1> Админка </H1>\r\n\t\t\r\n\t\t\t<StyledLink to='/admin/permissions'  >Страница доступов</StyledLink>\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t<StyledLink to='/admin/editproj'  >Редактировать проекты</StyledLink>\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t<StyledLink to='/admin/news'  >Редактировать новости</StyledLink>\r\n\t\t\r\n\r\n\t\t\t{/* <News permissions={user.permissions} /> */}\r\n\r\n\t\t</Card>\r\n\r\n\t\t</div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Superadmin","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Superadmin\\permissions.js",["323","324","325","326","327","328"],"\r\n\r\n\r\nimport {  Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\nimport React, { useEffect, useRef } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n// import { allTickets } from \"../../redux/actions/tikets\";\r\n// import { allProjects } from '../../redux/actions/projects';\r\nimport { allUsers, userPermissions } from \"../../redux/actions/user\";\r\n\r\nimport { Table, Td, Tr } from \"../../Styles/tables\";\r\nimport { Status } from \"../../Styles/project\";\r\nimport { Container, Card, } from \"../../Styles/common\";\r\nimport { H1, H3} from '../../Styles/typography'\r\n\r\nconst Permission = ({history}) => {\r\n    const dispatch = useDispatch();\r\n    // const auth = useSelector(state => state.auth.isAuthenticated)\r\n    \r\n       \r\n\tconst loaded = useSelector(state => state.users.loaded)\r\n\tconst team = useSelector(state => state.users.users)\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\t\tdispatch(allUsers())\r\n\t\t// console.log ('team')\r\n\t}, [])\r\n\t\r\n\tconst selected =(e, id)=> {\r\n\t\t\tconsole.log (e.target.value, id)\r\n\t\t\tdispatch(userPermissions(e.target.value, id))\r\n\t}\r\n    return (\r\n\t\t<div>\r\n\t\t\t<Card>\r\n\t\t{!loaded? (<div></div>):\r\n        (<div> \r\n            <H1> Все пользователи</H1>\r\n            \r\n               \r\n                 \r\n                    <Table className=\"table__allproj\" >\r\n  \r\n    <Tr columns='1fr 1fr 1fr' top>\r\n    \t<Td>Пользователь</Td>\r\n      \t<Td>Должность</Td>\r\n      \t<Td>Доступ</Td>\r\n      \r\n    </Tr>\r\n   \r\n       {team.map((team,index) => {\r\n           return(  \r\n\t\t\t\r\n\t\t\t<Tr columns='1fr 1fr 1fr' key={index} >\r\n\t\t\t\t<Td>{team.name}</Td>\r\n\t\t\t\t<Td>{team.position}</Td>\r\n\t\t\t\t<Td> \r\n\t\t\t\t<select  defaultValue={team.permission} style={{width: '100px',marginTop:'10px', overflow:'hidden', outline: 'none', border:'none'}} onChange={(e)=>selected(e, team._id)}>\r\n\t\t\t\t\t<option  value='user'>user</option>\r\n\t\t\t\t\t<option  value='admin'>admin</option>\r\n\t\t\t\t\t<option  value='manager'>manager</option>\r\n\t\t\t\t</select></Td>\r\n\t\t\t</Tr>\r\n    \t )\r\n       }\r\n\t   )\r\n\t   } \r\n     \r\n\r\n</Table>\r\n              \r\n            \r\n\t\t</div>\r\n\t\t)}\r\n\t\t</Card>\r\n\t\t</div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Permission","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Superadmin\\newsAdm.js",["329","330","331","332","333","334","335","336","337"],"\r\nimport {  Redirect } from 'react-router-dom';\r\n\r\n\r\n//профиль пользователя по ID\r\nimport './news.css'\r\nimport { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { allTickets } from \"../../redux/actions/tikets\";\r\nimport { allNews, createNews, deleteNews, updateNews} from '../../redux/actions/news';\r\n// import { allUsers } from \"../../redux/actions/user\";\r\nimport { Container, Card, } from '../../Styles/common';\r\nimport { Button } from '../../Styles/buttons';\r\nimport { H1, H3} from '../../Styles/typography'\r\n\r\n//////////////////////////////////////// ШО ЭТО\r\nimport Me from '../User/me'\r\nimport { url } from '../utils/axios';\r\n///////////////\r\nconst News = ({permissions}) => {\r\n    const dispatch = useDispatch();\r\n    // const auth = useSelector(state => state.auth.isAuthenticated)\r\n    const loaded = useSelector(state => state.news.loaded)\r\n    const listNews = useSelector(state => state.news.news)\r\n    const user = useSelector(state => state.auth.user)\r\n\r\n    const [newsOpen, setOpen] = useState({\r\n        status: false,\r\n        post: '',\r\n    })\r\n    const [deleteConfirm, setConfirm] = useState({\r\n        status: false,\r\n        post:'',\r\n    })\r\n\r\n    const [formData, setFormData ] = useState({\r\n        \r\n        title: '',   //title\r\n        subtitle: '', \r\n        text: '',  \r\n      \r\n      });\r\n  \r\n      const { title, subtitle, text,} = formData;\r\n\r\n\r\n    const onChange = e => {\r\n\r\n            e.preventDefault(); \r\n\r\n            setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    }\r\n//     const Redirect = () => {  \r\n//         return history.push(`/projects`)\r\n// }\r\n    const onSubmit = async e => {\r\n        \r\n            e.preventDefault();\r\n\r\n            dispatch(createNews(formData))\r\n            setTimeout(() => {\r\n                setConfirm({status:false, post:''})\r\n                dispatch(allNews())\r\n            }, 100);  \r\n            setFormData({\r\n                title:'',subtitle:'',text:''\r\n            })\r\n    }\r\n    const onDelete = async (e,id) => {\r\nconsole.log(deleteConfirm)\r\n        e.preventDefault();\r\n        \r\n        setConfirm({status:true,post:id})\r\n       \r\n    }\r\n    const onUpdate = async (e,id) => {\r\n\r\n        e.preventDefault();\r\n        setOpen({status:true, post:id})\r\n       setFormData({\r\n        title: id.title,   \r\n        subtitle: id.subtitle, \r\n        text: id.text,  \r\n       })\r\n    }\r\n    const deleteNewsButton = async e => {\r\n        e.preventDefault();\r\n\r\n        dispatch(deleteNews(deleteConfirm.post._id))\r\n        setTimeout(() => {\r\n            setConfirm({status:false, post:''})\r\n            dispatch(allNews())\r\n        }, 100);\r\n    }\r\n\r\n    \r\n    const updateNewsButton = async e => {\r\n        e.preventDefault();\r\n\r\n        let id = newsOpen.post._id\r\n        let data = formData\r\n        dispatch(updateNews({id, data}))\r\n\r\n\r\n        setTimeout(() => {\r\n            setOpen({status:false, post:''})\r\n            dispatch(allNews())\r\n        }, 100);\r\n    }\r\n  \r\n\r\n\r\nuseEffect(()=>{\r\n dispatch(allNews())\r\n console.log(user,'hiiiiiiiiiiii')\r\n},[])\r\n\r\n    return (\r\n\r\n<div className='news__container'>\r\n\t\t\t\t\r\n\r\n\r\n<Card className='create'>Создать новость\r\n<form className='form news__form' onSubmit={onSubmit}>\r\n           \r\n            <input \r\n                className='news__title'\r\n                type='text'\r\n                placeholder='Заголовок'\r\n                name='title'\r\n                value={title}\r\n                onChange={e => onChange(e)}/>\r\n\r\n   \r\n            <input \r\n                className='news__subtitle'\r\n                type='text'\r\n                placeholder='Подзаголовок'\r\n                name='subtitle'\r\n                value={subtitle}\r\n                onChange={e => onChange(e)}/>\r\n\r\n            <textarea \r\n                className='news__texts'\r\n                \r\n                placeholder='Текст'\r\n                name='text'\r\n                value={text}\r\n                onChange={e => onChange(e)}/>\r\n            \r\n\r\n\r\n\r\n            <button className='news__submit'  type=\"submit\">Создать новость</button>\r\n\r\n            </form>\r\n            </Card>\r\n                \r\n\t\t\t\t{!loaded? <p>loading...</p> : \r\n            \r\n            <Card className='table'>\r\n                <h2>Новости:</h2>\r\n                {listNews.map((el,i)=>{\r\n                    \r\n                    return(\r\n                        <div className='news__tr' >\r\n                            <p className='news__td news__td1'><h4 className='descript'>Title: </h4>{el.title}</p>\r\n                            <p className='news__td news__td2'><h4 className='descript'>Subtitle: </h4>{el.subtitle}</p>\r\n                            <p className='news__td news__td3'><h4 className='descript'>Text: </h4>{el.text}</p>\r\n\r\n                            <button className='table__update' onClick={(e)=>onUpdate(e, el)}>update</button>\r\n                            <button className='table__delete' onClick={(e)=>onDelete(e, el)}>delete</button>\r\n                            \r\n                        </div>\r\n                    )\r\n                })}\r\n            </Card>\r\n            \r\n            }\r\n\r\n\r\n\r\n\r\n\r\n            {!newsOpen.status? <div/>:\r\n            <Card className='update__bg'>\r\n\t\t\t\t<div className='news__update'>\r\n\t\t\t\t\t\tРедактировать новость\r\n                        <form className='form news__form' onSubmit={onUpdate}>\r\n           \r\n                                    <input \r\n                                        className='news__title'\r\n                                        type='text'\r\n                                        placeholder='Заголовок'\r\n                                        name='title'\r\n                                        value={title}\r\n                                        onChange={e => onChange(e)}/>\r\n\r\n                            \r\n                                    <input \r\n                                        className='news__subtitle'\r\n                                        type='text'\r\n                                        placeholder='Подзаголовок'\r\n                                        name='subtitle'\r\n                                        value={subtitle}\r\n                                        onChange={e => onChange(e)}/>\r\n\r\n                                    <textarea \r\n                                        className='news__texts'\r\n                                       \r\n                                        placeholder='Текст'\r\n                                        name='text'\r\n                                        value={text}\r\n                                        onChange={e => onChange(e)}/>\r\n                                    \r\n\r\n\r\n                                <div className='news__submit' >\r\n                                    <button  type=\"submit\" onClick={(e) =>updateNewsButton(e)}>Редактировать новость</button>\r\n                                    <button  type=\"submit\" onClick={()=>{setOpen({status:false, post:''}); setFormData({title:'',subtitle:'',text:''})}}>Отмена</button>\r\n                                </div>\r\n                                    \r\n\r\n                        </form>\r\n                </div>\r\n            </Card>\r\n            }\r\n            {!deleteConfirm.post? <div/>:\r\n            <Card className='delete__bg'>\r\n                <div className='delete__container'>\r\n                    <div onClick={()=>console.log(deleteConfirm)}>Вы уверенны что хотите удалить новость \"{deleteConfirm.post.title}\"</div>\r\n                    <button  type=\"submit\" onClick={(e)=>deleteNewsButton(e)}>Удалить новость</button>\r\n                    <button  type=\"submit\" onClick={()=>setConfirm({status:false, post:''})}>Отмена</button>\r\n                </div>\r\n            </Card>\r\n            }\r\n\t\t\t</div>\r\n\r\n)\r\n}\r\n\r\n\r\n\r\nexport default News","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\User\\me.js",["338","339","340","341","342","343","344","345","346"],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\User\\edit.js",["347","348","349"],"import { useEffect, useState } from \"react\"\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {changeData, changeAvatar} from '../../redux/actions/auth'\r\nimport { url } from '../utils/axios';\r\n\r\n\r\n\r\n//styled components\r\nimport {Button} from '../../Styles/buttons'\r\nimport { Card, SmallContainer } from \"../../Styles/common\";\r\nimport { Input, LogForm } from \"../../Styles/Forms\";\r\n\r\nconst Edit = ({match, history}) => {\r\n\t\r\n\tconst loaded = useSelector(state => state.auth.loaded)\r\n    const user = useSelector(state => state.auth.user)\r\n    const dispatch = useDispatch();\r\n    const [formData, setFormData ] = useState({\r\n        \r\n        name: user.name, \r\n        position: user.position,  \r\n        email: user.email, \r\n\r\n      \r\n      });\r\n     const [text, setText] = useState ('') \r\n\r\n      const {name, position, email} = formData;\r\n\r\n      const  [file, setFile] = useState(null) \r\n\r\n\r\n      const handleFile = e => {\r\n        setFile(e.target.files[0])\r\n\t}\r\n\t// useEffect (()=> {\r\n\t// \tif (file !== null) {\r\n\t// \t\tsetTimeout(() => {\r\n\t// \t\tdispatch (changeAvatar(file))\r\n\t// \t}, 200);\r\n\t// \t}\r\n\t\t\r\n\t\t\r\n\t// },[file])\r\n    const onChange = e => {\r\n        e.preventDefault(); \r\n\t\tconsole.log (e.target.value)\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n     }\r\n     \r\n\t const changeMsg = () => {\r\n\r\n\t\t\r\n\t\t// setText ('Данные были изменены')\r\n\t\t// setTimeout(() => {\r\n\t\t// \tsetText ('')\r\n\t\t// }, 4000);\r\n\t }\r\n\t const Redirect = () => {\r\n     \r\n\t\treturn history.replace(`/users/me`)\r\n\t\r\n}\r\n     const onSubmit = e => {\r\n        e.preventDefault();\r\n\t\tconsole.log(formData)\r\n\t\t// dispatch(changeData({formData})) так не обязательно\r\n\t\tdispatch(changeData(formData))\r\n\t\tif (file !== null && file !== undefined) {\r\n\t\t\r\n\t\t\tdispatch (changeAvatar(file))\r\n\t\t\r\n\t}\r\n    setTimeout(() => {\r\n\t\thistory.replace(`/users/me`)\r\n\t}, 200);\r\n           \r\n        }\r\n   \r\n  \r\n    return (\r\n\t\t<SmallContainer>\r\n\t\t\t<Card style={{paddingBottom:'75px'}}>\r\n        {!loaded? <div>loaded...</div> :\r\n\t\t  \r\n\t\t  (  \r\n\t\t\t  <div style={{display:'flex', flexDirection:'column', alignItems:'center'}}>\r\n\t\t  <LogForm  onSubmit={onSubmit}>\r\n\r\n\t\t<p>Сменить имя</p>\r\n\t\t  <Input \r\n\t\t\t  \ttype='text'\r\n\t\t\t \tplaceholder={user.name}\r\n\t\t\t\tname=\"name\"\r\n\t\t\t\tvalue={name}\r\n\t\t\t  \tonChange={e => onChange(e)}\r\n\t\t\t></Input>\r\n\t\t\t<p>Сменить должность</p>\r\n \t\t<Input \r\n\t\t\t  type='text'\r\n\t\t\t  placeholder={user.position}\r\n\t\t\t  name=\"position\"\r\n\t\t\t  value={position}\r\n\t\t\t  onChange={e => onChange(e)}\r\n\t\t\t></Input>\r\n\t\t\t<p>Сменить e-mail</p>\r\n \t\t<Input \r\n\t\t\t  type='text'\r\n\t\t\t  placeholder={user.email}\r\n\t\t\t  value={email}\r\n\t\t\t  name=\"email\"\r\n\t\t\t  onChange={e => onChange(e)}\r\n\t\t\t></Input>\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t<br/>\r\n\t\t\t<br/>\r\n\t\t\t<Button style={{width:'20vw', transform: 'translateY(60px)'}} onClick={changeMsg}  type=\"submit\" value=\"Submit\" >Сохранить</Button>\r\n\t\t\t<Button style={{width:'20vw', transform: 'translateY(80px)'}} onClick={Redirect}  >Ничего не менять</Button>\r\n\t\t  </LogForm>\r\n\t\t  <form style={{marginTop:'-110px'}} >\r\n\t\t\t  <p>Сменить аватар</p>\r\n\t\t\t <Input \r\n                type='file'\r\n                placeholder='загрузите изображение'\r\n\t\t\t\tonChange={handleFile}></Input><br/><br/>\r\n\t\t\t\t</form>\r\n\t\t\t\t<div style={{opacity: `${text !==''?1:0}`, transition:'500ms ease opacity', marginTop: '70px'}}>{text}</div>\r\n\t\t\t\t</div>\r\n             \r\n   )}\r\n\t\t\t</Card>\r\n\t</SmallContainer>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Edit","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\User\\Employe.js",["350","351","352","353","354","355","356","357","358"],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Projects\\Project.js",["359","360","361","362","363","364","365","366","367","368","369","370","371","372","373"],"import { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./oneproject.css\"\r\n\r\nimport style from '../../Styles/modules/components/Project/oneproj.module.css'\r\nimport { useLocation} from \"react-router\";\r\nimport { addSprint, getProject, allSprints, deleteProject, joinTeam, finishProject} from \"../../redux/actions/projects\";\r\nimport { getTicket } from \"../../redux/actions/tikets\";\r\nimport {Button} from '../../Styles/buttons'\r\nimport {  Redirect } from 'react-router-dom';\r\nimport { Table, Td, Tr } from \"../../Styles/tables\";\r\nimport { Status } from \"../../Styles/project\";\r\nimport { Container, Card,} from \"../../Styles/common\";\r\nimport { H1, H3} from '../../Styles/typography'\r\nimport SprintDescription from './components/SprintDescrForOneProj'\r\n\r\nconst Project = ({match, history}) => {\r\n    let {id} = match.params;\r\n    const dispatch = useDispatch();\r\n    const loaded = useSelector(state => state.projects.loadProject);\r\n    const sprintsLoad = useSelector(state => state.projects.loadSprints)\r\n    const user = useSelector(state => state.auth.user) \r\n    const sprintLoad = useSelector(state => state.projects.sprint_load)\r\n    const reload = useSelector(state => state.projects.reload)\r\n   \r\n\r\n    const sprint = useSelector(state => state.projects.sprint)\r\n    const users = useSelector(state => state.users.users)\r\n    const project = useSelector(state => state.projects.project)\r\n    const sprints = useSelector(state => state.projects.sprints)\r\n    // const project = useSelector(state => state.projects.project.team)\r\n\r\n    useEffect(() => {\r\n        dispatch(getProject(id));\r\n       \r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if(loaded){\r\n            dispatch(allSprints(project.crypt))\r\n        }\r\n    }, [loaded])\r\n\r\n    useEffect(() => {\r\n        if(reload){\r\n            return history.push(`${id}/${sprint.id}`)\r\n        }\r\n    }, [reload])\r\n\r\n    const createSprint = () => {\r\n        \r\n        dispatch(addSprint(project.crypt))\r\n\r\n    }\r\n    const handleEnd = () => {\r\n        \r\n        dispatch(finishProject(id))\r\n        return history.push(`.`)\r\n\r\n    }\r\n    const handleDelete = () => {\r\n        dispatch(deleteProject(id))\r\n        return history.push(`./`)\r\n\r\n    }\r\n    const hadleTeam = () => {\r\n        console.log (project.team)\r\n        console.log  (project.msg)\r\n        dispatch(joinTeam(id))\r\n\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {!loaded ? (\r\n          <p> loading...</p>\r\n        ) : (\r\n          <div className={style.main}>\r\n            {!sprintsLoad ? (\r\n              <p> loading...</p>\r\n            ) : (\r\n              <>\r\n           \r\n                  \r\n                  <H1 className={style.title}>{project.title}</H1>\r\n                  <div className={style.title__deadline}>Дней до дедлайна: ?</div> \r\n                <div>\r\n                  \r\n                  {sprints.length == 0 ? (\r\n                    <p>Спринтов нет</p>\r\n                  ) : (\r\n                   <div className={style.sprintdescr__cont}>\r\n                     {sprints.filter((sprint)=> !sprint.status)\r\n                     .map ((sprint, i) => {\r\n                       return (\r\n                         <SprintDescription history={history} params={match.params} id={sprint._id} key={i} taskcomplite={sprint.tasks.filter((task) => task.taskStatus).length} \r\n                         alltasks={sprint.tasks.length} index={i+1}sprintname={sprint.name} dateOpen={sprint.dateOpen}></SprintDescription>\r\n                       )\r\n                     })}\r\n                     <button\r\n                     className={style.special__button}\r\n                    onClick={createSprint}\r\n                    style={{\r\n                      display: `${\r\n                        user.permission === \"user\" || project.status\r\n                          ? \"none\"\r\n                          : \"block\"\r\n                      }`,\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {user.permission === \"user\" ? \"\" : \"Создать спринт\"}\r\n                  </button>\r\n                   </div>\r\n                  )}\r\n                  \r\n                  <br />\r\n                  \r\n                  <br />\r\n                </div>\r\n\r\n                <Card>\r\n                  <H1>Завершенные спринты</H1>\r\n\r\n                  {sprints.length == 0 ? (\r\n                    <p>Завершенных спринтов нет</p>\r\n                  ) : (\r\n                    <Table>\r\n                      <Tr columns=\"1fr 1fr 1fr 1fr\" top>\r\n                        <Td> Дата </Td>\r\n                        <Td> Название</Td>\r\n                        <Td> Задачи</Td>\r\n                        <Td> Статус</Td>\r\n                      </Tr>\r\n\r\n                      {sprints\r\n                        .filter((sprint) => sprint.status)\r\n                        .map((sprint, i) => {\r\n                          return (\r\n                            <Tr\r\n                              columns=\"1fr 1fr 1fr 1fr\"\r\n                              key={i}\r\n                              title=\"Открыть спринт\"\r\n                              onClick={() =>\r\n                                history.push(`/projects/${id}/${sprint._id}`)\r\n                              }\r\n                            >\r\n                              <Td>\r\n                                {\" \"}\r\n                                {sprint.dateOpen\r\n                                  .slice(0, 16)\r\n                                  .replace(/T/g, \"  \")}\r\n                              </Td>\r\n                              <Td>спринт {i}</Td>\r\n                              <Td>\r\n                                {\" \"}\r\n                                {\r\n                                  sprint.tasks.filter((task) => task.taskStatus)\r\n                                    .length\r\n                                }\r\n                                /{sprint.tasks.length}\r\n                              </Td>\r\n                              <Td>\r\n                                {sprint.tasks.length -\r\n                                  sprint.tasks.filter((task) => task.taskStatus)\r\n                                    .length ===\r\n                                0 ? (\r\n                                  <Status green />\r\n                                ) : (\r\n                                  <Status red />\r\n                                )}\r\n                              </Td>\r\n                            </Tr>\r\n                          );\r\n                        })}\r\n                    </Table>\r\n                  )}\r\n                </Card>\r\n\r\n                <Card>\r\n                  <H1> Команда</H1>\r\n\r\n                  <Table>\r\n                    <Tr columns=\"1fr 1fr 1fr\" top>\r\n                      <Td>Имя</Td>\r\n                      <Td>email</Td>\r\n                      <Td>Дожность</Td>\r\n                    </Tr>\r\n\r\n                    {project.team.map((user, i) => {\r\n                      return (\r\n                        <Tr\r\n                          columns=\"1fr 1fr 1fr\"\r\n                          key={i}\r\n                          title=\"Профиль сотрудника\"\r\n                          onClick={() => history.push(`/users/${user._id}`)}\r\n                        >\r\n                          <Td> {user.name}</Td>\r\n                          <Td>{user.email}</Td>\r\n                          <Td>{user.position}</Td>\r\n                        </Tr>\r\n                      );\r\n                    })}\r\n                  </Table>\r\n                  <br />\r\n                  {project.team.length == 0 && (\r\n                    <Button\r\n                      onClick={hadleTeam}\r\n                      style={{\r\n                        display: `${project.status ? \"none\" : \"block\"}`,\r\n                      }}\r\n                    >\r\n                      Вступить в команду проекта\r\n                    </Button>\r\n                  )}\r\n                  {project.team.map((empl, ind) => {\r\n                    console.log(user, \"emp id\");\r\n                    if (empl._id === user.id) {\r\n                      console.log(ind, \"INDEX USER\");\r\n                      return (\r\n                        <Button\r\n                          onClick={hadleTeam}\r\n                          style={{\r\n                            display: `${project.status ? \"none\" : \"block\"}`,\r\n                          }}\r\n                        >\r\n                          Выйти из команды проекта\r\n                        </Button>\r\n                      );\r\n                    } else if (project.team.length - 1 == ind) {\r\n                      return (\r\n                        <Button\r\n                          onClick={hadleTeam}\r\n                          style={{\r\n                            display: `${project.status ? \"none\" : \"block\"}`,\r\n                          }}\r\n                        >\r\n                          Вступить в команду проекта\r\n                        </Button>\r\n                      );\r\n                    }\r\n                  })}\r\n                </Card>\r\n\r\n                <Card>\r\n                  <Button\r\n                    onClick={handleEnd}\r\n                    style={{\r\n                      display: `${\r\n                        user.permission === \"user\" ? \"none\" : \"block\"\r\n                      }`,\r\n                      marginBottom: \"30px\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {user.permission === \"user\"\r\n                      ? \"\"\r\n                      : project.status\r\n                      ? \"Восстановить проект\"\r\n                      : \"Завершить проект\"}\r\n                  </Button>\r\n                  <Button\r\n                    onClick={handleDelete}\r\n                    style={{\r\n                      display: `${\r\n                        user.permission === \"user\" ? \"none\" : \"block\"\r\n                      }`,\r\n                      marginBottom: \"30px\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {user.permission === \"user\" ? \"\" : \"Удалить проект\"}\r\n                  </Button>\r\n                </Card>\r\n              </>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Project","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Projects\\ProjectsEdit.js",["374","375","376"],"import './projects.css'\r\nimport { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nimport { allProjects } from '../../redux/actions/projects';\r\nimport { Table, Tr, Td } from '../../Styles/tables';\r\nimport { Container, Card,  } from '../../Styles/common';\r\nimport { H1, H3} from '../../Styles/typography'\r\n\r\n\r\nconst ProjectsEdit = ({history}) => {\r\n    const dispatch = useDispatch();\r\n    // const auth = useSelector(state => state.auth.isAuthenticated)\r\n    const loaded = useSelector(state => state.projects.loadedAllProj)\r\n    const projects = useSelector(state => state.projects.projects)\r\n\r\n\r\n    useEffect(() => {\r\n        console.log ('hi')\r\n        dispatch(allProjects())\r\n    }, [])\r\n    \r\n    return (\r\n        <div> \r\n            <Card>\r\n            <H1> Все проекты</H1>\r\n            {!loaded ? <p>loading...</p> : (\r\n                <div>\r\n                    <p> количество проектов: {projects.length} </p>\r\n                    <Table>\r\n  \r\n    <Tr columns='1fr 1fr 1fr 1fr 1fr' top>\r\n        \r\n      <Td>Название</Td>\r\n      <Td>Дата начала</Td>\r\n      <Td>Дедлайн</Td>\r\n      <Td>Статус</Td>\r\n      <Td>Спринты</Td>\r\n    </Tr>\r\n \r\n       {projects.map((project,index) => {\r\n           return(  \r\n        <Tr columns='1fr 1fr 1fr 1fr 1fr' key={index} onClick={() => history.replace(`/admin/editproj/${project.crypt}`)} title=\"Открыть проект\">\r\n           \r\n            <Td>{project.title}</Td>\r\n            <Td>{project.dateStart.slice(0, 10)}</Td>\r\n            <Td>{project.dateFinish!==undefined?project.dateFinish.slice(0, 10):'нет'}</Td>\r\n            <Td>{project.status ? <p>Завершен</p>:<p>В работе</p>}</Td>\r\n            <Td>{project.sprints.filter(sprint => sprint.status).length}/{project.sprints.length}</Td>\r\n        </Tr>\r\n        )\r\n       })}\r\n     \r\n \r\n</Table>\r\n                </div>\r\n            )}\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProjectsEdit","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Projects\\OneProjEdit.js",["377","378","379","380"],"import  {useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {  getProject, editProject } from '../../redux/actions/projects';\r\nimport { newTicket } from '../../redux/actions/tikets';\r\nimport './projects.css'\r\nimport { SmallContainer, Card, } from '../../Styles/common';\r\nimport { Button } from '../../Styles/buttons';\r\nimport { H1, H3} from '../../Styles/typography'\r\n\r\nconst ProjectEdit = ({history, match}) => {\r\n\tlet {id} = match.params;\r\n    const dispatch = useDispatch();\r\n\tconst project = useSelector(state => state.projects.project)\r\n\tconst loadProject = useSelector(state => state.projects.loadProject)\r\n    const [formData, setFormData ] = useState({\r\n        \r\n        title: '',   \r\n        dateStart: '', \r\n        city: '',  \r\n        type: '',\r\n        stage: '',\r\n        dateFinish: '',\r\n        customer: '',\r\n\r\n\r\n      \r\n      });\r\n\t  \r\n\t  useEffect(() => {\r\n\t\tdispatch(getProject(id));\r\n        console.log (project)\r\n    }, [])\r\n\tuseEffect(() => {\r\n\t\tif (loadProject ) {\r\n\t\t\tconsole.log (project.customer)\r\n\t\t\tsetFormData ({...formData, title: project.title, \r\n\t\t\t\tdateStart: project.dateStart,\r\n\t\t\t\tcity: project.city,\r\n\t\t\t\ttype: project.type,\r\n\t\t\t\tstage: project.stage,\r\n\t\t\t\tdateFinish: project.dateFinish,\r\n\t\t\t\tcustomer: project.customer\r\n\t\t\t\t})\r\n\t\t}\r\n\t\t\r\n    }, [loadProject])\r\n      const { title, dateStart, dateFinish, city, type, stage, customer} = formData;\r\n\r\n  \r\n    const onChange = e => {\r\n        e.preventDefault(); \r\n\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n     }\r\n     \r\n\r\n     const Redirect = () => {\r\n     \r\n             return history.push(`/admin/editproj`)\r\n         \r\n     }\r\n\r\n     const onSubmit = async e => {\r\n        e.preventDefault();\r\n        dispatch(editProject(formData, id))\r\n        setTimeout(() => Redirect(),100) \r\n        \r\n            // register({ name, email, password});\r\n    \r\n           \r\n        }\r\n\r\n    return (\r\n\t\t<SmallContainer>\r\n            <Card>\r\n\t\t{!loadProject?<div>loading...</div>:(\r\n\t\t\t<div>\r\n            <H1> Тут можно редактировать данные проекта </H1>\r\n            <form className='form' onSubmit={onSubmit}>\r\n            <input \r\n\r\n                type='text'\r\n                placeholder={project.title}\r\n                name='title'\r\n                value={title}\r\n                onChange={e => onChange(e)}/>\r\n\r\n           <input \r\n                type='date'\r\n                placeholder='date'\r\n                name='dateStart'\r\n                value={dateStart}\r\n                onChange={e => onChange(e)}/>\r\n\r\n\r\n            <input \r\n                type='date'\r\n                placeholder='date'\r\n                name='dateFinish'\r\n                value={dateFinish}\r\n                onChange={e => onChange(e)}/>\r\n\r\n            <input \r\n                type='text'\r\n                placeholder='Город'\r\n                name='city'\r\n                value={city}\r\n                onChange={e => onChange(e)}/>\r\n\r\n            <input \r\n                type='text'\r\n                placeholder='Тип проекта'\r\n                name='type'\r\n                value={type}\r\n                onChange={e => onChange(e)}/>\r\n            <input \r\n                type='text'\r\n                placeholder='Фаза'\r\n                name='stage'\r\n                value={stage}\r\n                onChange={e => onChange(e)}/>\r\n            <input \r\n                type='text'\r\n                placeholder='Заказчик'\r\n                name='customer'\r\n                value={customer}\r\n                onChange={e => onChange(e)}/>\r\n\r\n\r\n\r\n\r\n\r\n            <Button  type=\"submit\">Сохранить</Button>\r\n\t\t\t\r\n\t\t\t<Button  onClick={Redirect}>Ничего не менять</Button>\r\n            </form>\r\n\t\t\t\r\n        </div>\r\n\r\n\t\t)}\r\n        </Card>\r\n\t\t</SmallContainer>\r\n    )\r\n}\r\n\r\n\r\nexport default ProjectEdit","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Projects\\newProject.js",["381","382","383","384","385","386"],"import  {useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { newProject } from '../../redux/actions/projects';\r\nimport { newTicket } from '../../redux/actions/tikets';\r\nimport './projects.css'\r\n\r\nimport {Container, Card, Title,} from '../../Styles/common'\r\nimport { Button } from '../../Styles/buttons';\r\nimport { H1, H3} from '../../Styles/typography'\r\n\r\nconst ProjectNew = ({history}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [formData, setFormData ] = useState({\r\n        \r\n        title: '',   \r\n        dateStart: '', \r\n        city: '',  \r\n        type: '',\r\n        stage: '',\r\n        dateFinish: '',\r\n        customer: '',\r\n\r\n\r\n      \r\n      });\r\n   \r\n\r\n\r\n      const { title, dateStart, dateFinish, city, type, stage, customer, area} = formData;\r\n\r\n  \r\n    const onChange = e => {\r\n        e.preventDefault(); \r\n\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n     }\r\n     \r\n\r\n     const Redirect = () => {\r\n     \r\n             return history.push(`/projects`)\r\n         \r\n     }\r\n\r\n     const onSubmit = async e => {\r\n        e.preventDefault();\r\n        dispatch(newProject(formData))\r\n        setTimeout(() => Redirect(),100) \r\n        \r\n            // register({ name, email, password});\r\n    \r\n           \r\n        }\r\n\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <H1>\r\n       \r\n            Тут можно создать новый проект\r\n           \r\n          </H1>\r\n          <form className=\"form\" onSubmit={onSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Название проекта\"\r\n              name=\"title\"\r\n              value={title}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n\r\n            <input\r\n              type=\"date\"\r\n              placeholder=\"date\"\r\n              name=\"dateStart\"\r\n              value={dateStart}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n\r\n            <input\r\n              type=\"date\"\r\n              placeholder=\"date\"\r\n              name=\"dateFinish\"\r\n              value={dateFinish}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Город\"\r\n              name=\"city\"\r\n              value={city}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Тип проекта\"\r\n              name=\"type\"\r\n              value={type}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Фаза\"\r\n              name=\"stage\"\r\n              value={stage}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Заказчик\"\r\n              name=\"customer\"\r\n              value={customer}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n\r\n            <Button type=\"submit\"> Создать новый проект</Button>\r\n          </form>\r\n        </Card>\r\n      </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ProjectNew","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Projects\\My.js",["387","388","389"],"import { useSelector } from \"react-redux\"\r\nimport { Card } from \"../../Styles/common\"\r\nimport { H1, H3} from '../../Styles/typography'\r\nconst { Container, Title,} = require(\"../../Styles/common\")\r\nconst { Table, Tr, Td } = require(\"../../Styles/tables\")\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst MyProjects = ({history}) => {\r\n    const projects = useSelector(state => state.auth.user.projects)\r\n    return (\r\n        <div>\r\n            <Card>\r\n             <H1>Мои проекты</H1>\r\n            {!projects ? <p> проектов нет  </p>: (\r\n\r\n            <Table>\r\n           \r\n                <Tr columns='1fr 1fr 1fr 1fr' top='top'>\r\n                    \r\n                <Td>Название</Td>\r\n                <Td>Дата начала</Td>\r\n                <Td>Дедлайн</Td>\r\n                <Td>Статус</Td>\r\n                </Tr>\r\n          \r\n                {projects.map((project,index) => {\r\n                    return(  \r\n                    <Tr columns='1fr 1fr 1fr 1fr' key={index} onClick={() => history.replace(`/projects/${project.crypt}`)} title=\"Открыть проект\">\r\n                    \r\n                        <Td>{project.title}</Td>\r\n                        <Td>{project.dateStart.slice(0, 10)}</Td>\r\n                        <Td>{project.dateFinish!==undefined?project.dateFinish.slice(0, 10):'нет'}</Td>\r\n                        <Td>{project.status ? <p>Завершен</p>:<p>В работе</p>}</Td>\r\n                    </Tr>\r\n                    )\r\n                })}\r\n                \r\n           \r\n            </Table>\r\n                        )}\r\n            </Card>\r\n        </div> \r\n    )\r\n}\r\n\r\n\r\nexport default MyProjects","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\actions\\auth.js",["390"],"import {REGISTER, AUTH_ERROR, LOGIN, USER_LOADED,CHANGE_AVATAR, CHANGE_USERDATA, CHANGE_LOADED, ADD_SPRINT_TO_CHOSEN, SPRINT_ERROR} from '../types'\r\nimport {innerBackend, instance, setAuthToken} from '../../components/utils/axios'\r\n\r\n\r\n\r\n// LOAD USER \r\nexport const loadUser = () => async dispatch => {\r\n  try {\r\n    \r\n     \r\n     const res = await innerBackend.get(\"/users/me\");\r\n\r\n     console.log(res, \"/response???\");\r\n    \r\n     dispatch({\r\n       type: USER_LOADED,\r\n       payload: res.data,\r\n     });\r\n  } catch (err) {\r\n    console.log(err.response.data, 'ERROR!!!')\r\n  }\r\n   \r\n  };\r\n    \r\n\r\n\r\nexport const login = (formData) => async dispatch  => {\r\n    try {\r\n      console.log(formData, 'data?')\r\n        const res = await instance.post('/auth', formData)\r\n        console.log(res, 'respond')\r\n        dispatch({\r\n            type: LOGIN,\r\n            payload: res.data\r\n        })\r\n                  setAuthToken(res.data.token);\r\n                  setTimeout(() =>loadUser(),200)\r\n                  \r\n\r\n        }\r\n      catch (err) {\r\n        const errors = err.response.data.errors;\r\n        errors.map(error => {\r\n           return dispatch({\r\n            type: AUTH_ERROR,\r\n            payload: error.msg\r\n        })\r\n        })            \r\n      \r\n    }\r\n\r\n}\r\n\r\n\r\nexport const register = ({formData}) => async dispatch  => {\r\n// console.log(formData, 'hey')\r\n  const form = new FormData()\r\n  \r\n      // form.append(\r\n      //     'avatar',\r\n      //     file\r\n      //   )\r\n  \r\n  \r\n\r\n  Object.keys(formData).map(el => {\r\n      form.append(\r\n          `${el}`, formData[el]\r\n      )\r\n  })\r\n\r\n  // console.log(form.get('email '))\r\n    try {\r\n        const res = await instance.post('/users', formData)\r\n        console.log(res.data, \"DATA FROM REGISTRATION\");\r\n        dispatch({\r\n            type: REGISTER,\r\n            payload: res.data\r\n        })\r\n         setAuthToken(localStorage.token);\r\n        \r\n      }\r\n      catch (err) {\r\n        const errors = err.response.data.errors;\r\n        errors.map(error => {\r\n           return dispatch({\r\n            type: AUTH_ERROR,\r\n            payload: error.msg\r\n        })\r\n        })\r\n\r\n        \r\n        \r\n            \r\n      } \r\n\r\n}\r\nexport const changeData = (formData) => async dispatch  => {\r\n  /////////////////////////\r\n  // let body ={\r\n  //   name: formData.name,\r\n  //   email: formData.email,\r\n  //   position: formData.position,\r\n    \r\n  // }\r\n  //////////////////////\r\n  try {\r\n      console.log('hello change', formData)\r\n      const res = await innerBackend.put(`/users/me`, formData)\r\n      dispatch({\r\n          type: CHANGE_USERDATA,\r\n          payload: res.data\r\n      })\r\n  \r\n\r\n    }\r\n    catch (err) {\r\n      const errors = err.response.data.errors;\r\n      errors.map(error => {\r\n         return dispatch({\r\n          type: AUTH_ERROR,\r\n          payload: error.msg\r\n      })\r\n      })\r\n          \r\n    } \r\n\r\n}\r\nexport const changeAvatar = (file) => async dispatch  => {\r\n\r\n\r\n  try {\r\n  \r\n  const form = new FormData()\r\n  if(file){\r\n      form.append(\r\n          'file',\r\n          file\r\n        )\r\n  }\r\n  \r\n\r\n      console.log(form.get('file'), 'file HERE')\r\n   \r\n\r\n\r\n      const res = await innerBackend.put(`/users/me/a`, form)\r\n      dispatch({\r\n          type: CHANGE_AVATAR,\r\n          payload: res.data\r\n      })\r\n  \r\n\r\n    }\r\n    catch (err) {\r\n      const errors = err.response.data.errors;\r\n      errors.map(error => {\r\n         return dispatch({\r\n          type: AUTH_ERROR,\r\n          payload: error.msg\r\n      })\r\n      })\r\n          \r\n    } \r\n\r\n}\r\n\r\n\r\nexport const addToChosen = (id) => async dispatch  => {\r\n  console.log ('hi sprint', id)\r\n  try {\r\n      const res = await innerBackend.put(`projects/favsprint/${id}`)\r\n      dispatch({\r\n          type: ADD_SPRINT_TO_CHOSEN,\r\n          payload: res.data\r\n      })\r\n      }\r\n    catch (err) {\r\n      const errors = err.response.data.errors;\r\n      errors.map(error => {\r\n         return dispatch({\r\n          type: SPRINT_ERROR,\r\n          payload: error.msg\r\n      })\r\n      })            \r\n    \r\n  }\r\n\r\n}\r\n\r\n\r\nexport const changeLoaded = () =>  dispatch => {\r\n  return dispatch({\r\n    type: CHANGE_LOADED,\r\n    \r\n  })\r\n}\r\n","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Auth\\index.js",["391","392","393"],"import { useState } from \"react\"\r\nimport Login from './Login'\r\nimport Register from './Register'\r\nimport RegisterCustomer from './RegisterCustomer'\r\nimport {SmallContainer, Card} from '../../Styles/common'\r\nimport {LoginButton} from '../../Styles/buttons'\r\n\r\n\r\n\r\nconst Auth = () => {\r\n    const [page, setPage] = useState(0)\r\n    return (\r\n        <SmallContainer >\r\n            <Card>\r\n                <div style={{width:'100%', borderBottom:'2px solid black', display:'flex', justifyContent:'space-between'}}>\r\n                    <LoginButton style={{fontWeight:`${page===0?'bold':'normal'}`}} onClick={(() => setPage(0))}>Логин</LoginButton>\r\n                    <LoginButton style={{fontWeight:`${page===1?'bold':'normal'}`}} onClick={(() => setPage(1))}>Регистрация </LoginButton>\r\n                    <LoginButton style={{fontWeight:`${page===2?'bold':'normal'}`}} onClick={(() => setPage(2))}>Регистрация (клиент)</LoginButton>\r\n                </div>\r\n\r\n                <div>\r\n                {page ==0 && <Login/>}\r\n                {page ==1 && <Register />}\r\n                {page ==2 && <RegisterCustomer />}\r\n\r\n                </div>\r\n            </Card>\r\n        </SmallContainer>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Auth\r\n","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Adminka\\Index.js",["394","395","396","397","398","399"],"import  {useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { newTicket } from '../../redux/actions/tikets';\r\nimport './tickets.css'\r\n\r\nimport {Table, Tr, Td} from '../../Styles/tables'\r\nimport {Container, Card, Title,} from '../../Styles/common'\r\nimport { Button } from '../../Styles/buttons';\r\nimport { H1, H3} from '../../Styles/typography'\r\n\r\nconst Admin = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [formData, setFormData ] = useState({\r\n        \r\n        problemname: '',   //title\r\n        text: '',     //about problem\r\n        emergency: '', \r\n        pcpass: '', // password,\r\n\r\n      \r\n      });\r\n      \r\n\r\n      const { problemname, text, emergency, pcpass} = formData;\r\n\r\n      const  [file, setFile] = useState(null) \r\n\r\n\r\n      const handleFile = e => {\r\n        setFile(e.target.files[0])\r\n    }\r\n    const onChange = e => {\r\n        e.preventDefault(); \r\n\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n     }\r\n     \r\n\r\n\r\n     const onSubmit = async e => {\r\n        e.preventDefault();\r\n\r\n        dispatch(newTicket({formData, file}))\r\n    \r\n            // register({ name, email, password});\r\n    \r\n           \r\n        }\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n            <H1> Если у вас есть проблема с компом - вы можете создать заявку тут //wip</H1>\r\n            <br/>\r\n            <form className='form__alltick' onSubmit={onSubmit}>\r\n            <input className='alltik__1'\r\n                type='text'\r\n                placeholder='Проблема'\r\n                name='problemname'\r\n                value={problemname}\r\n                onChange={e => onChange(e)}/>\r\n\r\n         \r\n\r\n            <input className='alltik__2'\r\n                type='text'\r\n                placeholder='срочность'\r\n                name='emergency'\r\n                value={emergency}\r\n                onChange={e => onChange(e)}/>\r\n\r\n            <input className='alltik__3'\r\n                type='text'\r\n                placeholder='пароль от компа (опционально)'\r\n                name='pcpass'\r\n                value={pcpass}\r\n                onChange={e => onChange(e)}/>\r\n\r\n            <span className='altik__span'>{'Скриншот проблемы (опционально):'}</span>\r\n            <input className='alltik__4'\r\n                type='file'\r\n                \r\n                placeholder='скриншот проблемы (опционально)'\r\n                onChange={handleFile}/>\r\n\r\n\r\n\r\n\r\n            <Button className='alltik__6' type=\"submit\" value=\"Submit\"> Отправить проблему</Button>\r\n\r\n            <textarea className='alltik__5'\r\n                // type='text'\r\n                placeholder='Описание'\r\n                name='text'\r\n                value={text}\r\n                onChange={e => onChange(e)}/>\r\n\r\n\r\n            </form>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Admin","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Adminka\\dashboard.js",["400","401","402","403"],"\r\n\r\n\r\n\r\nimport { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { allTickets } from \"../../redux/actions/tikets\";\r\n\r\n//styled components\r\nimport {Table, Tr, Td} from '../../Styles/tables'\r\nimport {Container, Card, Title,} from '../../Styles/common'\r\nimport { H1, H3} from '../../Styles/typography'\r\n\r\n\r\nconst Dashboard = ({history}) => {\r\n    const dispatch = useDispatch();\r\n    const loaded = useSelector(state => state.tickets.loaded)\r\n    const tickets = useSelector(state => state.tickets.tickets)\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(allTickets())\r\n    }, [])\r\n\r\n    \r\n    return (\r\n        <div> \r\n            <Card>\r\n            <H1> Входящие тикеты</H1>\r\n                <p> количество проблем: {tickets.length} </p>\r\n\r\n            {!loaded ? <p>loading...</p> : (\r\n            \r\n                    <Table main>\r\n                      \r\n                            <Tr columns='1fr 5fr 1fr' top='top'>\r\n                                <Td>Номер</Td>\r\n                                <Td>Проблема</Td>\r\n                                <Td>Статус</Td>\r\n                            </Tr>\r\n                    \r\n                            {tickets.map((ticket,index) => \r\n                                \r\n                                <Tr columns='1fr 5fr 1fr' onClick={() => history.push(`/tickets/${ticket._id}`)}>\r\n                                    <Td>{index+1}</Td>\r\n                                    <Td>{ticket.problemname}</Td>\r\n                                    <Td>{ticket.status ? <p>ongoing</p>:<p>complete</p>}</Td>\r\n                                    \r\n                                </Tr>\r\n                                \r\n                            )}\r\n                     \r\n                    </Table>\r\n                \r\n            )}\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Dashboard","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Adminka\\Ticket.js",["404","405","406","407","408","409","410"],"import { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n\r\n\r\nimport { useLocation} from \"react-router\";\r\nimport { getTicket } from \"../../redux/actions/tikets\";\r\nimport { url } from \"../utils/axios\";\r\n\r\n\r\nimport { Container, Card, } from '../../Styles/common';\r\nimport { Button } from '../../Styles/buttons';\r\nimport { H1, H3} from '../../Styles/typography'\r\n\r\n\r\nconst Ticket = ({match}) => {\r\n    let {id} = match.params;\r\n    const dispatch = useDispatch();\r\n    const loaded = useSelector(state => state.tickets.ticketLoad)\r\n    const ticket = useSelector(state => state.tickets.ticket)\r\n\r\n    useEffect(() => {\r\n        dispatch(getTicket(id));\r\n    }, [])\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <Card>\r\n            {!loaded ? <p> loading...</p>: (\r\n                <div>\r\n                    <h1>{ticket.problemname}</h1>\r\n                    <p>Описание проблемы: {ticket.text} </p>\r\n                    <p>Дата {ticket.date}</p>\r\n                    <p>Насоклько срочно: {ticket.emergency}</p>\r\n\r\n                    <p>Пароль от компа {ticket.pcpass}</p>\r\n                    <img width=\"100%\"src={`${url}/${ticket.screenshot}`} />\r\n\r\n                    \r\n                </div>\r\n            )}\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Ticket","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\actions\\user.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Projects\\index.js",["411","412","413","414","415","416"],"\r\n\r\n\r\nimport {  Redirect } from 'react-router-dom';\r\n\r\n\r\n//профиль пользователя по ID\r\nimport './projects.css'\r\nimport { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { allTickets } from \"../../redux/actions/tikets\";\r\nimport { allProjects } from '../../redux/actions/projects';\r\n\r\n\r\nimport { loadUser } from '../../redux/actions/auth';\r\n// import { allUsers } from \"../../redux/actions/user\";\r\nimport { Table, Tr, Td } from '../../Styles/tables';\r\nimport { Container, Card, } from '../../Styles/common'\r\nimport { H1, H3} from '../../Styles/typography'\r\n\r\n\r\n\r\n\r\n\r\nconst Projects = ({history}) => {\r\n    const dispatch = useDispatch();\r\n    // const auth = useSelector(state => state.auth.isAuthenticated)\r\n    const loaded = useSelector(state => state.projects.loadedAllProj)\r\n    const projects = useSelector(state => state.projects.projects)\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        \r\n    }, [])\r\n    useEffect (()=>{\r\n        if (!loaded){\r\n           dispatch(allProjects()) \r\n        }\r\n        \r\n    },[loaded])\r\n    return (\r\n    <div>\r\n\r\n       \r\n            {!loaded ? <p>loading...</p> : (\r\n                <div className='projects__grid'>\r\n<Card>\r\n            <H1> Проекты в работе</H1>\r\n                    <p> количество проектов: {projects.length} </p>\r\n                    <Table>\r\n  \r\n    <Tr columns='1fr 1fr 1fr 1fr 1fr' top='top'>\r\n \r\n      <Td>Название</Td>\r\n      <Td>Дата начала</Td>\r\n      <Td>Дедлайн</Td>\r\n      <Td>Статус</Td>\r\n      <Td>Спринты</Td>\r\n\r\n    </Tr>\r\n   \r\n   \r\n       {projects.filter(project => !project.status).map((project,index) => {\r\n           return(  \r\n        <Tr columns='1fr 1fr 1fr 1fr 1fr' key={index} onClick={() => history.replace(`/projects/${project.crypt}`)} title=\"Открыть проект\">\r\n           \r\n            <Td>{project.title}</Td>\r\n            <Td>{project.dateStart.slice(0, 10)}</Td>\r\n            <Td>{project.dateFinish!==undefined?project.dateFinish.slice(0, 10):'нет'}</Td>\r\n            <Td>{project.status ? <p>Завершен</p>:<p>В работе</p>}</Td>\r\n            <Td>{project.sprints.filter(sprint => sprint.status).length}/{project.sprints.length}</Td>\r\n        </Tr>\r\n        )\r\n       })}\r\n     \r\n  \r\n</Table>\r\n</Card>\r\n\r\n\r\n<Card>\r\n           \r\n\r\n<H1 > Завершенные проекты</H1>\r\n\r\n\r\n<Table>\r\n  \r\n    <Tr columns='1fr 1fr 1fr 1fr 1fr' top='top'>\r\n        \r\n      <Td>Название</Td>\r\n      <Td>Дата начала</Td>\r\n      <Td>Дедлайн</Td>\r\n      <Td>Статус</Td>\r\n      <Td>Спринты</Td>\r\n    </Tr>\r\n \r\n       {projects.filter(project => project.status).map((project,index) => {\r\n           return(  \r\n        <Tr columns='1fr 1fr 1fr 1fr 1fr' key={index} onClick={() => history.replace(`/projects/${project.crypt}`)} title=\"Открыть проект\">\r\n         \r\n            <Td>{project.title}</Td>\r\n            <Td>{project.dateStart.slice(0, 10)}</Td>\r\n            <Td>{project.dateFinish!==undefined?project.dateFinish.slice(0, 10):'нет'}</Td>\r\n            <Td>{project.status ? <p>Завершен</p>:<p>В работе</p>}</Td>\r\n            <Td>{project.sprints.filter(sprint => sprint.status).length}/{project.sprints.length}</Td>\r\n        </Tr>\r\n        )\r\n       })}\r\n     \r\n \r\n    </Table>\r\n</Card>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Projects","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\User\\index.js",["417","418","419"],"\r\n//@ALL USERS PAGE\r\n\r\nimport { useEffect } from \"react\"\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { allUsers } from \"../../redux/actions/user\";\r\n\r\n//styled components\r\nimport { Container, Card } from \"../../Styles/common\";\r\nimport { Table, Tr, Td } from \"../../Styles/tables\";\r\nimport { H1, H3} from '../../Styles/typography'\r\n\r\n\r\n\r\nconst Users = ({history}) => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const users = useSelector(state => state.users.users)\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(allUsers())\r\n    }, [])\r\n    return (\r\n        <div> \r\n            <Card>\r\n                <H1 > Все сотрудники</H1>\r\n                    {!users ? <p>loading...</p> : (\r\n                        <Table>\r\n                            \r\n                                <Tr columns='1fr 1fr 1fr 1fr' top='top'>\r\n                                    <Td>Имя</Td>\r\n                                    <Td>email</Td>\r\n                                    <Td>Должность</Td>\r\n                                    <Td>Активные проекты</Td>\r\n                                </Tr>\r\n                        \r\n                                {users.map(user => {\r\n                                    return(  \r\n                                    <Tr columns='1fr 1fr 1fr 1fr' onClick={() => history.replace(`/users/${user._id}`)}>\r\n                                        <Td>{user.name}</Td>\r\n                                        <Td>{user.email}</Td>\r\n                                        <Td>{user.position}</Td>\r\n                                        <Td>{user.projects.length}</Td>\r\n                                    </Tr>\r\n                                    )\r\n                                })}\r\n                            \r\n                        </Table>\r\n                    )}\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Users","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\Styles\\layout.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Layout\\index.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Office\\index.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\DataBase\\index.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\reducers\\index.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\Styles\\tables.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\Styles\\project.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\actions\\tikets.js",["420"],"import Axios from \"axios\";\r\nimport { innerBackend } from \"../../components/utils/axios\";\r\nimport { ALL_TICKETS, NEW_ERROR, NEW_TICKET, GET_TICKET } from \"../types\";\r\nimport {url} from '../../components/utils/axios'\r\n\r\n\r\nexport const newTicket = ({formData, file}) => async dispatch  => {\r\n\r\n     \r\n    // formData.append('userName', 'Fred');\r\n\r\n\r\n    try {\r\n        // console.log(formData, 'data')\r\n    const form = new FormData()\r\n    if(file){\r\n        form.append(\r\n            'file',\r\n            file\r\n          )\r\n    }\r\n    \r\n\r\n    Object.keys(formData).map((el, index) => {\r\n        form.append(\r\n            `${el}`, formData[el]\r\n        )\r\n    })\r\n\r\n        console.log(form.get('file'), 'file HERE')\r\n        console.log(form.get('text'), 'text HERE')\r\n\r\n\r\n        const res = await Axios.post('/tickets', form, {\r\n            baseURL: url,\r\n            headers: {\r\n                'content-type': 'multipart/form-data', // do not forget this \r\n                'auth-token': localStorage.token\r\n               }})\r\n\r\n        dispatch({\r\n            type: NEW_TICKET,\r\n            payload: res.data\r\n        })\r\n            // dispatch(loadUser())\r\n\r\n        }\r\n      catch (err) {\r\n        const errors = err.response.data.errors;\r\n        errors.map(error => {\r\n           return dispatch({\r\n            type: NEW_ERROR,\r\n            payload: error.msg\r\n        })\r\n        })            \r\n      \r\n    }\r\n\r\n}\r\n\r\n\r\nexport const allTickets = () => async dispatch  => {\r\n    try {\r\n\r\n        const res = await innerBackend.get('/tickets/all')\r\n        dispatch({\r\n            type: ALL_TICKETS,\r\n            payload: res.data\r\n        })\r\n        console.log(res.data, 'respond')\r\n\r\n        }\r\n      catch (err) {\r\n        const errors = err.response.data.errors;\r\n        errors.map(error => {\r\n           return dispatch({\r\n            type: NEW_ERROR,\r\n            payload: error.msg\r\n        })\r\n        })            \r\n      \r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const getTicket = (id) => async dispatch  => {\r\n    try {\r\n        console.log(id, 'my id ticket')\r\n        const res = await innerBackend.get(`/tickets/${id}`)\r\n        dispatch({\r\n            type: GET_TICKET,\r\n            payload: res.data\r\n        })\r\n\r\n        }\r\n      catch (err) {\r\n        const errors = err.response.data.errors;\r\n        errors.map(error => {\r\n           return dispatch({\r\n            type: NEW_ERROR,\r\n            payload: error.msg\r\n        })\r\n        })            \r\n      \r\n    }\r\n\r\n}","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\actions\\news.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\Styles\\Forms.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\actions\\projects.js",["421","422"],"import { innerBackend } from \"../../components/utils/axios\";\r\nimport { ADD_SPRINT, ADD_TASKS, ALL_PROJECTS, ALL_SPRINT,ADD_SPRINT_TO_CHOSEN, CREATE_FAIL, DELETE_PROJECT,EDIT_PROJECT, FINISH_SPRINT, FINISH_TASK, GET_PROJECT, GET_SPRINT, JOIN_TEAM, PROJECT_ID, SPRINT_ERROR, FINISH_PROJECT } from \"../types\";\r\n\r\n\r\n\r\n\r\n\r\nexport const newProject = (formData) => async dispatch  => {\r\n    try {\r\n\r\n        const res = await innerBackend.post('/projects/add', formData)\r\n        dispatch({\r\n            type: GET_PROJECT,\r\n            payload: res.data\r\n        })\r\n\r\n        }\r\n      catch (err) {\r\n        const errors = err.response.data.errors;\r\n        errors.map(error => {\r\n           return dispatch({\r\n            type: CREATE_FAIL,\r\n            payload: error.msg\r\n        })\r\n        })            \r\n      \r\n    }\r\n\r\n}\r\n\r\n\r\nexport const allProjects = () => async dispatch  => {\r\n    \r\n    try {\r\n\r\n        const res = await innerBackend.get('/projects')\r\n        dispatch({\r\n            type: ALL_PROJECTS,\r\n            payload: res.data\r\n        })\r\n\r\n        }\r\n      catch (err) {\r\n        const errors = err.response.data.errors;\r\n        errors.map(error => {\r\n           return dispatch({\r\n            type: CREATE_FAIL,\r\n            payload: error.msg\r\n        })\r\n        })            \r\n      \r\n    }\r\n\r\n}\r\n\r\n\r\nexport const getProject = (id) => async dispatch  => {\r\n    \r\n    try {\r\n\r\n        const res = await innerBackend.get(`/projects/${id}`)\r\n        dispatch({\r\n            type: GET_PROJECT,\r\n            payload: res.data\r\n        })\r\n\r\n        }\r\n      catch (err) {\r\n        const errors = err.response.data.errors;\r\n        errors.map(error => {\r\n           return dispatch({\r\n            type: CREATE_FAIL,\r\n            payload: error.msg\r\n        })\r\n        })            \r\n      \r\n    }\r\n\r\n}\r\n\r\n\r\nexport const addSprint = (id) => async dispatch  => {\r\n    try {\r\n        console.log(id, 'id');\r\n\r\n        const res = await innerBackend.post(`/projects/sprints/new/${id}`)\r\n        dispatch({\r\n            type: ADD_SPRINT,\r\n            payload: res.data\r\n        })\r\n\r\n        }\r\n      catch (err) {\r\n        const errors = err.response.data.errors;\r\n        errors.map(error => {\r\n           return dispatch({\r\n            type: SPRINT_ERROR,\r\n            payload: error.msg\r\n        })\r\n        })            \r\n      \r\n    }\r\n\r\n}\r\nexport const editProject = (formData, id) => async dispatch  => {\r\n    try {\r\n        console.log('hello edit', formData)\r\n        const res = await innerBackend.put(`/projects/${id}`, formData)\r\n        dispatch({\r\n            type: EDIT_PROJECT,\r\n            payload: res.data\r\n        })\r\n    \r\n  \r\n      }\r\n      catch (err) {\r\n        const errors = err.response.data.errors;\r\n        errors.map(error => {\r\n           return dispatch({\r\n            type: CREATE_FAIL,\r\n            payload: error.msg\r\n        })\r\n        })\r\n            \r\n      } \r\n  \r\n  }\r\n\r\nexport const allSprints = (id) => async dispatch  => {\r\n    try {\r\n\r\n        const res = await innerBackend.get(`/projects/sprints/${id}`)\r\n        dispatch({\r\n            type: ALL_SPRINT,\r\n            payload: res.data.sprints\r\n        })\r\n        console.log(res.data, 'my data')\r\n\r\n        }\r\n      catch (err) {\r\n        const errors = err.response.data.errors;\r\n        errors.map(error => {\r\n           return dispatch({\r\n            type: SPRINT_ERROR,\r\n            payload: error.msg\r\n        })\r\n        })            \r\n      \r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const getSprint = (id) => async dispatch  => {\r\n    console.log(id, 'айдишека')\r\n    try {\r\n        const res = await innerBackend.get(`/projects/getsprint/${id}`)\r\n        dispatch({\r\n            type: GET_SPRINT,\r\n            payload: res.data\r\n        })\r\n\r\n        }\r\n      catch (err) {\r\n        const errors = err.response.data.errors;\r\n        errors.map(error => {\r\n           return dispatch({\r\n            type: SPRINT_ERROR,\r\n            payload: error.msg\r\n        })\r\n        })            \r\n      \r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const addTasks = ({tasks, id}) => async dispatch  => {\r\n    console.log(tasks, 'id')\r\n\r\n    try {\r\n        // console.log(tasks, 'tasks', id, 'id')\r\n        const res = await innerBackend.post(`/projects/sprints/addtask/${id}`, tasks)\r\n        dispatch({\r\n            type: ADD_TASKS,\r\n            payload: res.data\r\n        })\r\n\r\n        }\r\n      catch (err) {\r\n        const errors = err.response.data.errors;\r\n        errors.map(error => {\r\n           return dispatch({\r\n            type: SPRINT_ERROR,\r\n            payload: error.msg\r\n        })\r\n        })            \r\n      \r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const finishTask = ({taskid, id}) => async dispatch  => {\r\n    let body = {\r\n        taskid: taskid \r\n    }\r\n    try {\r\n        // console.log(tasks, 'tasks', id, 'id')\r\n        const res = await innerBackend.put(`projects/sprints/DAtask/${id}`, body)\r\n        dispatch({\r\n            type: FINISH_TASK,\r\n            payload: res.data\r\n        })\r\n\r\n        }\r\n      catch (err) {\r\n        const errors = err.response.data.errors;\r\n        errors.map(error => {\r\n           return dispatch({\r\n            type: SPRINT_ERROR,\r\n            payload: error.msg\r\n        })\r\n        })            \r\n      \r\n    }\r\n\r\n}\r\n\r\n\r\nexport const finishSprint = (id) => async dispatch  => {\r\n    try {\r\n        const res = await innerBackend.put(`projects/sprints/${id}`)\r\n        dispatch({\r\n            type: FINISH_SPRINT,\r\n            payload: res.data\r\n        })\r\n        }\r\n      catch (err) {\r\n        const errors = err.response.data.errors;\r\n        errors.map(error => {\r\n           return dispatch({\r\n            type: SPRINT_ERROR,\r\n            payload: error.msg\r\n        })\r\n        })            \r\n      \r\n    }\r\n\r\n}\r\n\r\n// export const addToChosen = (id) => async dispatch  => {\r\n//     console.log ('hi sprint', id)\r\n//     try {\r\n//         const res = await innerBackend.put(`projects/favsprint/${id}`)\r\n//         dispatch({\r\n//             type: ADD_SPRINT_TO_CHOSEN,\r\n//             payload: res.data\r\n//         })\r\n//         }\r\n//       catch (err) {\r\n//         const errors = err.response.data.errors;\r\n//         errors.map(error => {\r\n//            return dispatch({\r\n//             type: SPRINT_ERROR,\r\n//             payload: error.msg\r\n//         })\r\n//         })            \r\n      \r\n//     }\r\n\r\n// }\r\n\r\nexport const finishProject = (id) => async dispatch  => {\r\n   \r\n    try {\r\n        const res = await innerBackend.put(`projects/finish/${id}`)\r\n        dispatch({\r\n            type: FINISH_PROJECT,\r\n            payload: res.data\r\n        })\r\n        }\r\n      catch (err) {\r\n        const errors = err.response.data.errors;\r\n        errors.map(error => {\r\n           return dispatch({\r\n            type: CREATE_FAIL,\r\n            payload: error.msg\r\n        })\r\n        })            \r\n      \r\n    }\r\n\r\n}\r\n\r\nexport const deleteProject = (crypt) => async dispatch  => {\r\n\r\n    try {\r\n        // console.log(tasks, 'tasks', id, 'id')\r\n        const res = await innerBackend.delete(`projects/${crypt}`)\r\n        dispatch({\r\n            type: DELETE_PROJECT,\r\n            payload: res.data\r\n        })\r\n\r\n        }\r\n      catch (err) {\r\n        const errors = err.response.data.errors;\r\n        errors.map(error => {\r\n           return dispatch({\r\n            type: SPRINT_ERROR,\r\n            payload: error.msg\r\n        })\r\n        })            \r\n      \r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const joinTeam = (id) => async dispatch  => {\r\n\r\n    try {\r\n\r\n        const res = await innerBackend.put(`/projects/jointeam/${id}`)\r\n        dispatch({\r\n            type: JOIN_TEAM,\r\n            payload: res.data\r\n        })\r\n\r\n        }\r\n      catch (err) {\r\n        const errors = err.response.data.errors;\r\n        errors.map(error => {\r\n           return dispatch({\r\n            type: SPRINT_ERROR,\r\n            payload: error.msg\r\n        })\r\n        })            \r\n      \r\n    }\r\n\r\n}","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Auth\\RegisterCustomer.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Auth\\Register.js",["423"],"import  {useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { register } from '../../redux/actions/auth';\r\nimport {Input, LogForm} from '../../Styles/Forms'\r\nimport {Button} from '../../Styles/buttons'\r\n\r\nconst Auth = () => {\r\nconst dispatch = useDispatch();\r\n\r\n    const [formData, setFormData ] = useState({\r\n        \r\n        email: '',\r\n        password: '',\r\n        name: '',\r\n        position: '',\r\n        permCode: ''\r\n      \r\n      });\r\n      \r\n\r\n      const { name, email, password, position, permCode } = formData;\r\n\r\n  \r\n    const onChange = e => {\r\n        e.preventDefault(); \r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n     }\r\n     \r\n\r\n     const onSubmit = async e => {\r\n        e.preventDefault();\r\n        let file = null;\r\n        dispatch(register({formData}))\r\n           \r\n        }\r\n\r\n    return (\r\n        <div style={{display: 'flex', justifyContent:'center'}}>\r\n            <LogForm onSubmit={onSubmit}>\r\n            <Input \r\n                type='email'\r\n                placeholder='email'\r\n                name='email'\r\n                value={email}\r\n                onChange={e => onChange(e)}/>\r\n\r\n           <Input \r\n                type='password'\r\n                placeholder='password'\r\n                name='password'\r\n                value={password}\r\n                onChange={e => onChange(e)}/>\r\n\r\n\r\n            <Input \r\n                type='name'\r\n                placeholder='Имя'\r\n                name='name'\r\n                value={name}\r\n                onChange={e => onChange(e)}/>\r\n\r\n\r\n\r\n            <Input \r\n                type='position'\r\n                placeholder='Должность'\r\n                name='position'\r\n                value={position}\r\n                onChange={e => onChange(e)}/>\r\n            <Input \r\n                type='text'\r\n                placeholder='Код организации'\r\n                name='permCode'\r\n                value={permCode}\r\n                onChange={e => onChange(e)}/>\r\n\r\n            <Button style={{width:'20vw'}} type=\"submit\"> Зарегистрироваться</Button>\r\n\r\n            </LogForm>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Auth","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Auth\\Login.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\types.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Layout\\sidebar.js",["424","425","426","427","428"],"import { useSelector } from 'react-redux'\r\nimport './sidebar.css'\r\nimport { useRef } from \"react\";\r\nimport {SidebarContainer, SidebarLink} from '../../Styles/layout'\r\n\r\n\r\nconst Sidebar = ({dimensions}) => {\r\n\r\nconst user = useSelector(state => state.auth.user)\r\nconst adminka = useRef(null)\r\n\r\n\r\n\r\n    return (\r\n         <SidebarContainer style={{display: dimensions.width<600? 'none' : 'block'}}>\r\n\r\n            <SidebarLink to='/' className=\"nav-link\" >\r\n                    <img className='sidebar__logo' src='sidebarIcon.png' title=\"Главная\" />\r\n                    <p></p>\r\n            </SidebarLink>\r\n\r\n\r\n            <SidebarLink to='/' className=\"nav-link\" >\r\n                    <img src='sidebarIcon.png' title=\"Главная\" />\r\n                    <p>Главная</p>\r\n            </SidebarLink>\r\n        \r\n\r\n            \r\n        \r\n            <SidebarLink to='/projects' className=\"nav-link\" >\r\n                    <img src='/sidebarIcon.png' title=\"Все проекты\" />\r\n                    <p>Проекты</p>\r\n            </SidebarLink>\r\n       \r\n\r\n            <SidebarLink to='/users' className=\"nav-link\" > \r\n                    <img src='/sidebarIcon.png' title=\"Команда\"/>\r\n                    <p>Команда</p>\r\n            </SidebarLink>\r\n         \r\n\r\n\r\n            {user.permission==='admin'?\r\n            <SidebarLink ref={adminka}  to='/admin' className=\"nav-link\">\r\n                    <img src='/sidebarIcon.png' title=\"Админка\"></img>  \r\n                    {user.permission==='admin'?<p>Админка</p>:''}\r\n            </SidebarLink>: ''}\r\n                                    \r\n\r\n         </SidebarContainer>\r\n         )\r\n}\r\n\r\n\r\n\r\nexport default Sidebar","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Layout\\header.js",["429","430","431","432","433","434"],"\r\n\r\nimport { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport {Header, ItemHead} from '../../Styles/layout'\r\nimport {Bold} from '../../Styles/typography'\r\nimport { url } from '../utils/axios'\r\nimport Menu from './Menu'\r\nimport MenuMobile from './menuMobile'\r\n\r\n\r\nconst HeaderL = ({dimensions}) => {\r\n    const loaded = useSelector(state => state.auth.loaded)\r\n    const user = useSelector(state => state.auth.user)\r\n    const [open, setOpen] = useState({\r\n        menu: false,\r\n        menuProfile: false,\r\n        mobile: false\r\n    })\r\n    const mobile = dimensions.width<600? true : false\r\n\r\n    const mobClick = () => { \r\n        setOpen({...open, mobile: !open.mobile})\r\n        console.log(open)\r\n    }\r\n\r\n\r\n    const allFalse= () => {\r\n        setOpen({...open, mobile: false, menu:false, menuProfile: false})\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {!loaded? <div>loading...</div> :(\r\n        <Header mobile={mobile}>\r\n\r\n            <ItemHead className='mobile__menu' mobile={mobile} onClick={() => mobClick()}>\r\n                <Bold size='14' color='white'>меню</Bold>\r\n                <img className='arrow' src='/headerArrow.png'/>\r\n            </ItemHead>\r\n\r\n            <ItemHead mobile={mobile} onClick={() => setOpen({...open, menuProfile:false , menu: !open.menu})}>\r\n                <img className='invert' src='/headerPlus.png'/>\r\n                <img className='arrow' src='/headerArrow.png'/>\r\n            </ItemHead>\r\n            \r\n            <ItemHead mobile={mobile} onClick={() => setOpen({...open, menu:false, menuProfile: !open.menuProfile})}>\r\n                <img  width=\"40px\" style={{borderRadius:'50px'}} src={`${url}/${user != null? (user!= undefined? user.avatar:''):''}`}/>\r\n                <img className='arrow' src='/headerArrow.png'/>\r\n            </ItemHead>\r\n            \r\n           \r\n\r\n        </Header>\r\n)}\r\n        <Menu closeAll={()=>allFalse()} mobile={mobile} state={open}/>\r\n        <MenuMobile open={open.mobile} closeAll={()=>allFalse()} />\r\n\r\n          </>\r\n    )\r\n}\r\n\r\n\r\nexport default HeaderL","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\reducers\\auth.js",["435"],"\r\nimport {REGISTER, AUTH_ERROR, LOGIN, USER_LOADED, CHANGE_USERDATA, CHANGE_AVATAR, CHANGE_LOADED, ADD_SPRINT_TO_CHOSEN} from '../types'\r\n\r\n\r\n\r\nconst initialState = {\r\n    user: null,\r\n    isAuthenticated: false,\r\n    token: false,\r\n    msg:'',\r\n    error: '',\r\n    loaded: false\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    const {\r\n        type, payload\r\n    } = action;\r\n\r\n    switch(type){\r\n        case REGISTER:\r\n        case LOGIN:\r\n             localStorage.setItem('token', payload.token);\r\n             console.log(localStorage.token, 'NEW TOKEN ')\r\n            return {\r\n                ...state,\r\n                loaded: true,\r\n                token: true,\r\n                error: ''\r\n                \r\n            }\r\n            case USER_LOADED:\r\n                return {\r\n                    ...state,\r\n                    loaded: true,\r\n                    isAuthenticated: true,\r\n                    user: payload\r\n                }\r\n                case CHANGE_LOADED:\r\n                    return {\r\n                        ...state,\r\n                        loaded: true\r\n                    }\r\n            \r\n                case CHANGE_USERDATA:\r\n                    return {\r\n                        ...state,\r\n                      \r\n                        loaded: false,\r\n                        msg: payload\r\n                    }\r\n                    case CHANGE_AVATAR:\r\n                        return {\r\n                            ...state,\r\n                        \r\n                            loaded: false,\r\n                            msg: payload\r\n                        }\r\n                case ADD_SPRINT_TO_CHOSEN:\r\n                    console.log('here is payload',payload)    \r\n                \r\n                return {\r\n                        ...state,\r\n                        \r\n                        msg: payload\r\n                    }\r\n            case AUTH_ERROR:\r\n                return {\r\n                    ...state,\r\n                    isAuthenticated: false,\r\n                    error: payload\r\n                }\r\n            \r\n            default: \r\n                return state;\r\n    }\r\n\r\n} \r\n","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\reducers\\users.js",["436","437","438","439","440","441","442"],"\r\nimport {REGISTER, AUTH_ERROR, LOGIN, USER_LOADED, ALL_USERS, CHANGE_PERMISSION,PERM_RETURN,ONE_USER, CHANGE_USERDATA, CHANGE_AVATAR} from '../types'\r\n\r\n\r\n\r\nconst initialState = {\r\n    user: null,\r\n    users: [],\r\n    loaded: false,\r\n    msg: '',\r\n    userLoaded: false\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    const {\r\n        type, payload\r\n    } = action;\r\n\r\n    switch(type){\r\n        case ONE_USER:\r\n            return {\r\n                ...state,\r\n                user: payload,\r\n                userLoaded: true\r\n            }\r\n        case PERM_RETURN:\r\n            return {\r\n                ...state,\r\n                loaded: false,\r\n                \r\n            }\r\n            case ALL_USERS:\r\n                return {\r\n                    ...state,\r\n                    loaded: true,\r\n                    users: payload\r\n                }\r\n                case CHANGE_PERMISSION:\r\n                    return {\r\n                        ...state,\r\n                        loaded: true,\r\n                        msg: payload\r\n                    }\r\n                    \r\n                    \r\n            default: \r\n                return state;\r\n    }\r\n\r\n} \r\n","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\reducers\\tickets.js",["443"],"import { ALL_TICKETS, GET_TICKET, NEW_ERROR, NEW_TICKET } from \"../types\";\r\n\r\n\r\n\r\n\r\nconst initialState = {\r\n    tickets: [],\r\n    ticket: null,\r\n    ticketLoad: false,\r\n    error: '',\r\n    loaded: false\r\n    \r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    const {\r\n        type, payload\r\n    } = action;\r\n\r\n    switch(type){\r\n        case NEW_TICKET:\r\n            return {\r\n                ...state,\r\n                error: ''\r\n                \r\n                \r\n            }\r\n        case ALL_TICKETS:\r\n            return {\r\n                ...state,\r\n                loaded: true,\r\n                error: '',\r\n                tickets: payload\r\n                \r\n                \r\n            }\r\n\r\n        case GET_TICKET:\r\n            return {\r\n                ...state,\r\n                ticketLoad: true,\r\n                error: '',\r\n                ticket: payload\r\n                \r\n                \r\n            }\r\n        case NEW_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                \r\n                \r\n                \r\n            }\r\n            default: \r\n                return state;\r\n        }\r\n    }","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\reducers\\news.js",["444"],"import { ALL_NEWS, GET_NEWS, DELETE_NEWS, UPDATE_NEWS, NEWS_FAIL, } from \"../types\";\r\n\r\n\r\n\r\nconst initialState = {\r\n    news: null,\r\n    getNews: null,\r\n    error: '',\r\n   \r\n    loaded: false,\r\n    \r\n}\r\n\r\n\r\n\r\nexport default function(state = initialState, action) {\r\n    const {\r\n        type, payload\r\n    } = action;\r\n\r\n    switch(type){\r\n       \r\n\r\n            case ALL_NEWS:\r\n                return {\r\n                    ...state,\r\n                    loaded: true,\r\n                    news: payload,\r\n                    // loadNews: true,\r\n                    error: ''\r\n                }\r\n\r\n            case GET_NEWS:\r\n                return {\r\n                    ...state,\r\n                    getNews: payload,\r\n                    // loadNews: true,\r\n\r\n                    error: ''\r\n                }\r\n          \r\n            \r\n            case UPDATE_NEWS:\r\n                return {\r\n                    ...state,\r\n                    loaded: true,\r\n                    getNews: payload,\r\n                    error: ''\r\n                }\r\n\r\n            case DELETE_NEWS: \r\n                return {\r\n                    ...state,\r\n                    msg: payload\r\n                }\r\n\r\n                case NEWS_FAIL:\r\n                    return {\r\n                        ...state,\r\n                        error: payload,\r\n                       \r\n                    }\r\n            \r\n            default: \r\n                return state;\r\n    }\r\n\r\n} ","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\redux\\reducers\\projects.js",["445","446"],"\r\nimport { ADD_SPRINT, ALL_PROJECTS,EDIT_PROJECT, CREATE_FAIL, GET_PROJECT, SPRINT_ERROR, ALL_SPRINT, UPDATE_PROJECT, GET_SPRINT, ADD_TASKS, FINISH_TASK, DELETE_PROJECT, FINISH_SPRINT, JOIN_TEAM,ADD_SPRINT_TO_CHOSEN,FINISH_PROJECT } from '../types'\r\n\r\n\r\n\r\nconst initialState = {\r\n    projects: null,\r\n    project: null,\r\n    loadProject: false,\r\n    loadedAllProj: false,\r\n    sprints: [],\r\n    loadSprints: false,\r\n    sprint: [],\r\n    tasks: [],\r\n    tasksLoad: false,\r\n    error: '',\r\n    reload: false,\r\n    sprintLoad: false\r\n    \r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    const {\r\n        type, payload\r\n    } = action;\r\n\r\n    switch(type){\r\n       \r\n\r\n            case ALL_PROJECTS:\r\n                return {\r\n                    ...state,\r\n                    loadedAllProj: true,\r\n                    projects: payload,\r\n                    loadProject: false,\r\n                    sprint_load: false,\r\n                    sprintLoad: false,\r\n\r\n                    error: ''\r\n                }\r\n                case EDIT_PROJECT:\r\n                    return {\r\n                        ...state,\r\n                        loadProject: false,\r\n                     \r\n                    }\r\n            case GET_PROJECT:\r\n                return {\r\n                    ...state,\r\n                    project: payload,\r\n                    loadedAllProj: false,\r\n                    loadProject: true,\r\n                    sprint_load: false,\r\n                    sprintLoad: false,\r\n\r\n                    error: ''\r\n                }\r\n            case ADD_SPRINT:\r\n                return {\r\n                    ...state,\r\n                    sprint: payload,\r\n                    sprint_load: true,\r\n\r\n                    reload: true,\r\n                    error: ''\r\n                }\r\n\r\n                case ADD_TASKS:\r\n                return {\r\n                    ...state,\r\n                    tasks: payload,\r\n                    error: ''\r\n                }\r\n                case JOIN_TEAM:\r\n                    return {\r\n                        ...state,\r\n                        project: payload,\r\n                        msg: payload.msg,\r\n                        error: ''\r\n                    }\r\n            case ALL_SPRINT:\r\n                return {\r\n                    ...state,\r\n                    sprints: payload,\r\n                    loadSprints: true,\r\n                    sprintLoad: false,\r\n                    sprint: null,\r\n                    error: ''\r\n                }\r\n            case GET_SPRINT:\r\n                return {\r\n                    ...state,\r\n                    sprint: payload,\r\n                    reload: false,\r\n                    loadProject: false,\r\n                    sprintLoad: true,\r\n                    loadSprints: true,\r\n                    error: ''\r\n                }\r\n            case UPDATE_PROJECT:\r\n                return {\r\n                    ...state,\r\n                    loadedAllProj: true,\r\n                    project: payload,\r\n                    error: ''\r\n                }\r\n                case FINISH_PROJECT:\r\n                    return {\r\n                        ...state,\r\n                        msg: payload,\r\n                        loadedAllProj: false,\r\n                    }\r\n            case FINISH_SPRINT:\r\n                return {\r\n                    ...state,\r\n                    msg: payload,\r\n                    error: ''\r\n                }\r\n                // case ADD_SPRINT_TO_CHOSEN:\r\n                //     return {\r\n                //         ...state,\r\n                    \r\n                //         msg: payload\r\n                //     }\r\n            case CREATE_FAIL:\r\n                return {\r\n                    ...state,\r\n                    error: payload,\r\n                    loadProject: false,\r\n                    loadedAllProj: false\r\n                }\r\n                case FINISH_TASK:\r\n                    return {\r\n                    ...state,\r\n                    hey: payload\r\n                }   \r\n            case SPRINT_ERROR:\r\n                return {\r\n                    ...state,\r\n                    error: payload,\r\n                    loadProject: false,\r\n                    loadedAllProj: false\r\n                }\r\n            case DELETE_PROJECT: \r\n                return {\r\n                    ...state,\r\n                    msg: payload\r\n                }\r\n\r\n\r\n            \r\n            default: \r\n                return state;\r\n    }\r\n\r\n} \r\n","C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Layout\\MenuProfile.js",["447","448"],"import { NavLink } from \"react-router-dom\"\r\nimport {useSelector} from 'react-redux'\r\nimport {MenuHead, StyledLink} from '../../Styles/layout'\r\n\r\n\r\n\r\n\r\nconst MenuProfile = () => {\r\n  const user = useSelector(state => state.auth.user)\r\n \r\n    return (\r\n        <MenuHead >\r\n            <StyledLink\r\n              to='/users/me'\r\n              >Мой профиль</StyledLink>\r\n\r\n\r\n            <StyledLink\r\n              to='/projects/my'\r\n               >Мои проекты</StyledLink>\r\n            \r\n\r\n              \r\n               \r\n\r\n\r\n        </MenuHead>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default MenuProfile",["449","450"],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Layout\\Menu.js",[],"C:\\Dev\\buroPlatform\\buro-front\\my-app\\src\\components\\Layout\\menuMobile.js",["451","452"],"import { useEffect } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport styles from '../../Styles/modules/components/mobileMenu.module.css'\r\nimport {Light, Bold} from '../../Styles/typography'\r\nimport { MobMenuLink } from '../../Styles/layout'\r\n\r\nconst MenuMobile = ({open, closeAll}) => {\r\n\r\n\r\n    return(\r\n        <CSSTransition\r\n        in={open}\r\n        timeout={300}\r\n        classNames={{\r\n            enter:   styles.transitionsEnter,\r\n            enterActive:   styles.transitionsEnterActive,\r\n            exit:  styles.transitionsExit,\r\n            exitActive:   styles.transitionsExitActive,\r\n        }}\r\n        unmountOnExit\r\n        >\r\n            <div className={styles.mobMenu}>\r\n                <div className={styles.mobGrid}>\r\n                    <Light className={styles.title} color='white' size='16'>Главное</Light>\r\n                        <MobMenuLink to='/' className={styles.menuButton} onClick={closeAll}> Главная</MobMenuLink>\r\n                        <MobMenuLink to='/projects' className={styles.menuButton} onClick={closeAll}>Проекты</MobMenuLink>\r\n                        <MobMenuLink to='/users' className={styles.menuButton} onClick={closeAll}>Сотрудники</MobMenuLink>\r\n                    <Light className={styles.title} color='white' size='16'>тут что-то будет</Light>\r\n                </div>    \r\n            </div> \r\n        </CSSTransition>\r\n\r\n    )\r\n}\r\nexport default MenuMobile",{"ruleId":"453","severity":1,"message":"454","line":19,"column":4,"nodeType":"455","endLine":19,"endColumn":6,"suggestions":"456"},{"ruleId":"457","replacedBy":"458"},{"ruleId":"459","replacedBy":"460"},{"ruleId":"461","severity":1,"message":"462","line":14,"column":10,"nodeType":"463","messageId":"464","endLine":14,"endColumn":19},{"ruleId":"453","severity":1,"message":"465","line":29,"column":3,"nodeType":"455","endLine":29,"endColumn":5,"suggestions":"466"},{"ruleId":"467","severity":1,"message":"468","line":11,"column":13,"nodeType":"469","endLine":11,"endColumn":115},{"ruleId":"470","severity":1,"message":"471","line":11,"column":78,"nodeType":"472","messageId":"473","endLine":11,"endColumn":80},{"ruleId":"461","severity":1,"message":"474","line":4,"column":21,"nodeType":"463","messageId":"464","endLine":4,"endColumn":25},{"ruleId":"461","severity":1,"message":"475","line":4,"column":27,"nodeType":"463","messageId":"464","endLine":4,"endColumn":34},{"ruleId":"470","severity":1,"message":"471","line":14,"column":16,"nodeType":"472","messageId":"473","endLine":14,"endColumn":18},{"ruleId":"470","severity":1,"message":"476","line":17,"column":50,"nodeType":"472","messageId":"473","endLine":17,"endColumn":52},{"ruleId":"470","severity":1,"message":"471","line":20,"column":34,"nodeType":"472","messageId":"473","endLine":20,"endColumn":36},{"ruleId":"453","severity":1,"message":"477","line":23,"column":4,"nodeType":"455","endLine":23,"endColumn":13,"suggestions":"478"},{"ruleId":"453","severity":1,"message":"479","line":32,"column":4,"nodeType":"455","endLine":32,"endColumn":6,"suggestions":"480"},{"ruleId":"470","severity":1,"message":"471","line":47,"column":33,"nodeType":"472","messageId":"473","endLine":47,"endColumn":35},{"ruleId":"470","severity":1,"message":"476","line":18,"column":28,"nodeType":"472","messageId":"473","endLine":18,"endColumn":30},{"ruleId":"481","severity":1,"message":"482","line":18,"column":62,"nodeType":"463","messageId":"483","endLine":18,"endColumn":65},{"ruleId":"470","severity":1,"message":"476","line":63,"column":103,"nodeType":"472","messageId":"473","endLine":63,"endColumn":105},{"ruleId":"470","severity":1,"message":"471","line":64,"column":46,"nodeType":"472","messageId":"473","endLine":64,"endColumn":48},{"ruleId":"461","severity":1,"message":"484","line":1,"column":21,"nodeType":"463","messageId":"464","endLine":1,"endColumn":29},{"ruleId":"461","severity":1,"message":"485","line":1,"column":31,"nodeType":"463","messageId":"464","endLine":1,"endColumn":37},{"ruleId":"461","severity":1,"message":"486","line":5,"column":19,"nodeType":"463","messageId":"464","endLine":5,"endColumn":31},{"ruleId":"461","severity":1,"message":"487","line":5,"column":33,"nodeType":"463","messageId":"464","endLine":5,"endColumn":47},{"ruleId":"461","severity":1,"message":"488","line":5,"column":64,"nodeType":"463","messageId":"464","endLine":5,"endColumn":74},{"ruleId":"461","severity":1,"message":"489","line":8,"column":10,"nodeType":"463","messageId":"464","endLine":8,"endColumn":15},{"ruleId":"461","severity":1,"message":"490","line":8,"column":17,"nodeType":"463","messageId":"464","endLine":8,"endColumn":19},{"ruleId":"461","severity":1,"message":"491","line":8,"column":21,"nodeType":"463","messageId":"464","endLine":8,"endColumn":23},{"ruleId":"461","severity":1,"message":"462","line":9,"column":10,"nodeType":"463","messageId":"464","endLine":9,"endColumn":19},{"ruleId":"461","severity":1,"message":"492","line":10,"column":14,"nodeType":"463","messageId":"464","endLine":10,"endColumn":16},{"ruleId":"461","severity":1,"message":"493","line":20,"column":11,"nodeType":"463","messageId":"464","endLine":20,"endColumn":14},{"ruleId":"461","severity":1,"message":"494","line":24,"column":46,"nodeType":"463","messageId":"464","endLine":24,"endColumn":51},{"ruleId":"461","severity":1,"message":"495","line":24,"column":53,"nodeType":"463","messageId":"464","endLine":24,"endColumn":58},{"ruleId":"461","severity":1,"message":"496","line":30,"column":29,"nodeType":"463","messageId":"464","endLine":30,"endColumn":36},{"ruleId":"461","severity":1,"message":"497","line":30,"column":46,"nodeType":"463","messageId":"464","endLine":30,"endColumn":50},{"ruleId":"461","severity":1,"message":"498","line":30,"column":52,"nodeType":"463","messageId":"464","endLine":30,"endColumn":56},{"ruleId":"461","severity":1,"message":"499","line":30,"column":58,"nodeType":"463","messageId":"464","endLine":30,"endColumn":64},{"ruleId":"453","severity":1,"message":"500","line":55,"column":8,"nodeType":"455","endLine":55,"endColumn":10,"suggestions":"501"},{"ruleId":"461","severity":1,"message":"502","line":38,"column":10,"nodeType":"463","messageId":"464","endLine":38,"endColumn":22},{"ruleId":"461","severity":1,"message":"503","line":47,"column":10,"nodeType":"463","messageId":"464","endLine":47,"endColumn":14},{"ruleId":"461","severity":1,"message":"504","line":47,"column":16,"nodeType":"463","messageId":"464","endLine":47,"endColumn":23},{"ruleId":"453","severity":1,"message":"465","line":79,"column":6,"nodeType":"455","endLine":79,"endColumn":14,"suggestions":"505"},{"ruleId":"461","severity":1,"message":"506","line":1,"column":10,"nodeType":"463","messageId":"464","endLine":1,"endColumn":17},{"ruleId":"461","severity":1,"message":"507","line":4,"column":28,"nodeType":"463","messageId":"464","endLine":4,"endColumn":43},{"ruleId":"461","severity":1,"message":"508","line":5,"column":9,"nodeType":"463","messageId":"464","endLine":5,"endColumn":13},{"ruleId":"461","severity":1,"message":"462","line":7,"column":10,"nodeType":"463","messageId":"464","endLine":7,"endColumn":19},{"ruleId":"461","severity":1,"message":"509","line":8,"column":10,"nodeType":"463","messageId":"464","endLine":8,"endColumn":16},{"ruleId":"461","severity":1,"message":"492","line":10,"column":14,"nodeType":"463","messageId":"464","endLine":10,"endColumn":16},{"ruleId":"461","severity":1,"message":"510","line":15,"column":8,"nodeType":"463","messageId":"464","endLine":15,"endColumn":12},{"ruleId":"461","severity":1,"message":"511","line":16,"column":8,"nodeType":"463","messageId":"464","endLine":16,"endColumn":15},{"ruleId":"461","severity":1,"message":"512","line":18,"column":8,"nodeType":"463","messageId":"464","endLine":18,"endColumn":18},{"ruleId":"453","severity":1,"message":"465","line":27,"column":4,"nodeType":"455","endLine":27,"endColumn":6,"suggestions":"513"},{"ruleId":"461","severity":1,"message":"514","line":4,"column":11,"nodeType":"463","messageId":"464","endLine":4,"endColumn":19},{"ruleId":"461","severity":1,"message":"485","line":8,"column":28,"nodeType":"463","messageId":"464","endLine":8,"endColumn":34},{"ruleId":"461","severity":1,"message":"515","line":15,"column":10,"nodeType":"463","messageId":"464","endLine":15,"endColumn":16},{"ruleId":"461","severity":1,"message":"462","line":16,"column":10,"nodeType":"463","messageId":"464","endLine":16,"endColumn":19},{"ruleId":"461","severity":1,"message":"492","line":17,"column":14,"nodeType":"463","messageId":"464","endLine":17,"endColumn":16},{"ruleId":"453","severity":1,"message":"465","line":33,"column":5,"nodeType":"455","endLine":33,"endColumn":7,"suggestions":"516"},{"ruleId":"461","severity":1,"message":"514","line":2,"column":11,"nodeType":"463","messageId":"464","endLine":2,"endColumn":19},{"ruleId":"461","severity":1,"message":"517","line":9,"column":10,"nodeType":"463","messageId":"464","endLine":9,"endColumn":20},{"ruleId":"461","severity":1,"message":"462","line":12,"column":10,"nodeType":"463","messageId":"464","endLine":12,"endColumn":19},{"ruleId":"461","severity":1,"message":"509","line":13,"column":10,"nodeType":"463","messageId":"464","endLine":13,"endColumn":16},{"ruleId":"461","severity":1,"message":"518","line":14,"column":10,"nodeType":"463","messageId":"464","endLine":14,"endColumn":12},{"ruleId":"461","severity":1,"message":"492","line":14,"column":14,"nodeType":"463","messageId":"464","endLine":14,"endColumn":16},{"ruleId":"461","severity":1,"message":"519","line":17,"column":8,"nodeType":"463","messageId":"464","endLine":17,"endColumn":10},{"ruleId":"461","severity":1,"message":"520","line":18,"column":10,"nodeType":"463","messageId":"464","endLine":18,"endColumn":13},{"ruleId":"453","severity":1,"message":"521","line":116,"column":3,"nodeType":"455","endLine":116,"endColumn":5,"suggestions":"522"},{"ruleId":"461","severity":1,"message":"520","line":4,"column":10,"nodeType":"463","messageId":"464","endLine":4,"endColumn":13},{"ruleId":"461","severity":1,"message":"509","line":5,"column":9,"nodeType":"463","messageId":"464","endLine":5,"endColumn":15},{"ruleId":"461","severity":1,"message":"523","line":6,"column":8,"nodeType":"463","messageId":"464","endLine":6,"endColumn":14},{"ruleId":"461","severity":1,"message":"524","line":8,"column":9,"nodeType":"463","messageId":"464","endLine":8,"endColumn":21},{"ruleId":"461","severity":1,"message":"525","line":9,"column":10,"nodeType":"463","messageId":"464","endLine":9,"endColumn":14},{"ruleId":"461","severity":1,"message":"526","line":9,"column":16,"nodeType":"463","messageId":"464","endLine":9,"endColumn":30},{"ruleId":"461","severity":1,"message":"527","line":17,"column":10,"nodeType":"463","messageId":"464","endLine":17,"endColumn":12},{"ruleId":"461","severity":1,"message":"528","line":19,"column":11,"nodeType":"463","messageId":"464","endLine":19,"endColumn":17},{"ruleId":"453","severity":1,"message":"465","line":23,"column":7,"nodeType":"455","endLine":23,"endColumn":9,"suggestions":"529"},{"ruleId":"461","severity":1,"message":"530","line":1,"column":10,"nodeType":"463","messageId":"464","endLine":1,"endColumn":19},{"ruleId":"461","severity":1,"message":"520","line":4,"column":10,"nodeType":"463","messageId":"464","endLine":4,"endColumn":13},{"ruleId":"461","severity":1,"message":"531","line":26,"column":19,"nodeType":"463","messageId":"464","endLine":26,"endColumn":26},{"ruleId":"461","severity":1,"message":"484","line":1,"column":21,"nodeType":"463","messageId":"464","endLine":1,"endColumn":29},{"ruleId":"461","severity":1,"message":"520","line":4,"column":10,"nodeType":"463","messageId":"464","endLine":4,"endColumn":13},{"ruleId":"461","severity":1,"message":"489","line":7,"column":10,"nodeType":"463","messageId":"464","endLine":7,"endColumn":15},{"ruleId":"461","severity":1,"message":"490","line":7,"column":17,"nodeType":"463","messageId":"464","endLine":7,"endColumn":19},{"ruleId":"461","severity":1,"message":"491","line":7,"column":21,"nodeType":"463","messageId":"464","endLine":7,"endColumn":23},{"ruleId":"461","severity":1,"message":"515","line":8,"column":10,"nodeType":"463","messageId":"464","endLine":8,"endColumn":16},{"ruleId":"461","severity":1,"message":"462","line":9,"column":10,"nodeType":"463","messageId":"464","endLine":9,"endColumn":19},{"ruleId":"461","severity":1,"message":"525","line":9,"column":21,"nodeType":"463","messageId":"464","endLine":9,"endColumn":25},{"ruleId":"453","severity":1,"message":"532","line":28,"column":7,"nodeType":"455","endLine":28,"endColumn":9,"suggestions":"533"},{"ruleId":"461","severity":1,"message":"534","line":6,"column":10,"nodeType":"463","messageId":"464","endLine":6,"endColumn":21},{"ruleId":"461","severity":1,"message":"535","line":8,"column":10,"nodeType":"463","messageId":"464","endLine":8,"endColumn":19},{"ruleId":"461","severity":1,"message":"514","line":10,"column":11,"nodeType":"463","messageId":"464","endLine":10,"endColumn":19},{"ruleId":"461","severity":1,"message":"462","line":13,"column":10,"nodeType":"463","messageId":"464","endLine":13,"endColumn":19},{"ruleId":"461","severity":1,"message":"492","line":14,"column":14,"nodeType":"463","messageId":"464","endLine":14,"endColumn":16},{"ruleId":"461","severity":1,"message":"536","line":23,"column":11,"nodeType":"463","messageId":"464","endLine":23,"endColumn":21},{"ruleId":"461","severity":1,"message":"537","line":28,"column":11,"nodeType":"463","messageId":"464","endLine":28,"endColumn":16},{"ruleId":"453","severity":1,"message":"538","line":36,"column":8,"nodeType":"455","endLine":36,"endColumn":10,"suggestions":"539"},{"ruleId":"453","severity":1,"message":"540","line":43,"column":8,"nodeType":"455","endLine":43,"endColumn":16,"suggestions":"541"},{"ruleId":"453","severity":1,"message":"542","line":49,"column":8,"nodeType":"455","endLine":49,"endColumn":16,"suggestions":"543"},{"ruleId":"470","severity":1,"message":"476","line":90,"column":35,"nodeType":"472","messageId":"473","endLine":90,"endColumn":37},{"ruleId":"470","severity":1,"message":"476","line":126,"column":35,"nodeType":"472","messageId":"473","endLine":126,"endColumn":37},{"ruleId":"470","severity":1,"message":"476","line":207,"column":40,"nodeType":"472","messageId":"473","endLine":207,"endColumn":42},{"ruleId":"544","severity":1,"message":"545","line":217,"column":49,"nodeType":"546","messageId":"547","endLine":217,"endColumn":51},{"ruleId":"470","severity":1,"message":"476","line":231,"column":56,"nodeType":"472","messageId":"473","endLine":231,"endColumn":58},{"ruleId":"461","severity":1,"message":"462","line":7,"column":10,"nodeType":"463","messageId":"464","endLine":7,"endColumn":19},{"ruleId":"461","severity":1,"message":"492","line":8,"column":14,"nodeType":"463","messageId":"464","endLine":8,"endColumn":16},{"ruleId":"453","severity":1,"message":"465","line":21,"column":8,"nodeType":"455","endLine":21,"endColumn":10,"suggestions":"548"},{"ruleId":"461","severity":1,"message":"549","line":4,"column":10,"nodeType":"463","messageId":"464","endLine":4,"endColumn":19},{"ruleId":"461","severity":1,"message":"492","line":8,"column":14,"nodeType":"463","messageId":"464","endLine":8,"endColumn":16},{"ruleId":"453","severity":1,"message":"550","line":32,"column":8,"nodeType":"455","endLine":32,"endColumn":10,"suggestions":"551"},{"ruleId":"453","severity":1,"message":"552","line":46,"column":8,"nodeType":"455","endLine":46,"endColumn":21,"suggestions":"553"},{"ruleId":"461","severity":1,"message":"554","line":2,"column":23,"nodeType":"463","messageId":"464","endLine":2,"endColumn":34},{"ruleId":"461","severity":1,"message":"549","line":4,"column":10,"nodeType":"463","messageId":"464","endLine":4,"endColumn":19},{"ruleId":"461","severity":1,"message":"462","line":7,"column":9,"nodeType":"463","messageId":"464","endLine":7,"endColumn":18},{"ruleId":"461","severity":1,"message":"555","line":7,"column":26,"nodeType":"463","messageId":"464","endLine":7,"endColumn":31},{"ruleId":"461","severity":1,"message":"492","line":9,"column":14,"nodeType":"463","messageId":"464","endLine":9,"endColumn":16},{"ruleId":"461","severity":1,"message":"556","line":30,"column":74,"nodeType":"463","messageId":"464","endLine":30,"endColumn":78},{"ruleId":"461","severity":1,"message":"492","line":3,"column":14,"nodeType":"463","messageId":"464","endLine":3,"endColumn":16},{"ruleId":"461","severity":1,"message":"557","line":4,"column":9,"nodeType":"463","messageId":"464","endLine":4,"endColumn":18},{"ruleId":"461","severity":1,"message":"558","line":4,"column":20,"nodeType":"463","messageId":"464","endLine":4,"endColumn":25},{"ruleId":"544","severity":1,"message":"559","line":66,"column":32,"nodeType":"546","messageId":"560","endLine":66,"endColumn":34},{"ruleId":"470","severity":1,"message":"476","line":22,"column":23,"nodeType":"472","messageId":"473","endLine":22,"endColumn":25},{"ruleId":"470","severity":1,"message":"476","line":23,"column":23,"nodeType":"472","messageId":"473","endLine":23,"endColumn":25},{"ruleId":"470","severity":1,"message":"476","line":24,"column":23,"nodeType":"472","messageId":"473","endLine":24,"endColumn":25},{"ruleId":"461","severity":1,"message":"489","line":6,"column":9,"nodeType":"463","messageId":"464","endLine":6,"endColumn":14},{"ruleId":"461","severity":1,"message":"491","line":6,"column":16,"nodeType":"463","messageId":"464","endLine":6,"endColumn":18},{"ruleId":"461","severity":1,"message":"490","line":6,"column":20,"nodeType":"463","messageId":"464","endLine":6,"endColumn":22},{"ruleId":"461","severity":1,"message":"462","line":7,"column":9,"nodeType":"463","messageId":"464","endLine":7,"endColumn":18},{"ruleId":"461","severity":1,"message":"555","line":7,"column":26,"nodeType":"463","messageId":"464","endLine":7,"endColumn":31},{"ruleId":"461","severity":1,"message":"492","line":9,"column":14,"nodeType":"463","messageId":"464","endLine":9,"endColumn":16},{"ruleId":"461","severity":1,"message":"462","line":11,"column":9,"nodeType":"463","messageId":"464","endLine":11,"endColumn":18},{"ruleId":"461","severity":1,"message":"555","line":11,"column":26,"nodeType":"463","messageId":"464","endLine":11,"endColumn":31},{"ruleId":"461","severity":1,"message":"492","line":12,"column":14,"nodeType":"463","messageId":"464","endLine":12,"endColumn":16},{"ruleId":"453","severity":1,"message":"465","line":23,"column":8,"nodeType":"455","endLine":23,"endColumn":10,"suggestions":"561"},{"ruleId":"461","severity":1,"message":"534","line":6,"column":10,"nodeType":"463","messageId":"464","endLine":6,"endColumn":21},{"ruleId":"461","severity":1,"message":"462","line":11,"column":10,"nodeType":"463","messageId":"464","endLine":11,"endColumn":19},{"ruleId":"461","severity":1,"message":"509","line":12,"column":10,"nodeType":"463","messageId":"464","endLine":12,"endColumn":16},{"ruleId":"461","severity":1,"message":"518","line":13,"column":10,"nodeType":"463","messageId":"464","endLine":13,"endColumn":12},{"ruleId":"461","severity":1,"message":"492","line":13,"column":14,"nodeType":"463","messageId":"464","endLine":13,"endColumn":16},{"ruleId":"453","severity":1,"message":"538","line":24,"column":8,"nodeType":"455","endLine":24,"endColumn":10,"suggestions":"562"},{"ruleId":"467","severity":1,"message":"468","line":38,"column":21,"nodeType":"469","endLine":38,"endColumn":76},{"ruleId":"461","severity":1,"message":"514","line":4,"column":11,"nodeType":"463","messageId":"464","endLine":4,"endColumn":19},{"ruleId":"461","severity":1,"message":"517","line":11,"column":10,"nodeType":"463","messageId":"464","endLine":11,"endColumn":20},{"ruleId":"461","severity":1,"message":"563","line":15,"column":10,"nodeType":"463","messageId":"464","endLine":15,"endColumn":18},{"ruleId":"461","severity":1,"message":"462","line":18,"column":10,"nodeType":"463","messageId":"464","endLine":18,"endColumn":19},{"ruleId":"461","severity":1,"message":"492","line":19,"column":14,"nodeType":"463","messageId":"464","endLine":19,"endColumn":16},{"ruleId":"453","severity":1,"message":"465","line":41,"column":7,"nodeType":"455","endLine":41,"endColumn":15,"suggestions":"564"},{"ruleId":"461","severity":1,"message":"462","line":10,"column":10,"nodeType":"463","messageId":"464","endLine":10,"endColumn":19},{"ruleId":"461","severity":1,"message":"492","line":12,"column":14,"nodeType":"463","messageId":"464","endLine":12,"endColumn":16},{"ruleId":"453","severity":1,"message":"465","line":25,"column":8,"nodeType":"455","endLine":25,"endColumn":10,"suggestions":"565"},{"ruleId":"544","severity":1,"message":"559","line":24,"column":43,"nodeType":"546","messageId":"560","endLine":24,"endColumn":45},{"ruleId":"461","severity":1,"message":"566","line":2,"column":58,"nodeType":"463","messageId":"464","endLine":2,"endColumn":78},{"ruleId":"461","severity":1,"message":"567","line":2,"column":186,"nodeType":"463","messageId":"464","endLine":2,"endColumn":196},{"ruleId":"461","severity":1,"message":"568","line":32,"column":13,"nodeType":"463","messageId":"464","endLine":32,"endColumn":17},{"ruleId":"467","severity":1,"message":"468","line":18,"column":21,"nodeType":"469","endLine":18,"endColumn":92},{"ruleId":"467","severity":1,"message":"468","line":24,"column":21,"nodeType":"469","endLine":24,"endColumn":66},{"ruleId":"467","severity":1,"message":"468","line":32,"column":21,"nodeType":"469","endLine":32,"endColumn":71},{"ruleId":"467","severity":1,"message":"468","line":38,"column":21,"nodeType":"469","endLine":38,"endColumn":66},{"ruleId":"467","severity":1,"message":"468","line":46,"column":21,"nodeType":"469","endLine":46,"endColumn":65},{"ruleId":"467","severity":1,"message":"468","line":39,"column":17,"nodeType":"469","endLine":39,"endColumn":64},{"ruleId":"467","severity":1,"message":"468","line":43,"column":17,"nodeType":"469","endLine":43,"endColumn":64},{"ruleId":"467","severity":1,"message":"468","line":44,"column":17,"nodeType":"469","endLine":44,"endColumn":64},{"ruleId":"467","severity":1,"message":"468","line":48,"column":17,"nodeType":"469","endLine":48,"endColumn":137},{"ruleId":"470","severity":1,"message":"471","line":48,"column":100,"nodeType":"472","messageId":"473","endLine":48,"endColumn":102},{"ruleId":"467","severity":1,"message":"468","line":49,"column":17,"nodeType":"469","endLine":49,"endColumn":64},{"ruleId":"569","severity":1,"message":"570","line":15,"column":1,"nodeType":"571","endLine":78,"endColumn":2},{"ruleId":"461","severity":1,"message":"572","line":2,"column":9,"nodeType":"463","messageId":"464","endLine":2,"endColumn":17},{"ruleId":"461","severity":1,"message":"573","line":2,"column":19,"nodeType":"463","messageId":"464","endLine":2,"endColumn":29},{"ruleId":"461","severity":1,"message":"574","line":2,"column":31,"nodeType":"463","messageId":"464","endLine":2,"endColumn":36},{"ruleId":"461","severity":1,"message":"575","line":2,"column":38,"nodeType":"463","messageId":"464","endLine":2,"endColumn":49},{"ruleId":"461","severity":1,"message":"576","line":2,"column":102,"nodeType":"463","messageId":"464","endLine":2,"endColumn":117},{"ruleId":"461","severity":1,"message":"577","line":2,"column":119,"nodeType":"463","messageId":"464","endLine":2,"endColumn":132},{"ruleId":"569","severity":1,"message":"570","line":14,"column":1,"nodeType":"571","endLine":50,"endColumn":2},{"ruleId":"569","severity":1,"message":"570","line":15,"column":1,"nodeType":"571","endLine":58,"endColumn":6},{"ruleId":"569","severity":1,"message":"570","line":16,"column":1,"nodeType":"571","endLine":68,"endColumn":2},{"ruleId":"461","severity":1,"message":"566","line":2,"column":194,"nodeType":"463","messageId":"464","endLine":2,"endColumn":214},{"ruleId":"569","severity":1,"message":"570","line":22,"column":1,"nodeType":"571","endLine":156,"endColumn":2},{"ruleId":"461","severity":1,"message":"506","line":1,"column":10,"nodeType":"463","messageId":"464","endLine":1,"endColumn":17},{"ruleId":"461","severity":1,"message":"510","line":9,"column":9,"nodeType":"463","messageId":"464","endLine":9,"endColumn":13},{"ruleId":"457","replacedBy":"578"},{"ruleId":"459","replacedBy":"579"},{"ruleId":"461","severity":1,"message":"530","line":1,"column":10,"nodeType":"463","messageId":"464","endLine":1,"endColumn":19},{"ruleId":"461","severity":1,"message":"580","line":4,"column":16,"nodeType":"463","messageId":"464","endLine":4,"endColumn":20},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dateOpen'. Either include it or remove the dependency array.","ArrayExpression",["581"],"no-native-reassign",["582"],"no-negated-in-lhs",["583"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["584"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Thin' is defined but never used.","'Regular' is defined but never used.","Expected '===' and instead saw '=='.","React Hook useEffect has a missing dependency: 'project.sprints'. Either include it or remove the dependency array.",["585"],"React Hook useEffect has a missing dependency: 'project.dateFinish'. Either include it or remove the dependency array.",["586"],"no-self-assign","'sum' is assigned to itself.","selfAssignment","'useState' is defined but never used.","'useRef' is defined but never used.","'FormProvider' is defined but never used.","'useFormContext' is defined but never used.","'Controller' is defined but never used.","'Table' is defined but never used.","'Td' is defined but never used.","'Tr' is defined but never used.","'H3' is defined but never used.","'msg' is assigned a value but never used.","'reset' is assigned a value but never used.","'watch' is assigned a value but never used.","'prepend' is assigned a value but never used.","'swap' is assigned a value but never used.","'move' is assigned a value but never used.","'insert' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'id', and 'user'. Either include them or remove the dependency array.",["587"],"'innerBackend' is defined but never used.","'load' is assigned a value but never used.","'setLoad' is assigned a value but never used.",["588"],"'NavLink' is defined but never used.","'userPermissions' is defined but never used.","'News' is defined but never used.","'Button' is defined but never used.","'user' is assigned a value but never used.","'admBody' is assigned a value but never used.","'newsScroll' is assigned a value but never used.",["589"],"'Redirect' is defined but never used.","'Status' is defined but never used.",["590"],"'allTickets' is defined but never used.","'H1' is defined but never used.","'Me' is defined but never used.","'url' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'user'. Either include them or remove the dependency array.",["591"],"'styled' is defined but never used.","'changeLoaded' is defined but never used.","'Card' is defined but never used.","'SmallContainer' is defined but never used.","'id' is assigned a value but never used.","'loaded' is assigned a value but never used.",["592"],"'useEffect' is defined but never used.","'setText' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'history', and 'id'. Either include them or remove the dependency array.",["593"],"'useLocation' is defined but never used.","'getTicket' is defined but never used.","'sprintLoad' is assigned a value but never used.","'users' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["594"],"React Hook useEffect has missing dependencies: 'dispatch' and 'project.crypt'. Either include them or remove the dependency array.",["595"],"React Hook useEffect has missing dependencies: 'history', 'id', and 'sprint.id'. Either include them or remove the dependency array.",["596"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["597"],"'newTicket' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'id', and 'project'. Either include them or remove the dependency array.",["598"],"React Hook useEffect has missing dependencies: 'formData', 'project.city', 'project.customer', 'project.dateFinish', 'project.dateStart', 'project.stage', 'project.title', and 'project.type'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["599"],"'useSelector' is defined but never used.","'Title' is defined but never used.","'area' is assigned a value but never used.","'Container' is assigned a value but never used.","'Title' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside",["600"],["601"],"'loadUser' is defined but never used.",["602"],["603"],"'ADD_SPRINT_TO_CHOSEN' is defined but never used.","'PROJECT_ID' is defined but never used.","'file' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'REGISTER' is defined but never used.","'AUTH_ERROR' is defined but never used.","'LOGIN' is defined but never used.","'USER_LOADED' is defined but never used.","'CHANGE_USERDATA' is defined but never used.","'CHANGE_AVATAR' is defined but never used.",["582"],["583"],"'Bold' is defined but never used.",{"desc":"604","fix":"605"},"no-global-assign","no-unsafe-negation",{"desc":"606","fix":"607"},{"desc":"608","fix":"609"},{"desc":"610","fix":"611"},{"desc":"612","fix":"613"},{"desc":"614","fix":"615"},{"desc":"606","fix":"616"},{"desc":"606","fix":"617"},{"desc":"618","fix":"619"},{"desc":"606","fix":"620"},{"desc":"621","fix":"622"},{"desc":"623","fix":"624"},{"desc":"625","fix":"626"},{"desc":"627","fix":"628"},{"desc":"606","fix":"629"},{"desc":"630","fix":"631"},{"desc":"632","fix":"633"},{"desc":"606","fix":"634"},{"desc":"623","fix":"635"},{"desc":"614","fix":"636"},{"desc":"606","fix":"637"},"Update the dependencies array to be: [dateOpen]",{"range":"638","text":"639"},"Update the dependencies array to be: [dispatch]",{"range":"640","text":"641"},"Update the dependencies array to be: [project.sprints, sprints]",{"range":"642","text":"643"},"Update the dependencies array to be: [project.dateFinish]",{"range":"644","text":"645"},"Update the dependencies array to be: [dispatch, id, user]",{"range":"646","text":"647"},"Update the dependencies array to be: [dispatch, loaded]",{"range":"648","text":"649"},{"range":"650","text":"641"},{"range":"651","text":"641"},"Update the dependencies array to be: [dispatch, user]",{"range":"652","text":"653"},{"range":"654","text":"641"},"Update the dependencies array to be: [dispatch, history, id]",{"range":"655","text":"656"},"Update the dependencies array to be: [dispatch, id]",{"range":"657","text":"658"},"Update the dependencies array to be: [dispatch, loaded, project.crypt]",{"range":"659","text":"660"},"Update the dependencies array to be: [history, id, reload, sprint.id]",{"range":"661","text":"662"},{"range":"663","text":"641"},"Update the dependencies array to be: [dispatch, id, project]",{"range":"664","text":"665"},"Update the dependencies array to be: [formData, loadProject, project.city, project.customer, project.dateFinish, project.dateStart, project.stage, project.title, project.type]",{"range":"666","text":"667"},{"range":"668","text":"641"},{"range":"669","text":"658"},{"range":"670","text":"649"},{"range":"671","text":"641"},[600,602],"[dateOpen]",[924,926],"[dispatch]",[793,802],"[project.sprints, sprints]",[1043,1045],"[project.dateFinish]",[1982,1984],"[dispatch, id, user]",[2466,2474],"[dispatch, loaded]",[794,796],[931,933],[3110,3112],"[dispatch, user]",[876,878],[962,964],"[dispatch, history, id]",[1651,1653],"[dispatch, id]",[1771,1779],"[dispatch, loaded, project.crypt]",[1901,1909],"[history, id, reload, sprint.id]",[724,726],[994,996],"[dispatch, id, project]",[1336,1349],"[formData, loadProject, project.city, project.customer, project.dateFinish, project.dateStart, project.stage, project.title, project.type]",[612,614],[694,696],[1055,1063],[554,556]]